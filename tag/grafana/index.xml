<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grafana | 云原生社区（中国）</title>
    <link>https://cloudnative.to/tag/grafana/</link>
      <atom:link href="https://cloudnative.to/tag/grafana/index.xml" rel="self" type="application/rss+xml" />
    <description>Grafana</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Fri, 29 Dec 2023 11:00:00 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/media/sharing.png</url>
      <title>Grafana</title>
      <link>https://cloudnative.to/tag/grafana/</link>
    </image>
    
    <item>
      <title>令人惊叹的 Grafana 仪表盘用途：2023 年最有创意和有趣的用例分享</title>
      <link>https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/</link>
      <pubDate>Fri, 29 Dec 2023 11:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/</guid>
      <description>&lt;h2 id=&#34;编者按&#34;&gt;编者按&lt;/h2&gt;
&lt;p&gt;本文译自：&lt;a href=&#34;https://grafana.com/blog/2023/12/27/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana dashboards in 2023: Memorable use cases of the year&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;摘要：这篇文章回顾了 2023 年社区中一些令人印象深刻的 Grafana 仪表盘的用例，它们展示了 Grafana 的多样性和创造力，以及如何用可视化的方式监控和分析各种数据和场景。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;p&gt;随着每年使用 &lt;a href=&#34;https://grafana.com/oss/grafana?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana&lt;/a&gt; 的用户人数增加，人们使用 &lt;a href=&#34;https://grafana.com/grafana/dashboards/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana 仪表板&lt;/a&gt; 的原因也日益多样化。在 2023 年，我们社区内外的成员分享了一些令人难以置信的专业和个人项目，包括 Grafana 如何帮助他们成功发射火箭，减少碳排放，甚至帮助平衡国家电网。让我们回顾一下今年看到的一些最令人难忘的仪表板：&lt;/p&gt;
&lt;h2 id=&#34;获奖者&#34;&gt;获奖者&lt;/h2&gt;
&lt;p&gt;Grafana 在六月份迎来了 10 岁的生日，为了庆祝这一时刻，我们首次推出了 &lt;a href=&#34;https://grafana.com/about/events/grafanacon/2023/golden-grot-awards/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Golden Grot 奖项&lt;/a&gt;，这些奖项帮助突出显示了我们社区创建的令人惊叹的 Grafana 仪表板。但今年并不是唯一一个与仪表板相关的胜利：今年三月，加州大学洛杉矶分校的火箭工程团队使用 Grafana 作为测试和发射过程中的可视化工具，在一次业余火箭竞赛中赢得了冠军，并打破了世界纪录。&lt;/p&gt;
&lt;h3 id=&#34;监控能源基础设施httpsgrafanacomblog20230615meet-our-golden-grot-awards-grand-prize-winnerspgblogplcmtbody-txt&#34;&gt;&lt;a href=&#34;https://grafana.com/blog/2023/06/15/meet-our-golden-grot-awards-grand-prize-winners/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;监控能源基础设施&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Golden Grot 奖项有两位大奖得主，在个人仪表板类别中，奖项授予了荷兰 Erasmus 经济学院的研究生 Nicky Sonnemans。他用仪表板监控 &lt;a href=&#34;https://grafana.sonnem.nl/d/uCV3CiPVz/european-energy-infastructure-golden-grot?orgId=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;欧洲能源基础设施的当前状态&lt;/a&gt; — 具体包括有关天然气储存、天然气在欧洲的实际流动、电力生成和能源价格的当前和历史信息。Sonnemans 创建这个仪表板的灵感来自于他想要将能源数据可视化到一个集中的地方，以便他可以轻松地实时发现任何异常情况并收到任何必要的警报。他补充说：“我的主要动机是展示 Grafana 可以用作商业智能工具，而不仅仅是用于技术监控和服务器监控。”&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-nicky-sonnemans-的-golden-grot-奖获奖仪表板&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Nicky Sonnemans 的 Golden Grot 奖获奖仪表板&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f1_hu18221844842959810489.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f1_hu8858482443459278245.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f1_hu863223689272544258.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f1_hu18221844842959810489.webp&#34;
               width=&#34;760&#34;
               height=&#34;645&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Nicky Sonnemans 的 Golden Grot 奖获奖仪表板
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;解决工作中的可观测性问题httpsgrafanacomblog20230615meet-our-golden-grot-awards-grand-prize-winnerspgblogplcmtbody-txt&#34;&gt;&lt;a href=&#34;https://grafana.com/blog/2023/06/15/meet-our-golden-grot-awards-grand-prize-winners/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;解决工作中的可观测性问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在今年的 Golden Grot 奖项的专业仪表板类别中，获奖者是南非约翰内斯堡的 IT 专业人员 Raymond Sowden。他是 RadixTrie PTY LTD 的 CNC 团队负责人，专注于 Oracle 的 JD Edwards EnterpriseOne ERP (JDE)。他创建了获奖的 Grafana 仪表板来解决工作中的一个重大可观测性问题：“我们没有一个单一的监控视图来监控 JDE，所以我们的仪表板为我们提供了对 JDE 的整体健康和性能的无与伦比的见解。”他说，一个重要时刻是当他们能够看到后端和前端发生了什么时：“那时我们知道我们有了特别的东西。”&lt;/p&gt;
&lt;p&gt;Raymond 的仪表板提供了对系统健康状况的高级概述，但各种小部件链接到了更多技术数据的详细仪表板。它被他公司的 JDE 技术人员使用，以及他们客户的技术人员，一直到执行层级。他说：“我们通过提供实时见解和指标来减少了日常检查、日常报告等人工工作的工作量。”&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-raymond-sowden-的-golden-grot-奖获奖仪表板&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Raymond Sowden 的 Golden Grot 奖获奖仪表板&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f2_hu17439287760839810591.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f2_hu14024831625236733302.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f2_hu17181038386559314148.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f2_hu17439287760839810591.webp&#34;
               width=&#34;760&#34;
               height=&#34;367&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Raymond Sowden 的 Golden Grot 奖获奖仪表板
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;在火箭发射过程中提供数据可见性httpsgrafanacomblog20230421how-grafana-helped-a-rocket-engineering-team-break-a-world-recordpgblogplcmtbody-txt&#34;&gt;&lt;a href=&#34;https://grafana.com/blog/2023/04/21/how-grafana-helped-a-rocket-engineering-team-break-a-world-record/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在火箭发射过程中提供数据可见性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在一篇关于赢得 &lt;a href=&#34;https://friendsofamateurrocketry.org/dpf-challenge/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dollar Per Foot 挑战&lt;/a&gt; 并创下液体火箭最高高度的大学生和软件工程师 Philip Do 的博客文章中，他和来自 &lt;a href=&#34;http://rocketproject.seas.ucla.edu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UCLA 火箭项目&lt;/a&gt; 的队友解释了他们是如何依赖 &lt;a href=&#34;https://grafana.com/oss/grafana?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana&lt;/a&gt; 来进行工作的。“通过我们的仪表板，我们可以快速可视化数据，并在测试和发射的关键阶段监控潜在的硬件问题，”他说。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-rocket-project-的发射仪表板中的传感器和阀门数据&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Rocket Project 的发射仪表板中的传感器和阀门数据&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f3_hu1749907007266798716.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f3_hu1691196081122476958.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f3_hu2821222041904701256.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f3_hu1749907007266798716.webp&#34;
               width=&#34;760&#34;
               height=&#34;476&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Rocket Project 的发射仪表板中的传感器和阀门数据
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;家居&#34;&gt;家居&lt;/h2&gt;
&lt;p&gt;Grafana Labs 坚定地相信工作与生活的平衡，但当你对 Grafana 仪表板的吸引力和信息丰富性如此熟悉时，难以抵挡创建一个用于监视家庭事物的诱惑。我们在 2023 年展示的 Grafanista 制作的项目包括一个&lt;a href=&#34;https://grafana.com/blog/2023/05/19/monitoring-a-furnace-with-home-assistant-prometheus-and-grafana/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;可视化家用炉子的运行时间&lt;/a&gt;、一个&lt;a href=&#34;https://grafana.com/blog/2023/02/15/breathing-easy-with-grafana-dashboards-and-3d-printing/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;监控空气质量&lt;/a&gt;的项目，同时使用 3D 打印机，以及一个&lt;a href=&#34;https://grafana.com/blog/2023/10/23/monitor-temperature-and-humidity-with-grafana-and-raspberry-pi/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;跟踪温度和湿度&lt;/a&gt;的项目，用于监控滨海家庭。还有一个旨在监控 &lt;a href=&#34;https://www.plex.tv/your-media/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plex 媒体服务器&lt;/a&gt; 的项目，是 &lt;a href=&#34;https://grafana.com/blog/2023/04/28/plexporters-energize-how-we-monitor-plex-with-grafana/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;内部 homelab Slack 频道的三位 Grafanista 在一次黑客马拉松期间创建的&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;另一个值得注意的家庭项目来自公司外部：&lt;a href=&#34;https://grafana.com/about/events/grafanacon/2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GrafanaCON 2023&lt;/a&gt; 上，Toyota Racing Development 的高级 DevOps 工程师 Kyle Shelton 提供了一个演示，他介绍了如何将他在工作中使用的 &lt;a href=&#34;https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana Cloud&lt;/a&gt; 经验，用于在家中使用 Grafana Cloud Free &lt;a href=&#34;https://grafana.com/about/events/grafanacon/2023/session/triathlon-training-with-prometheus-python-grafana-cloud/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;监控个人三项铁人训练&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;从任何地方监测游泳池水位&#34;&gt;从任何地方监测游泳池水位&lt;/h3&gt;
&lt;p&gt;高级解决方案工程师 Brian LeBlanc 创建了一个 Grafana 仪表板，以便他可以监测自家游泳池的水位。这使他可以安心地进行了一次为期 10 天的旅行，而不会过度担心游泳池水泵可能遭受的潜在损害（更换费用：1000 美元）。在&lt;a href=&#34;https://grafana.com/blog/2023/08/14/how-to-monitor-pool-water-levels-from-anywhere-with-grafana/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;一篇博客文章&lt;/a&gt;中，他解释了他如何建立一个系统，其中包括一个名为 &lt;a href=&#34;https://www.rola-chem.com/m-3000-pool-sentry/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pool Sentry&lt;/a&gt; 的机械设备，一个 &lt;a href=&#34;https://www.link-tap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LinkTap G2S&lt;/a&gt;（一个连接到花园水管的物联网智能水控制器），以及一个 &lt;a href=&#34;https://weatherflow.com/tempest-home-weather-system/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tempest 天气站&lt;/a&gt;。他使用 Docker 运行了一个在 GitHub 上找到的 &lt;a href=&#34;https://github.com/nalbury/tempest-exporter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;exporter&lt;/a&gt;，并将数据导出到 &lt;a href=&#34;https://grafana.com/oss/prometheus/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prometheus&lt;/a&gt;，然后远程将指标数据写入了由 Grafana Mimir 提供支持的 &lt;a href=&#34;https://grafana.com/products/cloud/metrics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana Cloud Metrics&lt;/a&gt;。他解释说：“Tempest exporter 从 Tempest Cloud 中获取数据。然后，我的本地 Prometheus 实例会抓取这些数据并将其发布到 Grafana Cloud Metrics 中，以便我可以在 Grafana Cloud 中可视化它。”结果，他说：“我可以将两个物联网设备的数据汇总到一个窗口中，以评估水的消耗、降雨量和环境温度。”&lt;/p&gt;
&lt;p&gt;这个项目在多个方面都取得了成功：“作为一名新的 Grafanista，它为我提供了一些实际的用例，让我有机会亲自学习我们的产品，”他说。“在我和家人度假期间，它也一直运行得非常顺利。”&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-一个-grafana-仪表板的截图涵盖了大范围的时间包括水的使用数据降水和温度&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;一个 Grafana 仪表板的截图，涵盖了大范围的时间，包括水的使用数据、降水和温度。&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f4_hu15693370160595678351.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f4_hu9491927770473704521.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f4_hu18335451674300757946.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f4_hu15693370160595678351.webp&#34;
               width=&#34;760&#34;
               height=&#34;336&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      一个 Grafana 仪表板的截图，涵盖了大范围的时间，包括水的使用数据、降水和温度。
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;环境气候和能源消耗&#34;&gt;环境、气候和能源消耗&lt;/h2&gt;
&lt;p&gt;今年的许多杰出仪表板是作为环保使命的一部分创建的。Grafana Labs 的一个客户转向 Grafana，帮助减少对环境的影响。在另一个用例中，我们了解到 Grafana Cloud 在一次能源危机期间发挥了关键作用。我们还发现，Grafana Labs 的一名工程师曾经将 Grafana 作为可持续农业系统的一部分使用。&lt;/p&gt;
&lt;h3 id=&#34;减少数据中心的碳排放&#34;&gt;减少数据中心的碳排放&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sentrysoftware.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sentry Software&lt;/a&gt; 是 Hardware Sentry 的制造商，它是一款 IT 监控软件，其业务的很大一部分依赖于在其数据中心中维持最佳的温度条件，这一操作对公司的整体碳足迹有所贡献。&lt;/p&gt;
&lt;p&gt;最近，Sentry Software 开始采取措施，在位于巴黎的主要数据中心中降低电力消耗，以减少其碳排放。通过实施开放标准和 Grafana Labs 技术，他们开发了一个&lt;a href=&#34;https://grafana.com/grafana/dashboards/17229-hardware-sentry-site/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用 Grafana 仪表板监控电力使用情况&lt;/a&gt;的监控系统，以更高效地监测电力使用情况。最终结果是数据中心的空调能源使用减少了 19%，年度二氧化碳排放量减少了 7%。&lt;/p&gt;
&lt;p&gt;最好的部分是，由于整个监控系统是建立在开源解决方案和开放标准之上的，任何人都可以复制该公司的成功经验。Sentry Software CEO Bertrand Martin 在&lt;a href=&#34;https://grafana.com/about/events/grafanacon/2023/session/grafana-opentelemetry-to-reduce-electricity-usage-at-sentry-software/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GrafanaCON 2023 演讲&lt;/a&gt;中表示：“这个故事可以成为你的故事，你不需要复杂的企业解决方案。”&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-sentry-software-的-grafana-仪表板为更有效地跟踪其数据中心的碳足迹提供了有关能源消耗成本和排放的实时和累积数据&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Sentry Software 的 Grafana 仪表板为更有效地跟踪其数据中心的碳足迹提供了有关能源消耗、成本和排放的实时和累积数据。&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f5_hu6382822618192999423.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f5_hu14400009668208227237.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f5_hu18331537354472158026.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f5_hu6382822618192999423.webp&#34;
               width=&#34;760&#34;
               height=&#34;360&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Sentry Software 的 Grafana 仪表板为更有效地跟踪其数据中心的碳足迹提供了有关能源消耗、成本和排放的实时和累积数据。
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;在法国平衡电网&#34;&gt;在法国平衡电网&lt;/h3&gt;
&lt;p&gt;去年冬天，Flexcity —— 电动灵活性市场的市场领导者 —— 面临了前所未有的挑战：帮助法国电网运营商 &lt;a href=&#34;https://www.rte-france.com/en/home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RTE&lt;/a&gt; 在欧洲普遍的能源危机阴云笼罩下稳定法国国家电网。随着公司因其努力而上了新闻头条，Flexcity 的技术团队将 &lt;a href=&#34;https://grafana.com/products/cloud/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana Cloud&lt;/a&gt; 归功于帮助法国渡过了那个特别艰难的时期。利用 Grafana 仪表板，Flexcity 团队可以实时跟踪客户的能源消耗数据，从而在电网最需要的关键时刻节省了数千千瓦时电力。&lt;/p&gt;
&lt;p&gt;Flexcity 的 CTO Mathias Deshayes 表示：“当我们收到电网运营商的请求时，我们使用 Grafana 仪表板实时查看客户基础的能源和功率消耗和产量水平。我们在客户现场安装了小型设备，每隔四秒，我们的平台就会将他们的消耗发送到我们的平台，并在 Grafana 中显示出来。因此，我们在 Grafana 中有了我们组合的总和，我们可以在激活期间跟踪消耗，即当电网运营商要求设备上下调整功率以帮助平衡电网时。”&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-flexcity-比利时组合的-grafana-cloud-仪表板显示了公司客户和服务-kpi-的全球消耗&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Flexcity 比利时组合的 Grafana Cloud 仪表板，显示了公司客户和服务 KPI 的全球消耗。&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f6_hu1796082277492361466.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f6_hu15393511587537966416.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f6_hu10286619010594032130.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f6_hu1796082277492361466.webp&#34;
               width=&#34;760&#34;
               height=&#34;331&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Flexcity 比利时组合的 Grafana Cloud 仪表板，显示了公司客户和服务 KPI 的全球消耗。
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;监管小农场&#34;&gt;监管小农场&lt;/h3&gt;
&lt;p&gt;在加入 Grafana Labs 之前，高级解决方案工程师 Chris Wilkes 经营了一个鱼塘农场 —— 严格来说是一个水耕农场。 （水耕农业结合了养鱼业和水培，即在液体培养基中种植蔬菜。）Wilkes 是一名初学者农民，坦言在开始时遇到了很多问题。例如，有一次，他的所有鱼在晚上一台空气泵发生故障后死亡。&lt;/p&gt;
&lt;p&gt;在深入研究物联网领域之后，他说：“农场上的每一台机器都有一个微控制器。”随着时间的推移，农场上发展出了一个控制和监控系统，他使用 PubNub 查询了所有板，并将数据转储到运行在中央服务器上（一台旧的笔记本电脑放在集装箱中）的 PostgreSQL 数据库中。当他偶然发现 Grafana 时，他说：“就像走出黑暗洞穴进入光明。”&lt;/p&gt;
&lt;p&gt;Wilkes 经营了这个农场约五年。他说：“Grafana 的监控能力在我管理和改进农业技术方面发挥了重要作用。”他补充说，他计划有一天回到农业领域，将更加高级的 Grafana 技能与他对可持续性的热情结合起来。他说：“我们需要改变种植食物的方式，特别是在食物稀缺和不确定的地方。”&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-2016-年左右的-grafana-仪表板跟踪了农场的物联网数据&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;2016 年左右的 Grafana 仪表板，跟踪了农场的物联网数据。&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f7_hu4661636944307329489.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f7_hu12118003496546013070.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f7_hu5643900455970786609.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f7_hu4661636944307329489.webp&#34;
               width=&#34;760&#34;
               height=&#34;517&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      2016 年左右的 Grafana 仪表板，跟踪了农场的物联网数据。
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;户外&#34;&gt;户外&lt;/h2&gt;
&lt;p&gt;我们经常看到 Grafana 仪表板突然出现，但今年有两个特别引人注目。&lt;/p&gt;
&lt;h3 id=&#34;the-ocean-race&#34;&gt;The Ocean Race&lt;/h3&gt;
&lt;p&gt;参赛者在这个全球帆船比赛中环绕世界比赛，这意味着他们需要全天候监测包括 GPS 位置、风速以及空气和水温在内的数据。代表德国的 &lt;a href=&#34;https://www.theoceanrace.com/en/teams/team-malizia&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Team Malizia&lt;/a&gt;分享了&lt;a href=&#34;https://exocet.cloud/grafana/d/bsbc_7MGx/malizia-public-dashboard-the-ocean-race?orgId=15&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;帮助他们在艰难的六个月冒险中跟踪进展的 Grafana 仪表板&lt;/a&gt;。The Ocean Race 总部还展示了一些令人印象深刻的 Grafana 仪表板，以监测整个比赛。&lt;/p&gt;
&lt;h3 id=&#34;call-of-duty&#34;&gt;Call of Duty&lt;/h3&gt;
&lt;p&gt;Grafana 仪表板的现实世界示例并不新鲜，但它们也在虚拟世界中使用。下面的图像来自视频游戏 Call of Duty: Modern Warfare 2。&lt;/p&gt;
&lt;p&gt;Grafana Labs 的首席执行官兼联合创始人 Raj Dutt 在&lt;a href=&#34;https://grafana.com/about/events/grafanacon/2023/session/keynote-grafana-10/?pg=blog&amp;amp;plcmt=body-txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GrafanaCON 2023 主题演讲&lt;/a&gt;中说：“对于那些了解 Grafana 的人来说，这显然非常像 Grafana，从指针的样式、颜色方案以及一切都清晰可见。”“所以无论是谁在 Activision 是 Grafana 的粉丝并且负责这个，谢谢你！我们所有人都表示由衷的敬意。”&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-call-of-duty-视频游戏中的-grafana-仪表板截图&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Call of Duty 视频游戏中的 Grafana 仪表板截图&#34; srcset=&#34;
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f8_hu4092503091472369284.webp 400w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f8_hu16955323406776421686.webp 760w,
               /blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f8_hu16870755456012369398.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/grafana-dashboards-in-2023-memorable-use-cases-of-the-year/f8_hu4092503091472369284.webp&#34;
               width=&#34;760&#34;
               height=&#34;428&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Call of Duty 视频游戏中的 Grafana 仪表板截图
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我们期待在 2024 年看到更多令人惊叹的仪表板！&lt;/p&gt;
&lt;p&gt;想要与社区分享您的 Grafana 故事和仪表板吗？给我们发送邮件：&lt;a href=&#34;mailto:stories@grafana.com&#34;&gt;stories@grafana.com&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>云原生架构师进阶指南</title>
      <link>https://cloudnative.to/blog/advanced-guide-for-cloudnative-architects/</link>
      <pubDate>Wed, 14 Dec 2022 15:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/advanced-guide-for-cloudnative-architects/</guid>
      <description>&lt;p&gt;伴随着云计算的浪潮，云原生的概念也应运而生，从 2015 年 CNCF 云原生基金会的成立，已经持续高速发展了 7 年时间。而 Kubernetes 作为云原生的代表就像是一个全新的云操作系统，围绕着它诞生了丰富的上层应用和生态。&lt;/p&gt;
&lt;p&gt;迄今为止，CNCF 在其公布的云原生全景图中，显示了目前近 30 个领域、数百个项目的繁荣发展，云原生技术的广度和深度得到了前所未有的发展。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cncf-landscape&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./images/1.png&#34; alt=&#34;CNCF Landscape&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CNCF Landscape
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;面对这庞杂的技术领域和技术工具，我们往往不知道要从哪儿下手开始学习。即便掌握了云原生核心技术 Docker 和 K8s，不过在工程实践中，这远远是不够的。&lt;/p&gt;
&lt;p&gt;那当我们有了云原生基础之后，&lt;strong&gt;想要进一步实现职业晋升，我建议你从下面的几个方面去学习：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-云原生架构师必须掌握的技能&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./images/2.jpeg&#34; alt=&#34;云原生架构师必须掌握的技能&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      云原生架构师必须掌握的技能
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;总结来说，你需要聚焦在下面几个领域：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器和镜像：Docker&lt;/li&gt;
&lt;li&gt;持续集成：GitHub Action、Jenkins、Tekton&lt;/li&gt;
&lt;li&gt;镜像仓库：Harbor&lt;/li&gt;
&lt;li&gt;应用定义：Helm、Kustomize&lt;/li&gt;
&lt;li&gt;持续部署：FluxCD、ArgoCD&lt;/li&gt;
&lt;li&gt;秘钥管理：Vault&lt;/li&gt;
&lt;li&gt;容器编排：K8s&lt;/li&gt;
&lt;li&gt;网关：Ingress-Nginx&lt;/li&gt;
&lt;li&gt;日志：Grafana Loki、Fluentd&lt;/li&gt;
&lt;li&gt;监控：Grafana&lt;/li&gt;
&lt;li&gt;告警：Prometheus&lt;/li&gt;
&lt;li&gt;应用开发：Nocalhost&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，这些领域的项目在云原生工程实践中并不是独立的，&lt;strong&gt;你需要掌握并把它们连接起来，才能将项目迁移到云原生架构。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面对这么多的领域和技术，怎么学习它们才能更加高效呢？下面是根据我的学习经验总结的学习路径，你可以参考：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一阶段：学习 Docker 和 K8s 的基础知识；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二阶段：学习 CI/CD 领域的技术；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三阶段：学习日志、监控和告警领域的技术。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;三个学习阶段&#34;&gt;三个学习阶段&lt;/h2&gt;
&lt;h3 id=&#34;第一阶段&#34;&gt;第一阶段&lt;/h3&gt;
&lt;p&gt;在第一阶段，你需要学习 Docker 和 K8s 的基础知识。其中，Docker 相关的知识包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;镜像是什么，有什么作用？&lt;/li&gt;
&lt;li&gt;怎么将业务代码构建为镜像？&lt;/li&gt;
&lt;li&gt;如何选择合适的基础镜像？&lt;/li&gt;
&lt;li&gt;Docker 的其他基本操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在学习了 Docker 相关知识后，接下来就要开始学习 K8s 相关知识，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是 K8s 的工作负载？&lt;/li&gt;
&lt;li&gt;Service 的作用是什么？&lt;/li&gt;
&lt;li&gt;应用配置如何迁移？&lt;/li&gt;
&lt;li&gt;如何对外暴露服务？&lt;/li&gt;
&lt;li&gt;如何配置 HPA 扩缩容？&lt;/li&gt;
&lt;li&gt;Kubectl 的基本操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个阶段学习完成后，在工作中使用 Docker 和 K8s 基本上就没太大问题了。&lt;/p&gt;
&lt;h3 id=&#34;第二阶段&#34;&gt;第二阶段&lt;/h3&gt;
&lt;p&gt;当具备了 Docker 和 K8s 的基础知识后，接下来就需要学习 CI/CD 领域的技术了。其中，CI 领域包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何使用 Jenkins 自动构建镜像？&lt;/li&gt;
&lt;li&gt;如何使用 GitHub Action 自动构建镜像？&lt;/li&gt;
&lt;li&gt;如何自建 Tekton 构建镜像？&lt;/li&gt;
&lt;li&gt;如何使用 Tekton 搭建私有镜像仓库？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后，再深入学习 CD 领域的技术，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何定义应用，Helm 还是 Kustomize？&lt;/li&gt;
&lt;li&gt;如何使用 ArgoCD 搭建 GitOps 工作流？&lt;/li&gt;
&lt;li&gt;如何管理 GitOps 中的秘钥&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;到了这个阶段，也就具备在实际项目中搭建完整的 GitOps 工作流的能力了。&lt;/p&gt;
&lt;h3 id=&#34;第三阶段&#34;&gt;第三阶段&lt;/h3&gt;
&lt;p&gt;为了让分布式系统具有更好的可观测性，在第三阶段我们需要学习日志、监控和告警的知识，他们包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何使用 Loki 搭建轻量级的日志系统？&lt;/li&gt;
&lt;li&gt;如何使用 EFK 搭建日志系统？&lt;/li&gt;
&lt;li&gt;如何使用 Grafana 和 Prometheus 搭建监控系统？&lt;/li&gt;
&lt;li&gt;如何使用 Prometheus AlertManager 搭建告警系统？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;到了第三个阶段，你已经基本上掌握完整的云原生知识体系了。&lt;/p&gt;
&lt;h3 id=&#34;缺点&#34;&gt;缺点&lt;/h3&gt;
&lt;p&gt;这种学习方式适合有一定基础并且动手能力强的同学，它们缺少体系化的学习过程，当需要将不同领域的工具进行连接时缺少可参考的最佳实践的案例。&lt;/p&gt;
&lt;h2 id=&#34;选择体系化的课程&#34;&gt;选择体系化的课程&lt;/h2&gt;
&lt;p&gt;还有一种可行的学习方法是选择一门体系化的课程，这里我推荐王炜的极客时间新专栏《云原生架构与 GitOps 实战》。你可以从零上手，一步一步入门云原生，一次学习云原生的所有知识点。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-扫码报名&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./images/post.jpeg&#34; alt=&#34;扫码报名&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      扫码报名
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;也可以&lt;a href=&#34;https://time.geekbang.org/column/intro/100312001?code=PlMU9ITPlnun1QAjTGtDtNxkTtgSRZZzLJlQZHrEKtI%3D&amp;amp;utm_term=SPoster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击这里&lt;/a&gt;查看课程介绍&lt;/p&gt;
&lt;p&gt;这里也分享一张课程的学习路径，跟着这条路径，就可以高效地解决“怎么学”的问题。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-课程学习路径&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./images/3.jpg&#34; alt=&#34;课程学习路径&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      课程学习路径
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;课程目录&#34;&gt;课程目录&lt;/h3&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-课程目录&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./images/4.jpeg&#34; alt=&#34;课程目录&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      课程目录
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;关于王炜&#34;&gt;关于王炜&lt;/h3&gt;
&lt;p&gt;王炜，现在深圳氦三科技的联合创始人，他之前就职于腾讯云 CODING 担任架构师，也是&lt;strong&gt;中国云原生社区深圳站的负责人&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;出版了 &lt;strong&gt;《Spinnaker 实战：云原生多云环境的持续部署方案》&lt;/strong&gt;，参与编写了 &lt;strong&gt;《深入理解 Istio：云原生服务网格进阶实战》&lt;/strong&gt; 以及 &lt;strong&gt;《软件研发效能权威指南》&lt;/strong&gt; 的云原生开发部分。&lt;/p&gt;
&lt;p&gt;同时，他也是云原生开发工具 &lt;strong&gt;Nocalhost&lt;/strong&gt; 项目的核心作者。&lt;/p&gt;
&lt;h3 id=&#34;课程售价&#34;&gt;课程售价&lt;/h3&gt;
&lt;p&gt;课程原价 ¥129&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;今日早鸟 6 折秒杀，到手 ￥ 79！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你是新用户，只需要 ￥ 59！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;a href=&#34;https://time.geekbang.org/column/intro/100312001?code=PlMU9ITPlnun1QAjTGtDtNxkTtgSRZZzLJlQZHrEKtI%3D&amp;amp;utm_term=SPoster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;，立享 6 折，跟着王炜学习云原生架构与 GitOps。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Envoy service mesh、Prometheus 和 Grafana 下的微服务监控</title>
      <link>https://cloudnative.to/blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/</link>
      <pubDate>Tue, 20 Nov 2018 11:40:46 +0800</pubDate>
      <guid>https://cloudnative.to/blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/</guid>
      <description>&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://medium.com/@dnivra26/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana-a1c26a8595fc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你刚接触“Service Mesh“和“Envoy”，我&lt;a href=&#34;https://medium.com/@dnivra26/service-mesh-with-envoy-101-e6b2131ee30b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;有一篇文章可以帮你入门。&lt;/p&gt;
&lt;p&gt;这是&lt;strong&gt;Envoy service mesh 下的可观测性&lt;/strong&gt;系列的第二篇文章，你可以在&lt;a href=&#34;https://medium.com/@dnivra26/distributed-tracing-with-envoy-service-mesh-jaeger-c365b6191592&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;阅读第一篇关于分布式追踪的文章。&lt;/p&gt;
&lt;p&gt;在微服务中谈及监控时，你可不能被蒙在鼓里，至少要知道问题出在哪儿了。&lt;/p&gt;
&lt;p&gt;让我们看看 Envoy 是怎样帮助我们了解我们的服务运行状况的。在 service mesh 下，所有的通信都会通过 mesh，这意味着没有任何服务会与其它服务直接通信，服务向 Envoy 发起调用请求，然后 Envoy 将调用请求路由到目标服务，所以 Envoy 将持有传入和传出流量的上下文。Envoy 通常提供关于&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http_conn_man/stats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;传入&lt;/a&gt;请求、&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/cluster_manager/cluster_stats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;传出&lt;/a&gt;请求和&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/statistics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy 实例状态&lt;/a&gt;的指标。&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;准备&lt;/h2&gt;
&lt;p&gt;这是我们将要构建的系统概览。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-overall-setup&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;overall setup&#34; srcset=&#34;
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwx6wg1dscj30m90cg0sy_hu15620708624877125814.webp 400w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwx6wg1dscj30m90cg0sy_hu15239726695520008048.webp 760w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwx6wg1dscj30m90cg0sy_hu17147081395539037819.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwx6wg1dscj30m90cg0sy_hu15620708624877125814.webp&#34;
               width=&#34;760&#34;
               height=&#34;425&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      overall setup
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;statsd&#34;&gt;Statsd&lt;/h2&gt;
&lt;p&gt;Envoy 支持通过两到三种格式来暴露指标，但本文中我们将使用&lt;a href=&#34;https://github.com/b/statsd_spec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;statsd&lt;/a&gt;格式。&lt;/p&gt;
&lt;p&gt;所以流程将是这样，首先 Envoy 推送指标到 statsd，然后我们用&lt;a href=&#34;https://github.com/prometheus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;prometheus&lt;/a&gt;（一个时序数据库）从 statsd 拉取指标，最后通过&lt;a href=&#34;https://github.com/grafana/grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;grafana&lt;/a&gt;可视化这些指标。&lt;/p&gt;
&lt;p&gt;在准备概览图中，我提到了 statsd exporter 而不是 statsd，这是因为我们并不会直接使用 statsd，而是使用一个接收 statsd 格式数据，并将其以 prometheus 格式输出的转换器（服务）。下面让我们来搞定它吧。&lt;/p&gt;
&lt;p&gt;Envoy 的指标主要分为两类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Counter（计数器）：一个只增不减的指标。如：请求总数&lt;/li&gt;
&lt;li&gt;Gauge（量表）：一个可增可减的指标，类似于一个瞬时值。如：当前 CPU 使用量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;让我们看一个包含 stats sink 的 Envoy 配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;admin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;access_log_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/tmp/admin_access.log&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;socket_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9901&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stats_sinks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;envoy.statsd&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tcp_cluster_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;statsd-exporter&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;front-envoy    &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;static_resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;listeners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http_listener&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;socket_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;filter_chains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;filters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;envoy.http_connection_manager&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;use_remote_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;add_user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;access_log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.file_access_log&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/dev/stdout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[ACCESS_LOG][%START_TIME%] \&amp;#34;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;#34; %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;#34;%REQ(X-FORWARDED-FOR)%\&amp;#34; \&amp;#34;%REQ(USER-AGENT)%\&amp;#34; \&amp;#34;%REQ(X-REQUEST-ID)%\&amp;#34; \&amp;#34;%REQ(:AUTHORITY)%\&amp;#34; \&amp;#34;%UPSTREAM_HOST%\&amp;#34; \&amp;#34;%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%\&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stat_prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ingress_443&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;codec_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;AUTO&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;generate_request_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;route_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;local_route&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;virtual_hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http-route&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;domains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cluster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;service_a&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http_filters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;envoy.router&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;statsd&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;connect_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0.25s&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;strict_dns&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lb_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ROUND_ROBIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;socket_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;statsd_exporter&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9125&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;service_a&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;connect_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0.25s&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;strict_dns&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lb_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ROUND_ROBIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;socket_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;service_a_envoy&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8786&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第 8-13 行告诉 Envoy 我们需要 statsd 格式的指标、我们的统计信息前缀（通常是你的服务名）是什么和 statsd sink 的地址。&lt;/p&gt;
&lt;p&gt;第 55-63 行配置了我们的环境中的 statsd sink。&lt;/p&gt;
&lt;p&gt;这就是让 Envoy 输出统计信息所需要的所有配置。现在让我们来看看第 2-7 行做了哪些事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Envoy 在 9901 端口暴露了一个管理端，你可以通过它动态地改变日志级别，查看当前配置、统计数据等&lt;/li&gt;
&lt;li&gt;Envoy 也可以生成与 nginx 类似的访问日志，你可以通过它了解服务间的通信状况。访问日志的格式也是可配置的，如第 29-33 行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;你需要将相同的配置添加到系统中的其它 Envoy sidecar 上（是的，每个服务都有自己的 Envoy sidecar）。&lt;/p&gt;
&lt;p&gt;这些服务本身是用 go 写的，它们做的事情很简单，仅仅是通过 Envoy 调用其它服务。你可以在&lt;a href=&#34;https://github.com/dnivra26/envoy_monitoring&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;查看服务和 Envoy 的配置。&lt;/p&gt;
&lt;p&gt;现在，虽然我们只有图中的 statsd exporter，但有了它，如果我们运行 docker 容器（docker-compose build &amp;amp; docker-compose up），然后向 Front Envoy（localhost:8080）发送一些流量，Envoy 将把这些流量的指标发送到 statsd exporter，随后 statsd exporter 会把这些指标转换成 prometheus 格式，并将其暴露在 9102 端口。&lt;/p&gt;
&lt;p&gt;Statsd exporter 中的统计信息格式如下图所示&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-来自-statsd-exporter-的-prometheus-格式的指标&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;来自 statsd exporter 的 prometheus 格式的指标&#34; srcset=&#34;
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwxf9t7t5bj318g0azgof_hu9663189236756732864.webp 400w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwxf9t7t5bj318g0azgof_hu5781524773010243701.webp 760w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwxf9t7t5bj318g0azgof_hu4644485562551325841.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwxf9t7t5bj318g0azgof_hu9663189236756732864.webp&#34;
               width=&#34;760&#34;
               height=&#34;188&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      来自 statsd exporter 的 prometheus 格式的指标
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这里边将有上百个指标，同时，在上面的截图中我们能看到 Service A 和 Service B 之间的通信延迟指标。上图的指标是遵循 prometheus 格式的&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;metric_name [&amp;#34;{&amp;#34; label_name &amp;#34;=&amp;#34; `&amp;#34;` label_value `&amp;#34;` { &amp;#34;,&amp;#34; label_name &amp;#34;=&amp;#34; `&amp;#34;` label_value `&amp;#34;` } [ &amp;#34;,&amp;#34; ] &amp;#34;}&amp;#34;] value [ timestamp ]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以在&lt;a href=&#34;https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;了解更多。&lt;/p&gt;
&lt;h2 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h2&gt;
&lt;p&gt;我们将使用&lt;a href=&#34;https://prometheus.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prometheus&lt;/a&gt;作为时序数据库来保存我们的指标。Prometheus 不仅是一个时序数据库，它本身还是一个监控系统，但本文我们只用它来存储指标数据。需要注意的是，prometheus 是一个通过主动拉取来获取指标的系统，这意味着你必须告诉 prometheus 从何处拉取指标，在我们的例子中是从 statsd exporter 处拉取。&lt;/p&gt;
&lt;p&gt;将 Prometheus 添加到系统中非常简单而又直接，我们只需要将拉取目标（statsd exporter）作为配置文件传递给 Prometheus 就可以了。配置看起来是这样的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scrape_interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;15s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scrape_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;job_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;statsd&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scrape_interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;5s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;static_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;statsd_exporter:9102&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;services&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;scrape_interval 的值表示 Prometheus 从目标处拉取配置的频率。&lt;/p&gt;
&lt;p&gt;现在启动 Prometheus，里面应该有一些数据了。让我们打开 localhost:9090 来看一看&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-prometheus-查询页面&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;prometheus 查询页面&#34; srcset=&#34;
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy55z3klmj31jk0f6gmd_hu2513697375321218333.webp 400w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy55z3klmj31jk0f6gmd_hu168548579572555356.webp 760w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy55z3klmj31jk0f6gmd_hu12550692304967953764.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy55z3klmj31jk0f6gmd_hu2513697375321218333.webp&#34;
               width=&#34;760&#34;
               height=&#34;207&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      prometheus 查询页面
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;如图所示，可以看到我们的指标。你能做的可不仅仅是选择已有的指标，从&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/basics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;可以阅读关于 prometheus 查询语言的更多信息。它还可以基于查询结果绘制图表，除此之外还有一个报警系统。&lt;/p&gt;
&lt;p&gt;如果我们打开 prometheus 的 targets 页面，将能看到所有的拉取目标和它们的健康状态&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-prometheus-目标&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;prometheus 目标&#34; srcset=&#34;
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy5occy0pj31jk0gbjs6_hu5411409895699584919.webp 400w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy5occy0pj31jk0gbjs6_hu17500859559031502427.webp 760w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy5occy0pj31jk0gbjs6_hu8170213487314482260.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwgy1fwy5occy0pj31jk0gbjs6_hu5411409895699584919.webp&#34;
               width=&#34;760&#34;
               height=&#34;223&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      prometheus 目标
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;grafana&#34;&gt;Grafana&lt;/h2&gt;
&lt;p&gt;Grafana 是一个很棒的监控可视化解决方案，它支持 Prometheus，Graphite，InfluxDB，ElasticSearch 等多种后端。&lt;/p&gt;
&lt;p&gt;Grafana 有两大主要组件需要我们配置&lt;/p&gt;
&lt;p&gt;(1). 数据源（Datasource）：指定 grafana 从哪个后端获取指标。你可以通过配置文件来配置数据源，代码如下所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;datasources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;prometheus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;prometheus&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;access&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http://prometheus:9090&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;editable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(2). 仪表盘（Dashboard）：你可以从仪表盘查看来自数据源的指标。Grafana 支持多种可视化元素，如 Graphs，Single Stats，Heatmaps……你可以继承这些元素并使用插件来构造自己的元素。&lt;/p&gt;
&lt;p&gt;我在使用 Grafana 时遇到的唯一一个问题是，缺少一种标准的方法来用代码开发那些仪表盘。所幸有一些第三方的库提供了支持，我们将使用来自 weaveworks 的&lt;a href=&#34;https://github.com/weaveworks/grafanalib&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;grafanalib&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面是我们通过 python 代码尝试构建的一个仪表盘&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;grafanalib.core&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dashboard&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Dashboard&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Services Dashboard&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;templating&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Templating&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;Template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;metrics(.*_cluster_.*_upstream_rq_2xx)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/(.*)_cluster_.*_upstream_rq_2xx/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;service_a&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;Template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;metrics(.*_cluster_.*_upstream_rq_2xx)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/.*_cluster_(.*)_upstream_rq_2xx/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;service_b&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;panels&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;Graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2XX&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;transparent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;Target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;expr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[[source]]_cluster_[[destination]]_upstream_rq_2xx - [[source]]_cluster_[[destination]]_upstream_rq_2xx offset $__interval&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;legendFormat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2xx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;Graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;5XX&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;transparent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;Target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;expr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[[source]]_cluster_[[destination]]_upstream_rq_5xx - [[source]]_cluster_[[destination]]_upstream_rq_5xx offset $__interval&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;legendFormat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;5xx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;Graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Latency&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;transparent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;dataSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;Target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;expr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[[source]]_cluster_[[destination]]_upstream_rq_time&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;legendFormat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{quantile}}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;auto_panel_ids&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这段代码中，我们为 2xx，5xx 和延迟数据构建了图表。其中第 5-22 行很重要，它从我们的设置中提取可用的 service names 作为 grafana 的变量，为我们创建一个动态的仪表盘，这意味着我们能够选择性地查看特定源服务和目标服务的统计数据。如果想了解更多关于变量的内容请参考&lt;a href=&#34;http://docs.grafana.org/reference/templating/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;你需要通过 grafanalib 命令来从上述 python 文件生成仪表盘&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     generate-dashboard -o dashboard.json service-dashboard.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意这里生成的 dashboard.json 可不容易阅读。&lt;/p&gt;
&lt;p&gt;所以，启动 Grafana 时我们只需要传递仪表盘和数据源就好了。当访问 http:localhost:3000 时，你将看到：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-grafana-仪表盘&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;grafana 仪表盘&#34; srcset=&#34;
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwly1fx6n732mrdj31jk0h7jsc_hu4706113449825439878.webp 400w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwly1fx6n732mrdj31jk0h7jsc_hu12282905788308101767.webp 760w,
               /blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwly1fx6n732mrdj31jk0h7jsc_hu3935990940332859169.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/microservices-monitoring-with-envoy-service-mesh-prometheus-grafana/006tNbRwly1fx6n732mrdj31jk0h7jsc_hu4706113449825439878.webp&#34;
               width=&#34;760&#34;
               height=&#34;236&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      grafana 仪表盘
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现在你应该能看到 2xx，5xx 和延迟的图表，同时还能看到一个下拉菜单，你可以通过它选择源服务和目标服务。关于 Grafana 还有许多内容我们没有讨论到，包括强大的查询编辑器和告警系统。更重要的是，这一切都是可以通过插件和应用扩展的，可以参考&lt;a href=&#34;https://github.com/grafana/kubernetes-app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;的例子。如果你正想可视化常见服务如 redis，rabbitmq 等的指标，grafana 有一个&lt;a href=&#34;https://grafana.com/dashboards&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;公共仪表盘&lt;/a&gt;库，你只需要导入它们就可以使用了。使用 Grafana 还有一个好处，你可以通过配置文件和代码创建和管理所有东西，而不需要过多地通过 UI 来操作。&lt;/p&gt;
&lt;p&gt;我建议你试用一下 prometheus 和 grafana 以了解更多信息。感谢阅读，如有建议和意见，请写在评论中。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&#34;https://github.com/dnivra26/envoy_monitoring/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;可以找到所有代码和配置文件。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
