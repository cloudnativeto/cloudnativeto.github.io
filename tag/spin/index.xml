<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spin | 云原生社区（中国）</title>
    <link>https://cloudnative.to/tag/spin/</link>
      <atom:link href="https://cloudnative.to/tag/spin/index.xml" rel="self" type="application/rss+xml" />
    <description>Spin</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Thu, 13 Apr 2023 16:27:22 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/media/sharing.png</url>
      <title>Spin</title>
      <link>https://cloudnative.to/tag/spin/</link>
    </image>
    
    <item>
      <title>初创公司 Fermyon 发布 Spin 1.0 用于 WebAssembly 无服务器应用</title>
      <link>https://cloudnative.to/blog/spin-wasm-ga/</link>
      <pubDate>Thu, 13 Apr 2023 16:27:22 +0800</pubDate>
      <guid>https://cloudnative.to/blog/spin-wasm-ga/</guid>
      <description>&lt;p&gt;本文译自：&lt;a href=&#34;https://www.infoq.com/news/2023/04/first-version-spin-wasm/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Startup Fermyon Releases Spin 1.0 for WebAssembly Serverless Applications&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.fermyon.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fermyon&lt;/a&gt; 最近宣布推出 &lt;a href=&#34;https://github.com/fermyon/spin/releases/tag/v1.0.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spin 1.0&lt;/a&gt;，这是一个用于使用 &lt;a href=&#34;https://webassembly.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WebAssembly&lt;/a&gt; (Wasm) 开发无服务器应用的开源开发者工具和框架。&lt;/p&gt;
&lt;p&gt;Spin 1.0 是其去年推出 &lt;a href=&#34;https://www.fermyon.com/blog/introducing-spin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;介绍&lt;/a&gt; 后的首个稳定版本。在 1.0 版本中，公司增加了对新编程语言（如 JavaScript、TypeScript、Python 或 C#，除了 Rust 和 Go 之外）、连接数据库（&lt;a href=&#34;https://developer.fermyon.com/spin/rdbms-storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;关系型&lt;/a&gt; 或 &lt;a href=&#34;https://developer.fermyon.com/spin/redis-outbound&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Redis&lt;/a&gt;）、使用流行的注册表服务分发应用程序（&lt;a href=&#34;https://ghcr.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Container Registry&lt;/a&gt;、&lt;a href=&#34;https://hub.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Hub&lt;/a&gt; 或 &lt;a href=&#34;https://aws.amazon.com/ecr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS ECR&lt;/a&gt;）、内置的 &lt;a href=&#34;https://developer.fermyon.com/spin/kv-store&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;键值存储&lt;/a&gt; 以保持状态、在 Kubernetes 上运行应用程序以及与 &lt;a href=&#34;https://www.hashicorp.com/products/vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HashiCorp Vault&lt;/a&gt; 集成以管理运行时配置等方面的支持。&lt;/p&gt;
&lt;p&gt;通过 Spin，该公司为创建运行 Wasm 的应用程序提供了轻松的开发体验，包括部署和安全运行它们的框架。&lt;/p&gt;
&lt;p&gt;Fermyon 的首席技术官 &lt;a href=&#34;https://twitter.com/matei_radu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Radu Matei&lt;/a&gt; 在一篇 &lt;a href=&#34;https://www.fermyon.com/blog/introducing-spin-v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;博客文章&lt;/a&gt; 中解释道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Spin 是一个开源的开发者工具和框架，它帮助用户通过创建、构建、分发和运行 Wasm 的无服务器应用程序。我们可以使用 spin new 基于起始模板创建新的应用程序，使用 spin build 将我们的应用程序编译为 Wasm，使用 spin up 在本地运行应用程序。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/spin-wasm-ga/spin_hu14812837257707596977.webp 400w,
               /blog/spin-wasm-ga/spin_hu7518005238026015097.webp 760w,
               /blog/spin-wasm-ga/spin_hu4668784611792189774.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/spin-wasm-ga/spin_hu14812837257707596977.webp&#34;
               width=&#34;760&#34;
               height=&#34;369&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;来源：&lt;a href=&#34;https://www.fermyon.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.fermyon.com/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;除了在本地运行 spin 应用程序外，开发人员还可以将应用程序部署到 &lt;a href=&#34;https://www.fermyon.com/cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fermyon 云&lt;/a&gt;（&lt;a href=&#34;https://www.infoq.com/news/2022/11/Fermyon-cloud-webassembly/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;去年公开测试版发布&lt;/a&gt;）。在登录 Fermyon Cloud 后，他们可以在存放其应用程序的 spin.&lt;a href=&#34;https://toml.io/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;toml 文件&lt;/a&gt; 所在目录中运行以下命令来部署其应用程序：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$ spin deploy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此外，开发人员还可以选择 &lt;a href=&#34;https://developer.fermyon.com/spin/distributing-apps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;将应用程序推送到容器注册表&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;InfoQ 的一个 &lt;a href=&#34;https://www.infoq.com/podcasts/cloud-computing-web-assembly/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;播客&lt;/a&gt; 中提到的一个关键点是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Spin 是 Fermyon 的一个开源开发者工具，专注于快速迭代的本地开发周期，允许您快速构建基于 WebAssembly 的应用程序，而无需担心部署。Spin 有一个 Visual Studio Code 插件，类似于 AWS Lambda 等无服务器事件监听器模型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该公司计划在不久的将来使用 &lt;a href=&#34;https://github.com/bytecodealliance/preview2-prototyping&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WASI Preview 2&lt;/a&gt; 和 &lt;a href=&#34;https://www.fermyon.com/blog/webassembly-component-model&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wasm 组件模型&lt;/a&gt;。此外，在 Reddit 的一个 &lt;a href=&#34;https://www.reddit.com/r/WebAssembly/comments/123m4md/introducing_spin_10_the_developer_tool_for/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;帖子&lt;/a&gt; 中，Matei 回答了一个关于 Web 支持的问题，并提供了未来发展的更多细节：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在未来，我们希望允许从 Spin 调用 Wasm 组件，可以在浏览器内或浏览器外使用，但 Spin 的功能旨在用于非浏览器场景。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fermyon 是众多投资 WASM 技术的公司之一。例如，Docker 最近 &lt;a href=&#34;https://www.docker.com/blog/announcing-dockerwasm-technical-preview-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;宣布&lt;/a&gt; 推出了 Docker+Wasm 的首个 &lt;a href=&#34;https://www.docker.com/blog/docker-wasm-technical-preview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;技术预览版&lt;/a&gt;，这是一种独特的构建，使得可以用 WasmEdge 运行时使用 Docker 运行 Wasm 容器。从版本 4.15 开始，每个人都可以通过激活 &lt;a href=&#34;https://docs.docker.com/desktop/wasm/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;containerd image store 实验功能&lt;/a&gt; 来尝试这些功能。&lt;/p&gt;
&lt;p&gt;此外，一个名为 &lt;a href=&#34;https://github.com/containerd/runwasi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;runwasi 项目&lt;/a&gt; 是 CNCF 的 containerd 生态系统的一部分，允许开发人员通过 Kubernetes 内部的 containerd shim 运行 WebAssembly 运行时。&lt;/p&gt;
&lt;p&gt;最后，有关 Spin 的更多详细信息可在 &lt;a href=&#34;https://developer.fermyon.com/spin/quickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;文档页面&lt;/a&gt; 上找到。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
