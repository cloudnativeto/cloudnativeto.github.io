<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pulse | 云原生社区（中国）</title>
    <link>https://cloudnativecn.com/tag/pulse/</link>
      <atom:link href="https://cloudnativecn.com/tag/pulse/index.xml" rel="self" type="application/rss+xml" />
    <description>Pulse</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 04 Sep 2024 10:56:55 +0800</lastBuildDate>
    <image>
      <url>https://cloudnativecn.com/media/sharing.png</url>
      <title>Pulse</title>
      <link>https://cloudnativecn.com/tag/pulse/</link>
    </image>
    
    <item>
      <title>Pulse 观测代理：为大规模度量基础设施打造的观测解决方案</title>
      <link>https://cloudnativecn.com/blog/announcing-pulse-proxy/</link>
      <pubDate>Wed, 04 Sep 2024 10:56:55 +0800</pubDate>
      <guid>https://cloudnativecn.com/blog/announcing-pulse-proxy/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;编者按：Envoy 作者 Matt Klein 的创业公司 Bitdrift 新推出了可观测性代理开源项目 &lt;a href=&#34;https://github.com/bitdriftlabs/pulse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pulse&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继&lt;a href=&#34;https://blog.bitdrift.io/post/announcing-source-available-sdk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;宣布 Capture SDK 源代码可用&lt;/a&gt;之后，我们非常高兴地再次宣布&lt;a href=&#34;https://github.com/bitdriftlabs/pulse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pulse&lt;/a&gt;的可用性，这是一个为大规模度量基础设施建造的观测代理。请阅读以下内容，了解 Pulse 的概述、其创建的简要历史，以及它如何适应更广泛的服务器端观测生态系统。&lt;/p&gt;
&lt;p&gt;Pulse 是一个为大规模度量基础设施构建的观测代理，从包括&lt;a href=&#34;https://github.com/statsite/statsite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;statsite&lt;/a&gt;和&lt;a href=&#34;https://github.com/lyft/statsrelay&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;statsrelay&lt;/a&gt;在内的先前项目中汲取思想，同时提供现代 API 驱动的配置和类似于&lt;a href=&#34;https://github.com/envoyproxy/envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;所提供的无损配置重载。&lt;/p&gt;
&lt;p&gt;度量指标已经过时了吗？虽然行业趋势确实是向结构化日志转变，作为所有数据的首选来源，这一点在&lt;a href=&#34;https://bitdrift.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Capture&lt;/a&gt;的移动观测产品中也有体现，但传统的度量指标依然是许多大型组织观测实践的核心。&lt;/p&gt;
&lt;p&gt;尽管&lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OTel Collector&lt;/a&gt;、&lt;a href=&#34;https://github.com/fluent/fluent-bit]&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fluent Bit&lt;/a&gt;和&lt;a href=&#34;https://github.com/vectordotdev/vector&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vector&lt;/a&gt;都是优秀的项目，提供一定程度的度量支持，但在处理大规模度量基础设施时尚存在不足，主要体现在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;聚合：例如，去掉 pod 标签以衍生出服务级别的聚合度量。对 Prometheus 度量的聚合尤其棘手，因为跨多个来源聚合绝对计数器（与只报告自上次报告以来的增量计数器相比，单调增加的计数器）并非易事。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;集群化：主要用于更复杂的聚合方法，如在聚合层进行一致性哈希和路由。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动阻塞/省略：基于控制平面驱动配置的自动阻塞和度量点省略是许多组织控制度量增长和成本的重要策略。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该项目填补了这些空白，并提供了一系列与脚本编写、基数发现和限制、网络可靠性等相关的强大工具。&lt;/p&gt;
&lt;p&gt;Pulse 也已针对性能进行了大量优化，并已经过严格测试，准备好应对苛刻的工作负载。今天，它已在生产环境中部署，在处理每秒数亿个度量的集群中运行。&lt;/p&gt;
&lt;h2 id=&#34;pulse-的简史&#34;&gt;Pulse 的简史&lt;/h2&gt;
&lt;p&gt;此时，你可能会问自己：“bitdrift 为什么会发布一个服务器端度量代理？我以为 bitdrift 是一家移动观测公司？”Pulse 的由来简史如下。&lt;/p&gt;
&lt;p&gt;正如我们&lt;a href=&#34;https://blog.bitdrift.io/post/honey-i-shrunk-the-telemetry&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在公开发布时所描述&lt;/a&gt;，bitdrift 是从 Lyft 剥离出来的。在剥离之前，bitdrift 团队负责 Lyft 内两个不同的技术部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;现称为 Capture 的移动观测产品。&lt;/li&gt;
&lt;li&gt;一组管理 Lyft 大规模度量基础设施的技术，专注于整体性能、可靠性和成本控制。这组技术统称为“MME”（度量管理引擎）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MME 背后的思想将在下文中进一步描述，但 Pulse 代理是所有 Lyft 度量在 Kubernetes pod、聚合层，最终到 TSDB 传输过程中的数据平面。bitdrift 仍然支持在 Lyft 运行 Pulse 及更广泛的 MME 控制平面。&lt;/p&gt;
&lt;p&gt;在完成使 Capture SDK 源代码可用的工作后，我们认为现在是发布 Pulse 代码的好时机，因为我们相信这一领域存在显著的行业功能缺口。&lt;/p&gt;
&lt;h2 id=&#34;驱动控制平面的度量方法&#34;&gt;驱动控制平面的度量方法&lt;/h2&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-架构图&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;架构图&#34; srcset=&#34;
               /blog/announcing-pulse-proxy/f1_hu2355259371673588799.webp 400w,
               /blog/announcing-pulse-proxy/f1_hu10614754433877348514.webp 760w,
               /blog/announcing-pulse-proxy/f1_hu8471809447125419552.webp 1200w&#34;
               src=&#34;https://cloudnativecn.com/blog/announcing-pulse-proxy/f1_hu2355259371673588799.webp&#34;
               width=&#34;620&#34;
               height=&#34;498&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      架构图
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;作为一个例子，Lyft 度量基础设施的简化版本如上图所示。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个基于 Pulse 代理的 daemonset 从应用程序接收度量，这一层执行初步的转换、批处理、基数限制等操作，然后将度量发送到聚合层。&lt;/li&gt;
&lt;li&gt;聚合层接收所有度量，并使用一致性哈希确保度量最终被正确路由到处理聚合的节点。一旦在正确的节点上，会发生几件不同的事情：
&lt;ul&gt;
&lt;li&gt;高级聚合发生（例如，从 pod 度量创建服务级度量）&lt;/li&gt;
&lt;li&gt;观测到的度量样本被发送到控制平面&lt;/li&gt;
&lt;li&gt;控制平面发送明确阻塞的度量列表（详见下文）&lt;/li&gt;
&lt;li&gt;在最终发送数据到 TSDB 的过程中，各种缓冲和重试机制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;读取代理（未包括在 Pulse 中）位于所有度量用户（仪表盘和临时查询）和度量查询之间，并拦截所有度量查询。它将查询发送到控制平面，以便控制平面了解哪些度量实际上被读取，无论是手动还是通过警告查询。&lt;/li&gt;
&lt;li&gt;控制平面（也未包括在 Pulse 中，但通过明确的 APIs 进行通信）获取来自聚合层的写入端样本，并将其与读取代理数据合并，以确定哪些度量实际被使用。然后，控制平面根据政策动态创建基于自动阻塞未读取但已写入的度量的阻止列表，这在大规模度量基础设施中通常是所有度量的绝大多数。阻止列表被提供给 Pulse 代理，然后执行内联阻塞和省略度量流，从而显著减少发送到 TSDB 的总点数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pulse 允许其所有配置方面都可以动态更新，这与 Envoy 内的可能性类似。这提供了在最终如何使用它方面的大量灵活性。&lt;/p&gt;
&lt;h2 id=&#34;pulse-将如何帮助您&#34;&gt;Pulse 将如何帮助您？&lt;/h2&gt;
&lt;p&gt;通过 Pulse，您现在可以通过复杂的聚合和通过明确规定的 APIs 实时控制阻塞规则和省略实现&lt;em&gt;非常&lt;/em&gt;大的度量节省。Pulse 源代码以这样的方式授权：如果您是最终用户，我们的意图是代码可用并可修改任何目的。拿去构建一些有趣的东西吧！&lt;/p&gt;
&lt;p&gt;对于商业支持或讨论 bitdrift 提供的自动度量发现和阻塞处理的托管控制平面的选项，请通过&lt;a href=&#34;mailto:info@bitdrift.io&#34;&gt;info@bitdrift.io&lt;/a&gt;与我们联系讨论。&lt;/p&gt;
&lt;p&gt;我们非常期待您通过&lt;a href=&#34;https://github.com/bitdriftlabs/pulse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub issues&lt;/a&gt;或在&lt;a href=&#34;https://communityinviter.com/apps/bitdriftpublic/bitdrifters&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bitdrift slack&lt;/a&gt;的#pulse 与我们分享问题和使用故事。祝您度量节省愉快！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
