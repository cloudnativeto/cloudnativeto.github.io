<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器 | 云原生社区</title>
    <link>https://cloudnative.to/tag/%E5%AE%B9%E5%99%A8/</link>
      <atom:link href="https://cloudnative.to/tag/%E5%AE%B9%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <description>容器</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Mon, 07 Nov 2022 10:16:27 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/media/sharing.png</url>
      <title>容器</title>
      <link>https://cloudnative.to/tag/%E5%AE%B9%E5%99%A8/</link>
    </image>
    
    <item>
      <title>2022 年容器生态系统的 9 大趋势洞察</title>
      <link>https://cloudnative.to/blog/container-insights-2022/</link>
      <pubDate>Mon, 07 Nov 2022 10:16:27 +0800</pubDate>
      <guid>https://cloudnative.to/blog/container-insights-2022/</guid>
      <description>&lt;p&gt;这项研究建立在 Datadog 以前版本的&lt;a href=&#34;https://www.datadoghq.com/container-report-2021/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;容器使用报告&lt;/a&gt;、&lt;a href=&#34;https://www.datadoghq.com/container-orchestration-2018/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;容器编排报告&lt;/a&gt;和&lt;a href=&#34;https://www.datadoghq.com/docker-adoption/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker 研究报告&lt;/a&gt;的基础上。最新更新于 2022 年 11 月。译自：&lt;a href=&#34;https://www.datadoghq.com/container-report/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.datadoghq.com/container-report/&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;现代工程团队继续扩展他们对容器的使用，如今基于容器的微服务应用程序无处不在。不断增长的容器使用正在推动组织采用互补技术来简化他们操作集群的方式，而这种不断扩展的容器环境给组织带来了安全挑战。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在本报告中，我们检查了数万 Datadog 客户&lt;/strong&gt;运行的超过&lt;strong&gt;15 亿个容器&lt;/strong&gt;，以了解容器生态系统的状态。继续阅读，了解从最新的实际使用数据中收集的更多见解和趋势。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“这项调查表明，容器和 Kubernetes 革命正在不断发展壮大。结果揭示了使用容器和 Kubernetes 的云原生组织不仅发展得更快，而且获得了更大的信心——在比以往任何时候都更关键的生产环境中构建和部署更大型的应用程序和工作负载。&lt;/p&gt;
&lt;p&gt;得益于云原生生态系统中超过 175,000 名贡献者所推动的创新，云原生组织已为前进的道路做好了准备。他们正在创造可以让各种规模的工程团队都可以构建和运行应用程序的技术，以满足当今应用程序的需求。”&lt;/p&gt;
&lt;p&gt;— Priyanka Sharma，云原生计算基金会执行董事&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;趋势-1-kubernetes-继续成为最受欢迎的容器管理系统&#34;&gt;趋势 1： Kubernetes 继续成为最受欢迎的容器管理系统&lt;/h2&gt;
&lt;p&gt;Kubernetes 比以往任何时候都更受欢迎。如今，近一半的容器组织运行 Kubernetes 来在不断发展的生态系统中部署和管理容器。Amazon Elastic Kubernetes Services (Amazon EKS) Blueprints和 Amazon EKS Anywhere 等工具以及其他托管 Kubernetes 服务使团队可以轻松地在云中和本地运行 Kubernetes 集群。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wbyje5nkj30ku0ce757_hude23266d8cbc372bc971b6c4d7ddd167_44277_790dcbb4c9da8e4863e6ca8195184ba9.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wbyje5nkj30ku0ce757_hude23266d8cbc372bc971b6c4d7ddd167_44277_2c9bf4f1a1a132794b922e823ae0ba77.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wbyje5nkj30ku0ce757_hude23266d8cbc372bc971b6c4d7ddd167_44277_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wbyje5nkj30ku0ce757_hude23266d8cbc372bc971b6c4d7ddd167_44277_790dcbb4c9da8e4863e6ca8195184ba9.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“在 AWS，我们致力于为客户提供简化的 Kubernetes 体验，以便他们可以轻松管理和扩展集群，同时受益于完全托管的 AWS 服务的安全性和弹性。Amazon EKS Blueprints 和 Amazon EKS Anywhere 等新功能使客户能够更快、更轻松地跨 AWS 和本地环境配置和部署 Kubernetes 集群，因此他们可以在任何需要的地方获得相同、一致的 Amazon EKS 体验，以最好地支持他们的应用程序和最终用户。”&lt;/p&gt;
&lt;p&gt;— Barry Cooks，Amazon Web Services Kubernetes 副总裁&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;趋势-2无服务器容器技术在所有主要公共云中继续流行&#34;&gt;趋势 2：无服务器容器技术在所有主要公共云中继续流行&lt;/h2&gt;
&lt;p&gt;所有主要云提供商（包括AWS App Runner、AWS Fargate、Azure Container Apps、Azure Container Instances (ACI)和Google Cloud Run ）对无服务器容器技术的使用率从 2020 年的 21% 增加到 2022 年的 36%（年初至今）。这与我们在之前的研究中看到的增长相呼应，其中包括 Amazon ECS 用户转向 AWS Fargate。&lt;/p&gt;
&lt;p&gt;客户将减少配置和管理底层基础设施的需求列为容器采用无服务器技术的主要原因之一。那些不使用无服务器技术的客户更喜欢从管理自己的基础架构中获得的控制力和灵活性。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wc0jp6mjj30ku0cewff_hu96a1a9fca672fb19cc9fa7b4f9cff982_44966_57251dc1d76c5ad4d9faa581508d9aa6.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wc0jp6mjj30ku0cewff_hu96a1a9fca672fb19cc9fa7b4f9cff982_44966_b85144db7cb1dccf667a1d94f81455cb.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wc0jp6mjj30ku0cewff_hu96a1a9fca672fb19cc9fa7b4f9cff982_44966_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wc0jp6mjj30ku0cewff_hu96a1a9fca672fb19cc9fa7b4f9cff982_44966_57251dc1d76c5ad4d9faa581508d9aa6.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;趋势-3多个云提供商的使用随着组织规模的增加而增加&#34;&gt;趋势 3：多个云提供商的使用随着组织规模的增加而增加&lt;/h2&gt;
&lt;p&gt;我们的数据显示，超过 30% 的使用 1,000 台或更多主机的容器组织在多个云中工作，并且组织运行的容器越少，多云使用率最低。此外，我们发现多云组织平均拥有比单云组织更多的容器。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wc690cy0j30ku0ce750_hua91c2b0e6cc96d4beda7f6824ba30736_37057_ccd41bc27ca18a1199abbf15150a7de9.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wc690cy0j30ku0ce750_hua91c2b0e6cc96d4beda7f6824ba30736_37057_cfd9fb55345faa6186f837df7ba50bf3.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wc690cy0j30ku0ce750_hua91c2b0e6cc96d4beda7f6824ba30736_37057_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wc690cy0j30ku0ce750_hua91c2b0e6cc96d4beda7f6824ba30736_37057_ccd41bc27ca18a1199abbf15150a7de9.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;趋势-4kubernetes-ingress-使用率正在上升&#34;&gt;趋势 4：Kubernetes Ingress 使用率正在上升&lt;/h2&gt;
&lt;p&gt;为了大规模管理来自集群外部的请求，管理员经常使用 Ingress 来配置到集群中多个服务的路由。如今，超过 35% 的组织使用 Ingress，自2020 年 8 月Kubernetes 1.19 版本发布以来，Ingress 已经普遍可用。&lt;/p&gt;
&lt;p&gt;随着我们的客户操作更多的集群和 Pod，他们在路由和网络管理方面面临着越来越复杂的问题。许多 Kubernetes 的早期采用者使用云提供的负载均衡器将流量路由到他们的服务。但 Ingress 通常更具成本效益，并且自发布以来其采用率稳步提高。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gateway-api.sigs.k8s.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes Gateway API&lt;/a&gt;（于 2022 年 7 月完成测试版）是容器网络管理发展的下一步。Gateway API 提供高级网络功能，包括使用自定义资源和使用 API 资源对组织角色建模的面向角色的设计。我们期待看到 Gateway API 是否会取代 Ingress，或者这两种技术是否并排使用。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wc8i70cdj30ku0cemxs_hu738917de1fb5e5201892f0333f2ee09f_33477_2ef178a022c1965a4b7dbabf3023b464.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wc8i70cdj30ku0cemxs_hu738917de1fb5e5201892f0333f2ee09f_33477_41cd54093f3703bd8bc06c818504fc2d.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wc8i70cdj30ku0cemxs_hu738917de1fb5e5201892f0333f2ee09f_33477_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wc8i70cdj30ku0cemxs_hu738917de1fb5e5201892f0333f2ee09f_33477_2ef178a022c1965a4b7dbabf3023b464.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;趋势-5服务网格仍处于早期阶段istio-主导使用&#34;&gt;趋势 5：服务网格仍处于早期阶段，Istio 主导使用&lt;/h2&gt;
&lt;p&gt;服务网格提供服务发现、负载均衡、超时和重试，并允许管理员管理集群的安全性并监控其性能。我们之前的研究说明了服务网格的早期采用，我们看到的初始模式基本上没有变化。在我们的客户中，我们主要看到 Istio 和 Linkerd，其中 Istio 的受欢迎程度是 Linkerd 的三倍多。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wc9fn7llj30ku0cewf3_hu7c18c0fce1785add79b2b4a36c1aca2c_32689_4d55675f0ab3b960cb7830224b21851a.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wc9fn7llj30ku0cewf3_hu7c18c0fce1785add79b2b4a36c1aca2c_32689_b58a2e4ae8eb87b823e8aa9de1a57eda.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wc9fn7llj30ku0cewf3_hu7c18c0fce1785add79b2b4a36c1aca2c_32689_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wc9fn7llj30ku0cewf3_hu7c18c0fce1785add79b2b4a36c1aca2c_32689_4d55675f0ab3b960cb7830224b21851a.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“服务网格已经证明了为企业中的流量提供一致的安全性、可观测性和控制的价值。Istio 已明确将自己确立为领先的网格解决方案，我为社区为实现这一目标所做的工作感到自豪。最近完成的对 CNCF 的 Istio 捐赠将在这一成功的基础上发展壮大我们的社区。”&lt;/p&gt;
&lt;p&gt;——Louis Ryan，Istio 的联合创始人兼谷歌首席工程师&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;趋势-6大多数主机使用超过-18-个月的-kubernetes-版本&#34;&gt;趋势 6：大多数主机使用超过 18 个月的 Kubernetes 版本&lt;/h2&gt;
&lt;p&gt;Kubernetes 每年发布三个新版本，为用户提供新功能、安全改进和错误修复。我们在之前的研究中看到，用户通常更愿意等待一年多才能采用这些新版本。我们从轶事中了解到，一些客户延迟的原因是为了确保他们的集群的稳定性和与 API 版本的兼容性。如今，使用最多的版本是 v1.21，它于 2021 年 4 月发布，并于今年早些时候正式过了生命周期终结日。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wcb5u0w5j30ku0cemy5_hua370552fcc6aaa7897d6cb0e63c46783_46810_043da365152f8f911040161dda8546d1.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wcb5u0w5j30ku0cemy5_hua370552fcc6aaa7897d6cb0e63c46783_46810_ec71e36aed235c7795171efda2463ab5.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wcb5u0w5j30ku0cemy5_hua370552fcc6aaa7897d6cb0e63c46783_46810_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wcb5u0w5j30ku0cemy5_hua370552fcc6aaa7897d6cb0e63c46783_46810_043da365152f8f911040161dda8546d1.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;趋势-7超过-30-的运行-containerd-的主机使用不受支持的版本&#34;&gt;趋势 7：超过 30% 的运行 containerd 的主机使用不受支持的版本&lt;/h2&gt;
&lt;p&gt;先前的研究表明 containerd 的使用有所增加，这是组织可以采用的符合 CRI 的运行时之一，因为 Dockershim 正在被弃用。我们发现只有大约 69% 的 containerd 主机使用的是 1.5 或 1.6 版本，这是积极支持的版本。值得注意的是，大约 31% 的 containerd 主机正在使用 1.4 或更早的版本，这些版本已经过了生命周期的终结日。&lt;/p&gt;
&lt;p&gt;运行较旧的软件版本会带来有关安全性和合规性的问题，并且在容器运行时的情况下，会带来容器逃逸等漏洞的风险。许多主机使用不受支持的容器运行时版本这一事实凸显了组织在运行适当的工具以维护容器安全性和合规性方面面临的挑战。无服务器容器技术降低了过时运行时的风险和手动更新的负担，这可能是我们看到所有云都转向无服务器容器的原因之一。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wcc9pjexj30ku0ce74y_hu9366bf6289237f342a47867bbe4e558a_35038_c52e639556b7f9c669ff6a65272daf86.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wcc9pjexj30ku0ce74y_hu9366bf6289237f342a47867bbe4e558a_35038_b4620e9b0490dd091796405f7b6ad916.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wcc9pjexj30ku0ce74y_hu9366bf6289237f342a47867bbe4e558a_35038_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wcc9pjexj30ku0ce74y_hu9366bf6289237f342a47867bbe4e558a_35038_c52e639556b7f9c669ff6a65272daf86.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;趋势-8访问管理正在改进但仍然是一个挑战&#34;&gt;趋势 8：访问管理正在改进，但仍然是一个挑战&lt;/h2&gt;
&lt;p&gt;Kubernetes 管理员使用基于角色的访问控制 (RBAC) 来允许主体（用户、组或服务账户）访问或修改集群中的资源。根据安全最佳实践，主体应该只有必要的权限，并且管理员在授予与升级风险相关的 RBAC 权限时必须谨慎。其中包括允许主体列出所有机密或创建工作负载、证书或令牌请求的权限，这些请求可以允许他们修改自己的权限。&lt;/p&gt;
&lt;p&gt;好消息是，随着组织部署更多集群，这些集群中使用过度宽松特权的百分比正在下降。我们怀疑随着组织采用权限审计等安全实践和自动化 RBAC 扫描仪等工具，这一数字正在下降。但是，我们发现大约 40% 的集群仍然使用宽松的权限，这会带来安全风险。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wcdev59yj30ku0cet9l_hu39c6288aa7bc472a4431bed096580a98_42837_c0061e9f8339125c32238e91a1560b0c.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wcdev59yj30ku0cet9l_hu39c6288aa7bc472a4431bed096580a98_42837_75311c3a1dd68369a423bf65dec04b9e.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wcdev59yj30ku0cet9l_hu39c6288aa7bc472a4431bed096580a98_42837_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wcdev59yj30ku0cet9l_hu39c6288aa7bc472a4431bed096580a98_42837_c0061e9f8339125c32238e91a1560b0c.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;趋势-9nginxredis-和-postgres-再次成为最受欢迎的容器镜像&#34;&gt;趋势 9：NGINX、Redis 和 Postgres 再次成为最受欢迎的容器镜像&lt;/h2&gt;
&lt;p&gt;截至 2022 年 9 月，最流行的现成容器镜像是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;NGINX：这又是最流行的容器镜像。NGINX 为近 50% 的使用容器的组织提供缓存、负载平衡和代理功能。&lt;/li&gt;
&lt;li&gt;Redis：组织可以在容器中部署 Redis，用作键值数据存储、缓存或消息代理。&lt;/li&gt;
&lt;li&gt;Postgres：这个关系数据库的使用比去年略有增长。&lt;/li&gt;
&lt;li&gt;Elasticsearch：这个高性能的文档存储和搜索引擎仍然是最流行的镜像之一。&lt;/li&gt;
&lt;li&gt;Kafka：组织可以通过在容器中部署 Kafka 轻松地将事件流功能添加到应用程序中。&lt;/li&gt;
&lt;li&gt;RabbitMQ：RabbitMQ 在基于微服务的应用程序中支持解耦架构。&lt;/li&gt;
&lt;li&gt;MongoDB：MongoDB 仍然是最流行的 NoSQL 数据库之一。&lt;/li&gt;
&lt;li&gt;MySQL：这个开源数据库的排名比以前低。但是 MySQL 的性能和可扩展性使其在最流行的容器镜像列表中持续占有一席之地。&lt;/li&gt;
&lt;li&gt;Calico：Calico 是一个网络提供商，让管理员可以管理其 Kubernetes 集群内网络的安全性。&lt;/li&gt;
&lt;li&gt;GitLab：为了帮助团队采用和维护 DevOps 实践，GitLab 提供了存储库管理、问题跟踪和 CI/CD 管道。&lt;/li&gt;
&lt;li&gt;Vault：团队可以使用 Vault 来简化机密管理并帮助维护安全的应用程序。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wcim7nrxj30ku0cedgh_hufa89ea55422235f9e128d9c14d69b526_34205_4cdab28922f36a3d7834e1cf3d24e222.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wcim7nrxj30ku0cedgh_hufa89ea55422235f9e128d9c14d69b526_34205_9f4e04e0458cda83e22902d023c4dbdd.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wcim7nrxj30ku0cedgh_hufa89ea55422235f9e128d9c14d69b526_34205_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wcim7nrxj30ku0cedgh_hufa89ea55422235f9e128d9c14d69b526_34205_4cdab28922f36a3d7834e1cf3d24e222.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在 Kubernetes StatefulSets 中，我们发现 Redis、Postgres、Elasticsearch、RabbitMQ 和 Kafka 是最常部署的镜像。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/container-insights-2022/008vxvgGgy1h7wciyjri3j30ku0cet9d_hub3edbc071edd10c9960a90a76dde0b92_34719_9904b76a68539f813c0784b9fdcaec0c.webp 400w,
               /blog/container-insights-2022/008vxvgGgy1h7wciyjri3j30ku0cet9d_hub3edbc071edd10c9960a90a76dde0b92_34719_780497bb8ab8a17da00aea5693a7157e.webp 760w,
               /blog/container-insights-2022/008vxvgGgy1h7wciyjri3j30ku0cet9d_hub3edbc071edd10c9960a90a76dde0b92_34719_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/container-insights-2022/008vxvgGgy1h7wciyjri3j30ku0cet9d_hub3edbc071edd10c9960a90a76dde0b92_34719_9904b76a68539f813c0784b9fdcaec0c.webp&#34;
               width=&#34;750&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>云原生社区 meetup 第九期广州站</title>
      <link>https://cloudnative.to/event/cloud-native-meetup-guangzhou-09/</link>
      <pubDate>Sun, 25 Sep 2022 13:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/event/cloud-native-meetup-guangzhou-09/</guid>
      <description>&lt;h3 id=&#34;云原生应用安全应该从哪几个方向切入&#34;&gt;云原生应用安全应该从哪几个方向切入？&lt;/h3&gt;
&lt;p&gt;讲师：马景贺&lt;/p&gt;
&lt;p&gt;个人介绍：&lt;/p&gt;
&lt;p&gt;极狐(GitLab)DevOps 技术布道师，LFAPAC 开源布道师，CDF ambassador。关注在云原生和 DevSecOps 领域。&lt;/p&gt;
&lt;p&gt;议题大纲：&lt;/p&gt;
&lt;p&gt;云原生发展的过程中，安全不应该是成为被忽视的一环。云原生应用程序的安全防护体系建立应该是多方位的，要满足从静态到动态，从源码到上线，同时还要注意镜像以及部署文件的安全。需要将这些手段结合起来，与研发流程打通，构建安全研发闭环，从而保证云原生应用程序的安全。&lt;/p&gt;
&lt;p&gt;听众收益：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;镜像 &amp;amp; IaC 安全扫描&lt;/li&gt;
&lt;li&gt;源代码安全审计（防止泄漏）&lt;/li&gt;
&lt;li&gt;常规的安全检测手段（SAST、DAST、Fuzzing Testing 等）&lt;/li&gt;
&lt;li&gt;漏洞管理 &amp;amp; 安全的研发闭环构建&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;基于硬件卸载的云原生网关连接平衡实现&#34;&gt;基于硬件卸载的云原生网关连接平衡实现&lt;/h3&gt;
&lt;p&gt;讲师：戴翔&lt;/p&gt;
&lt;p&gt;个人介绍：&lt;/p&gt;
&lt;p&gt;Intel云原生工程师，从事云原生行业多年，深耕开源，Dapr/Thanos/Golangci-lint Maintainer， 目前专注于服务网格领域。 GH: daixiang0&lt;/p&gt;
&lt;p&gt;议题大纲：&lt;/p&gt;
&lt;p&gt;Envoy 是为单一服务和应用程序设计的高性能 C++ 分布式代理，也是为大型微服务“服务网格”架构设计的通信总线和“通用数据平面”。基于对 NGINX、HAProxy、硬件负载均衡器和云负载均衡器等解决方案的学习，Envoy 与每个应用程序一起运行，并通过以与平台无关的方式提供通用功能来抽象网络。当基础设施中的所有服务流量都通过 Envoy 网格流动时，通过一致的可观察性来可视化问题区域、调整整体性能并在一个地方添加底层特性变得很容易。在本次演讲中，我们将介绍 Envoy 中的线程模型和连接平衡状态，展示使用 PCI 硬件来平衡每个线程的连接，以及它获得的出色性能。&lt;/p&gt;
&lt;p&gt;听众收益：&lt;/p&gt;
&lt;p&gt;了解当多个客户端连接产生大流量时，Envoy 会因为连接平衡性差而获得较大的尾部延迟。借助核心级别的负载均衡，Envoy 将减少尾部延迟，占用更少的资源来处理更多的请求，从而为用户提供降本增效的双重保障。这可以卸载到硬件负载平衡器，显示结合软件效率和硬件的方向。&lt;/p&gt;
&lt;h3 id=&#34;dapr助力开发云原生应用&#34;&gt;Dapr助力开发云原生应用&lt;/h3&gt;
&lt;p&gt;讲师：张善友&lt;/p&gt;
&lt;p&gt;个人介绍：&lt;/p&gt;
&lt;p&gt;从事.NET技术开发二十余年，认证 CKAD专家， 曾在腾讯工作12年，2018年创立深圳友浩达科技，专注于云原生方面的解决方案咨询。目前在深圳市友浩达科技担任首席架构师，被评为微软最有价值专家MVP， 华为云MVP，腾讯云TVP&lt;/p&gt;
&lt;p&gt;议题大纲：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;.NET云原生案例&lt;/li&gt;
&lt;li&gt;Dapr 介绍&lt;/li&gt;
&lt;li&gt;Dapr助力云原生应用开发
&lt;ol&gt;
&lt;li&gt;服务治理：服务调用、弹性、API网关 和 服务网格&lt;/li&gt;
&lt;li&gt;发布订阅 改造实时服务&lt;/li&gt;
&lt;li&gt;可观测性 日志、分布式追踪、指标采集&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;听众收益：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;了解一种新型的多运行时架构以及开源项目Dapr&lt;/li&gt;
&lt;li&gt;了解如何一套代码如何同时适配虚拟机和容器，适配不同的云环境&lt;/li&gt;
&lt;li&gt;深入Dapr在实际项目中的工程实践&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;容器云调度优化及实践&#34;&gt;容器云调度优化及实践&lt;/h3&gt;
&lt;p&gt;讲师：王琼&lt;/p&gt;
&lt;p&gt;个人介绍：&lt;/p&gt;
&lt;p&gt;目前就职于YY直播，担任高级SRE运维工程师，负责YY直播容器云。10年的工作经验，6年以上的容器相关平台经验，在云原生领域持续深耕，曾在多家公司主导并落地云原生技术和企业容器化改造，致力于打造稳定高效的容器云平台，目前负责YY直播容器云的迭代更新以及新技术落地&lt;/p&gt;
&lt;p&gt;议题大纲：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;YY直播容器云介绍&lt;/li&gt;
&lt;li&gt;业务资源使用画像实现&lt;/li&gt;
&lt;li&gt;基于节点实际负载调度&lt;/li&gt;
&lt;li&gt;基于节点实际负载二次调度&lt;/li&gt;
&lt;li&gt;通过virtual kubelet实现集群峰值弹性能力&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;听众收益：&lt;/p&gt;
&lt;p&gt;大规模容器化落地遇到的问题及挑战如何应对突发流量，实现集群的峰值弹性能力如何引进云原生技术，并在生产环境中落地及整合&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
