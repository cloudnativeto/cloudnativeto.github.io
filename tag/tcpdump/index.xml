<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tcpdump | 云原生社区（中国）</title>
    <link>https://cloudnative.to/tag/tcpdump/</link>
      <atom:link href="https://cloudnative.to/tag/tcpdump/index.xml" rel="self" type="application/rss+xml" />
    <description>Tcpdump</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Thu, 28 May 2020 15:00:00 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/media/sharing.png</url>
      <title>Tcpdump</title>
      <link>https://cloudnative.to/tag/tcpdump/</link>
    </image>
    
    <item>
      <title>Kubernetes v1.17&#43; 集群下 CNI 使用 VXLAN 模式 SVC 有 63 秒延迟的触发原因定位</title>
      <link>https://cloudnative.to/blog/kubernetes-1-17-vxlan-63s-delay/</link>
      <pubDate>Thu, 28 May 2020 15:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/kubernetes-1-17-vxlan-63s-delay/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;这个问题 flannel 和 calico 的 VXLAN 模式下都会发生，部分人的集群的 A 记录 UDP 下查询可能有问题。原因是 &lt;code&gt;v1.17+&lt;/code&gt; 的 kubernetes 某部分会引起内核的某个 UDP 相关的 BUG 而不是 CNI 的软件层面，WEAVE 没有这个问题，原因后面会说到。写这篇文章的日期是 &lt;code&gt;05/28&lt;/code&gt;，最开始发现是上周五也就是 &lt;code&gt;05/23&lt;/code&gt; 号，文章从时间线写起，因为很多时候想发文章但是没空。&lt;/p&gt;
&lt;p&gt;2020-07-19 官方版本 v1.18.6, v1.16.13, v1.17.9+ 已经修复这个问题，可以同版本内升级，或者只切 kube-proxy 版本。&lt;/p&gt;
&lt;h2 id=&#34;由来&#34;&gt;由来&lt;/h2&gt;
&lt;p&gt;上周五我经过同事的工位看到同事的桌面是 &lt;code&gt;kubectl get po&lt;/code&gt; 的输出，问他咋开始学 Kubernetes 了，他说跟着视频学下。看了下用的 kubeadm 部署了一套 &lt;code&gt;1.18.2&lt;/code&gt; 的集群。1.18 的 kube-proxy 的 ipvs 包的 parseIP 有 bug，我推荐他换 &lt;code&gt;v1.17.5&lt;/code&gt;。他当时在部署一个入门的 SVC 实验，无法解析域名。使用 dig 命令排查了下，下面是对照：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dig @&amp;lt;podIP&amp;gt; +short kubernetes.default.svc.cluster.local&lt;/code&gt; 能解析&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig @10.96.0.10 +short kubernetes.default.svc.cluster.local&lt;/code&gt; 超时&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多市面上的 kubeadm 部署教程都是直接命令 &lt;code&gt;kubeadm init&lt;/code&gt; 的，所以我推荐同事去按照我文章的 &lt;a href=&#34;https://zhangguanzhang.github.io/2019/11/24/kubeadm-base-use/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubeadm 部署&lt;/a&gt; 一套后再试试，叫他用&lt;code&gt;v1.17&lt;/code&gt;的最新版本&lt;code&gt;v1.17.5&lt;/code&gt;，结果还是上面一样。coredns 实际上还有 metrics 的 http 接口，从 http 层测了下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl -I 10.96.0.10:9153/metrics&lt;/code&gt; 超时，很久之后才有返回&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -I &amp;lt;podIP&amp;gt;:9153/metrics&lt;/code&gt; 能直接返回&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;涉及到本次排查的信息为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get node -o wide
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME     STATUS   ROLES    AGE    VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION          CONTAINER-RUNTIME
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;master   Ready    master   7d8h   v1.18.2   10.0.100.3    &amp;lt;none&amp;gt;        CentOS Linux &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Core&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   3.10.0-957.el7.x86_64   docker://19.3.8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;node1    Ready    &amp;lt;none&amp;gt;   7d7h   v1.18.2   10.0.100.4    &amp;lt;none&amp;gt;        CentOS Linux &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Core&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   3.10.0-957.el7.x86_64   docker://19.3.8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;node2    Ready    &amp;lt;none&amp;gt;   7d7h   v1.18.2   10.0.100.15   &amp;lt;none&amp;gt;        CentOS Linux &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Core&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   3.10.0-957.el7.x86_64   docker://19.3.8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get po -o wide -n kube-system -l k8s-app&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;kube-dns
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                       READY   STATUS    RESTARTS   AGE   IP            NODE    NOMINATED NODE   READINESS GATES
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;coredns-546565776c-v5wwg   1/1     Running   &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;          25h   10.244.2.73   node2   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;多次尝试发现很久的时间都是一样，用 time 命令观察了下一直是 63 秒返回。包括其他任何 SVC 都是这样。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt;    curl -I 10.96.0.10:9153/metrics
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HTTP/1.1 &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: text/plain&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.0.4&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date: Wed, &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; May &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; 08:39:35 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real	1m3.091s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user	0m0.002s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sys	0m0.007s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;proxyMode 是 ipvs，用 ipvsadm 看下超时的时候的状态，一直是 &lt;code&gt;SYN_RECV&lt;/code&gt;，也就是发送了 SYN，没收到回包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ipvsadm -lnc &lt;span class=&#34;p&#34;&gt;|&amp;amp;&lt;/span&gt; grep &lt;span class=&#34;m&#34;&gt;9153&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;TCP 00:59  SYN_RECV    10.96.0.10:41282   10.96.0.10:9153    10.244.2.73:9153
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;抓包&#34;&gt;抓包&lt;/h3&gt;
&lt;p&gt;因为 CNI 使用的 flannel，用的 VXLAN 模式。master 上抓 9153 和 &lt;code&gt;flannel.1&lt;/code&gt; 的 8472 端口，coredns 的 POD 所在 node 上抓 flannel 的 VXLAN 包，下面三个是对应的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@master /root]# tcpdump -nn -i flannel.1 port 9153
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on flannel.1, link-type EN10MB (Ethernet), capture size 262144 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:30:56.705696 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17148909 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:30:57.708489 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17149912 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:30:59.712458 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17151916 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:03.716441 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17155920 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:11.732562 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17163936 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:27.764498 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17179968 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.828493 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17212032 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829565 IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [S.], seq 435819916, ack 911217172, win 27960, options [mss 1410,sackOK,TS val 17212067 ecr 17212032,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829611 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 1, win 342, options [nop,nop,TS val 17212033 ecr 17212067], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829714 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [P.], seq 1:88, ack 1, win 342, options [nop,nop,TS val 17212033 ecr 17212067], length 87
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829897 IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [.], ack 88, win 219, options [nop,nop,TS val 17212067 ecr 17212033], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831300 IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [P.], seq 1:113, ack 88, win 219, options [nop,nop,TS val 17212069 ecr 17212033], length 112
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831322 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 113, win 342, options [nop,nop,TS val 17212034 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831435 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [F.], seq 88, ack 113, win 342, options [nop,nop,TS val 17212035 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831633 IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [F.], seq 113, ack 89, win 219, options [nop,nop,TS val 17212069 ecr 17212035], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831660 IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 114, win 342, options [nop,nop,TS val 17212035 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@master /root]# tcpdump -nn -i eth0 port 8472
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:30:56.705718 IP 10.0.100.3.48683 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17148909 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:30:57.708523 IP 10.0.100.3.48683 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17149912 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:30:59.712478 IP 10.0.100.3.48683 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17151916 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:03.716452 IP 10.0.100.3.48683 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17155920 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:11.732590 IP 10.0.100.3.48683 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17163936 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:27.764513 IP 10.0.100.3.48683 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17179968 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.828541 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17212032 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829521 IP 10.0.100.15.56771 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [S.], seq 435819916, ack 911217172, win 27960, options [mss 1410,sackOK,TS val 17212067 ecr 17212032,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829617 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 1, win 342, options [nop,nop,TS val 17212033 ecr 17212067], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829729 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [P.], seq 1:88, ack 1, win 342, options [nop,nop,TS val 17212033 ecr 17212067], length 87
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.829883 IP 10.0.100.15.34571 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [.], ack 88, win 219, options [nop,nop,TS val 17212067 ecr 17212033], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831292 IP 10.0.100.15.34571 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [P.], seq 1:113, ack 88, win 219, options [nop,nop,TS val 17212069 ecr 17212033], length 112
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831327 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 113, win 342, options [nop,nop,TS val 17212034 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831448 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [F.], seq 88, ack 113, win 342, options [nop,nop,TS val 17212035 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831612 IP 10.0.100.15.34571 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [F.], seq 113, ack 89, win 219, options [nop,nop,TS val 17212069 ecr 17212035], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.831665 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 114, win 342, options [nop,nop,TS val 17212035 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[root@node2 /root]# tcpdump -nn  -i eth0 port 8472
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.836137 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [S], seq 911217171, win 43690, options [mss 65495,sackOK,TS val 17212032 ecr 0,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.836328 IP 10.0.100.15.56771 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [S.], seq 435819916, ack 911217172, win 27960, options [mss 1410,sackOK,TS val 17212067 ecr 17212032,nop,wscale 7], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.836811 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 1, win 342, options [nop,nop,TS val 17212033 ecr 17212067], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.836910 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [P.], seq 1:88, ack 1, win 342, options [nop,nop,TS val 17212033 ecr 17212067], length 87
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.836951 IP 10.0.100.15.34571 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [.], ack 88, win 219, options [nop,nop,TS val 17212067 ecr 17212033], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.838385 IP 10.0.100.15.34571 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [P.], seq 1:113, ack 88, win 219, options [nop,nop,TS val 17212069 ecr 17212033], length 112
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.838522 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 113, win 342, options [nop,nop,TS val 17212034 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.838621 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [F.], seq 88, ack 113, win 342, options [nop,nop,TS val 17212035 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.838703 IP 10.0.100.15.34571 &amp;gt; 10.0.100.3.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.2.73.9153 &amp;gt; 10.244.0.0.2201: Flags [F.], seq 113, ack 89, win 219, options [nop,nop,TS val 17212069 ecr 17212035], length 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;16:31:59.838836 IP 10.0.100.3.56618 &amp;gt; 10.0.100.15.8472: OTV, flags [I] (0x08), overlay 0, instance 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP 10.244.0.0.2201 &amp;gt; 10.244.2.73.9153: Flags [.], ack 114, win 342, options [nop,nop,TS val 17212035 ecr 17212069], length 0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先看上面的第一部分，搜了下资料，得知 TCP 默认 SYN 报文最大 retry 5 次，每次超时了翻倍，&lt;code&gt;1s -&amp;gt; 3s -&amp;gt; 7s -&amp;gt; 15s -&amp;gt; 31s -&amp;gt; 63s&lt;/code&gt;。只有 63 秒的时候 node 的机器上才收到了 VXLAN 的报文。说明 POD 所在  node 压根没收到 63 秒之前的。&lt;/p&gt;
&lt;p&gt;一般 LVS 的 dr 模式下 TCP 的时间戳混乱或者其他几个 ARP 的内核参数不对下 &lt;code&gt;SYN&lt;/code&gt; 是一直收不到的而不是 63 秒后有结果，所以和内核相关参数无关。于是同样上面的步骤 tcpdump 抓包，加上&lt;code&gt;-w filename.pcap&lt;/code&gt;选项把抓的包导出下来导入到 wireshark 里准备看看。&lt;/p&gt;
&lt;h3 id=&#34;报文分析&#34;&gt;报文分析&lt;/h3&gt;
&lt;p&gt;9153 的包 wireshark 里看 63 秒前面都是 TCP 的 SYN 重传，看到了 master 上向外发送的 VXLAN 报文的时候有了发现。&lt;/p&gt;
&lt;p&gt;可以看到 UDP 的 checksum 是&lt;code&gt;0xffff&lt;/code&gt;，我对 UDP 报文不太熟悉，UDP 的 header 的 Checksum 没记错的话 &lt;code&gt;CRC32&lt;/code&gt; 校验的，不可能是这种两个字节都置 1 的 &lt;code&gt;0xffff&lt;/code&gt; ，明显就是 UDP 的 header 的校验出错了。后面几个正常包的 Checksum 都是 missing 的。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-vxlan1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vxlan1&#34; srcset=&#34;
               /blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum1_hu1696093041531501480.webp 400w,
               /blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum1_hu13040082139202888654.webp 760w,
               /blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum1_hu9330407072857251378.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum1_hu1696093041531501480.webp&#34;
               width=&#34;760&#34;
               height=&#34;629&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      vxlan1
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;wireshark 的&lt;code&gt;编辑&lt;/code&gt;-&amp;gt;&lt;code&gt;首选项&lt;/code&gt;-&amp;gt;&lt;code&gt;Protocols&lt;/code&gt;-&amp;gt;&lt;code&gt;UDP&lt;/code&gt;-&amp;gt;&lt;code&gt;Validate the UDP checksum if possible&lt;/code&gt; 勾上更直观看。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-vxlan1&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;vxlan1&#34; srcset=&#34;
               /blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum2_hu2921005566474293197.webp 400w,
               /blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum2_hu13399594073064468691.webp 760w,
               /blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum2_hu15988736545352610368.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/kubernetes-1-17-vxlan-63s-delay/vxlan-udp-csum2_hu2921005566474293197.webp&#34;
               width=&#34;760&#34;
               height=&#34;591&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      vxlan1
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;不是根本的解决方法&#34;&gt;不是根本的解决方法&lt;/h3&gt;
&lt;p&gt;搜了下 &lt;code&gt;wireshark linux udp checksum incorrect&lt;/code&gt;，都是推荐把 &lt;code&gt;Checksum Offload&lt;/code&gt; disable 掉就行了，例如我这里是 flannel，则是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ /sbin/ethtool -K flannel.1 tx-checksum-ip-generic off
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Actual changes:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tx-checksumming: off
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	tx-checksum-ip-generic: off
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcp-segmentation-offload: off
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	tx-tcp-segmentation: off &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;requested on&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	tx-tcp-ecn-segmentation: off &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;requested on&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	tx-tcp6-segmentation: off &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;requested on&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	tx-tcp-mangleid-segmentation: off &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;requested on&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;udp-fragmentation-offload: off &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;requested on&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再测下正常，而 WEAVE 他们也用的 VXLAN 模式，但是他们在创建网卡的时候把这个已经 off 掉了，所以 WEAVE 的 VXLAN 模式在 &lt;code&gt;v1.17+&lt;/code&gt; 集群没出现这个问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; curl -I 10.96.0.10:9153
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HTTP/1.1 &lt;span class=&#34;m&#34;&gt;404&lt;/span&gt; Not Found
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: text/plain&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;X-Content-Type-Options: nosniff
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date: Wed, &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt; May &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; 02:14:04 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real	0m0.009s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user	0m0.005s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sys	0m0.003s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你以为这样就完了？其实并没有，因为我自己维护了一套 &lt;a href=&#34;https://github.com/zhangguanzhang/Kubernetes-ansible&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ansible 部署 kubernetes&lt;/a&gt; 的方案，每次新版本发布我都会实际测下。并且同事反映了他同样云主机开出来用我 ansible 部署 &lt;code&gt;v1.17.5&lt;/code&gt; 没有这个问题。这就很奇怪了，原因后面说，请接着继续看。&lt;/p&gt;
&lt;h3 id=&#34;什么是-checksum-offload&#34;&gt;什么是 checksum offload&lt;/h3&gt;
&lt;p&gt;Checksum Offload 是网卡的一个功能选项。如果该选项开启，则网卡层面会计算需要发送或者接收到的消息的校验和，从而节省 CPU 的计算开销。此时，在需要发送的消息到达网卡前，系统会在报头的校验和字段填充一个随机值。但是，尽管校验和卸载能够降低 CPU 的计算开销，但受到计算能力的限制，某些环境下的一些网络卡计算速度不如主频超过 400MHz 的 CPU 快。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;h3 id=&#34;对照组&#34;&gt;对照组&lt;/h3&gt;
&lt;p&gt;很奇怪的就是为啥就是我的 ansible 部署的二进制就正常没这个问题，而 kubeadm 部署的就不正常，后面我花时间整了以下几个对照组 (期间同事也帮我做了几个条件下的测试，但是不是系统用错了就是版本整错了。。。)，终于找到了问题的范围，下面是我自己统计的对照组信息，kubeadm 和 ansible 版本均为&lt;code&gt;1.17.5&lt;/code&gt;测试。os 不重要，因为最终排查出和 os 无关：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;os&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;type(kubeadm or ansible)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;flannel version&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;flannel is running in pod?&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;will 63 sec delay?&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.11.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.12.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.11.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.12.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ansible&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.11.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ansible&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.12.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ansible&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.11.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ansible&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v0.12.0&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这就看起来很迷了。但是排查出和 flannel 无关，感觉 kube-proxy 有关系，然后今天 &lt;code&gt;05/28&lt;/code&gt; 针对 kube-proxy 做了个对照组：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;os&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;type(kubeadm or ansible)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;kube-proxy version&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;kube-proxy is running in pod?&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;will 63 sec delay?&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v1.17.5&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v1.17.5&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v1.16.9&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;kubeadm&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v1.16.9&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ansible&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v1.17.5&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7.6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;ansible&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;v1.17.5&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;no&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可以看出就是 1.17 以上的 kube-proxy 如果使用 POD 则会有这个问题，而非 POD 则不会，在 github 上 &lt;a href=&#34;https://github.com/kubernetes/kubernetes/compare/v1.16.3...v1.17.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;compare 了下 v1.17.0 和 v1.16.3 &lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;发现了 &lt;a href=&#34;https://github.com/kubernetes/kubernetes/commit/fed582333f639dc22e879f4bbb258e403c210c30&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dockerfile 的改动&lt;/a&gt;，&lt;code&gt;1.17.0&lt;/code&gt; 里的 Dockerfile 的 BASEIMAGE 是用  &lt;a href=&#34;https://github.com/coreos/flannel/pull/1282#issuecomment-635273081&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;指定了一个源安装了最新的 iptables&lt;/a&gt;，然后利用 &lt;code&gt;update-alternatives&lt;/code&gt; 把脚本 &lt;code&gt;/usr/sbin/iptables-wrapper&lt;/code&gt; 去替代 &lt;code&gt;iptables&lt;/code&gt; 来检测应该使用 &lt;code&gt;nft&lt;/code&gt; 还是 &lt;code&gt;legacy&lt;/code&gt;，hack 下镜像回自带源里的 iptables 验证下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; registry.aliyuncs.com/google_containers/kube-proxy:v1.17.5&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; rm -f /usr/sbin/iptables &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;    clean-install iptables&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;构建的镜像推送到了 dockerhub 上 &lt;code&gt;zhangguanzhang/hack-kube-proxy:v1.17.5&lt;/code&gt;，更改下集群 kube-proxy ds 的镜像。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl -n kube-system get ds kube-proxy -o yaml &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep image:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        image: zhangguanzhang/hack-kube-proxy:v1.17.5
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试访问成功。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; curl -I 10.96.0.10:9153
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HTTP/1.1 &lt;span class=&#34;m&#34;&gt;404&lt;/span&gt; Not Found
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: text/plain&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;X-Content-Type-Options: nosniff
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date: Thu, &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt; May &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; 04:47:21 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real	0m0.008s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user	0m0.003s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sys	0m0.003s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于这个问题我在 &lt;a href=&#34;https://github.com/coreos/flannel/pull/1282&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flannel 的 pr&lt;/a&gt; 下面也参与了回复，同时在官方 github 上提了一个 &lt;a href=&#34;https://github.com/kubernetes/kubernetes/issues/91519&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这个问题的触发是由于&lt;code&gt;v1.17+&lt;/code&gt;的 kube-proxy 的 docker 镜像里安装了最新的 iptables， &lt;code&gt;--random-fully&lt;/code&gt; 选项&lt;a href=&#34;https://github.com/kubernetes/kubernetes/issues/88986#issuecomment-635640143&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;会触发内核 vxlan 的 bug&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;目前解决问题三种办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关闭 CNI 的 VXLAN 网卡的 &lt;code&gt;checksum offload&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;更改 Docker 镜像&lt;/li&gt;
&lt;li&gt;升级到新内核，具体版本就不知道了，只要在这个 &lt;a href=&#34;https://github.com/torvalds/linux/commit/ea64d8d6c675c0bb712689b13810301de9d8f77a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;内核 pr&lt;/a&gt; 合并后出的内核版本都行，有人说这些可以 &lt;code&gt;Stable kernels 5.6.13, 5.4.41, 4.19.123, 4.14.181 and later have the checksum patch included.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/u010039418/article/details/78234570&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TCP 超时重传定时器梳理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.wireshark.org/CaptureSetup/Offloading&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wireshark 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/TCP%E6%A0%A1%E9%AA%8C%E5%92%8C%E5%8D%B8%E8%BD%BD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;offloading&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
