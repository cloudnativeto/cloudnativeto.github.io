<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杨子锋 | 云原生社区</title>
    <link>https://cloudnative.to/translators/%E6%9D%A8%E5%AD%90%E9%94%8B/</link>
      <atom:link href="https://cloudnative.to/translators/%E6%9D%A8%E5%AD%90%E9%94%8B/index.xml" rel="self" type="application/rss+xml" />
    <description>杨子锋</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Thu, 31 Dec 2020 10:03:00 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/translators/%E6%9D%A8%E5%AD%90%E9%94%8B/avatar_hue38add62c87b7486d80c9f3fda25dfc1_12220_270x270_fill_q75_lanczos_center.jpg</url>
      <title>杨子锋</title>
      <link>https://cloudnative.to/translators/%E6%9D%A8%E5%AD%90%E9%94%8B/</link>
    </image>
    
    <item>
      <title>Envoy HTTP 连接管理</title>
      <link>https://cloudnative.to/blog/envoy-http-connection-management/</link>
      <pubDate>Thu, 31 Dec 2020 10:03:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/envoy-http-connection-management/</guid>
      <description>&lt;p&gt;本文译自 Envoy 官方文档 &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP connection management&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;http-连接管理&#34;&gt;HTTP 连接管理&lt;/h2&gt;
&lt;p&gt;HTTP 是现代面向服务体系架构的重要组成部分，Envoy 实现了大量的 HTTP 特定功能。Envoy 内置了一个叫 &lt;a href=&#34;https://cloudnative.to/envoy/configuration/http/http_conn_man/http_conn_man.html#config-http-conn-man&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP 连接管理器&lt;/a&gt; 的网络层过滤器。 此过滤器将原始字节转换为 HTTP 协议的消息和事件，例如，请求头接收、请求体数据接收、请求标尾 (trailers) 接收等。 过滤器同时处理所有 HTTP 连接和请求的通用功能，例如 &lt;a href=&#34;https://cloudnative.to/envoy/intro/arch_overview/observability/access_logging.html#arch-overview-access-logs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;访问日志&lt;/a&gt;、 &lt;a href=&#34;https://cloudnative.to/envoy/intro/arch_overview/observability/tracing.html#arch-overview-tracing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;请求 ID 生成与追踪&lt;/a&gt;、 &lt;a href=&#34;https://cloudnative.to/envoy/configuration/http/http_conn_man/headers.html#config-http-conn-man-headers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;请求头/响应头的操作&lt;/a&gt;、 &lt;a href=&#34;https://cloudnative.to/envoy/intro/arch_overview/http/http_routing.html#arch-overview-http-routing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;路由表&lt;/a&gt; 管理和 &lt;a href=&#34;https://cloudnative.to/envoy/configuration/http/http_conn_man/stats.html#config-http-conn-man-stats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;统计&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;HTTP 连接管理器 &lt;a href=&#34;https://cloudnative.to/envoy/configuration/http/http_conn_man/http_conn_man.html#config-http-conn-man&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;配置&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;http-协议&#34;&gt;HTTP 协议&lt;/h2&gt;
&lt;p&gt;Envoy 的 HTTP 连接管理器原生支持 HTTP/1.1、WebSockets 和 HTTP/2。现在还不支持 SPDY。Envoy HTTP 设计的首要目标是成为一个 HTTP/2 多路复用代理。在内部， HTTP/2 术语用于描述系统组件。例如，一个 HTTP 请求和响应发生在流上。一个编解码 API 被用来将不同的电报协议转换为流、请求、响应等协议无关的格式。 对于 HTTP/1.1 来说，编解码器将协议的串行/流功能转换成像 HTTP/2 的某些东西提供给更高层级。这意味着大部分代码不需要理解一个流是来自 HTTP/1.1 还是 HTTP/2 连接。&lt;/p&gt;
&lt;h2 id=&#34;http-头清理&#34;&gt;HTTP 头清理&lt;/h2&gt;
&lt;p&gt;HTTP 连接管理器执行各种 &lt;a href=&#34;https://cloudnative.to/envoy/configuration/http/http_conn_man/header_sanitizing.html#config-http-conn-man-header-sanitizing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;头清理&lt;/a&gt; 操作为了安全因素。&lt;/p&gt;
&lt;h2 id=&#34;路由表配置&#34;&gt;路由表配置&lt;/h2&gt;
&lt;p&gt;每一个 &lt;a href=&#34;https://cloudnative.to/envoy/configuration/http/http_conn_man/http_conn_man.html#config-http-conn-man&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP 连接管理过滤器&lt;/a&gt; 有一个相关的 &lt;a href=&#34;https://cloudnative.to/envoy/intro/arch_overview/http/http_routing.html#arch-overview-http-routing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;路由表&lt;/a&gt;。路由表可以使用下面两种之一来配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态配置。&lt;/li&gt;
&lt;li&gt;基于 &lt;a href=&#34;https://cloudnative.to/envoy/configuration/http/http_conn_man/rds.html#config-http-conn-man-rds&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RDS API&lt;/a&gt; 的动态配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;重试插件配置&#34;&gt;重试插件配置&lt;/h2&gt;
&lt;p&gt;通常在重试期间，主机选择遵循与原始请求相同的过程。重试插件可以用来修改这种行为，它们分为两类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-retrypolicy-retry-host-predicate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;主机谓词&lt;/a&gt;：这些谓词可以用来“拒绝”一个主机，将导致重新尝试主机选择。 可以指定任意数量的谓词，如果任何谓词拒绝主机，则主机将被拒绝。&lt;/p&gt;
&lt;p&gt;Envoy 支持以下内置的主机谓词&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;envoy.retry_host_predicates.previous_hosts&lt;/em&gt;：这将跟踪以前尝试过的主机并且拒绝已经尝试过的主机。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;envoy.retry_host_predicates.omit_canary_hosts&lt;/em&gt;：这将拒绝任何被标记为金丝雀主机的主机。通过在过滤器元数据中为 &lt;code&gt;envoy.lb&lt;/code&gt; 过滤器设置 &lt;code&gt;canary: true&lt;/code&gt; 来标记主机。查看 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/endpoint/v3/endpoint_components.proto.html#envoy-v3-api-msg-config-endpoint-v3-lbendpoint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LbEndpoint&lt;/a&gt; 获得更多信息。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;envoy.retry_host_predicates.omit_host_metadata&lt;/em&gt;：这将拒绝任何符合预定义条件的主机。查看下面的配置示例获得更多信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-retrypolicy-retry-priority&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;优先级谓词&lt;/a&gt;：这类谓词可以用来在为一个重试尝试选择优先级时调整负载的优先级。只可以定义 一个这样的谓词。&lt;/p&gt;
&lt;p&gt;Envoy 内置支持下面的优先级谓词&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;envoy.retry_priorities.previous_priorities&lt;/em&gt;：这将跟踪以前尝试过的优先级，并调整优先级负载，以便在后续重试中将其他优先级作为目标。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主机选择将会继续直到配置的谓词接受主机或者达到了配置的 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-retrypolicy-host-selection-retry-max-attempts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最大尝试次数&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;可以组合使用这些插件来影响主机选择和优先级。Envoy 也可以像添加过滤器一样通过自定义的重试插件进行扩展。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置示例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如，想要配置优先重试没有尝试过的主机，可以使用内置的 &lt;code&gt;envoy.retry_host_predicates.previous_hosts&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;retry_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retry_host_predicate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.retry_host_predicates.previous_hosts&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host_selection_retry_max_attempts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将拒绝已经尝试过的主机，并且最多尝试 3 次主机选择。为了处理寻找一个可用主机过程中不可能发生（没有主机满足谓词）或者不太可能发生（唯一 合适的主机相对权重非常低）的情况，尝试次数的上限是有必要的。&lt;/p&gt;
&lt;p&gt;根据主机的元数据拒绝主机，可以使用 &lt;code&gt;envoy.retry_host_predicates.omit_host_metadata&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;retry_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retry_host_predicate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.retry_host_predicates.omit_host_metadata&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;typed_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;@type&amp;#34;: &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;type.googleapis.com/envoy.extensions.retry.host.omit_host_metadata.v3.OmitHostMetadataConfig&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata_match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;filter_metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;envoy.lb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将拒绝任何匹配元数据中存在（key，value）的主机。&lt;/p&gt;
&lt;p&gt;配置在重试期间重试其他优先级，可以使用内置的 &lt;code&gt;envoy.retry_priorities.previous_priorities&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;retry_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retry_priority&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.retry_priorities.previous_priorities&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;typed_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;@type&amp;#34;: &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;type.googleapis.com/envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;update_frequency&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将针对后续重试中尚未使用过的优先级。&lt;code&gt;update_frequency&lt;/code&gt; 参数决定优先级负载应多长时间重新计算一次。&lt;/p&gt;
&lt;p&gt;这些插件可以被组合使用，这将排除以前尝试过的主机和以前尝试过的优先级。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;retry_policy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retry_host_predicate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.retry_host_predicates.previous_hosts&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host_selection_retry_max_attempts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retry_priority&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.retry_priorities.previous_priorities&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;typed_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;@type&amp;#34;: &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;type.googleapis.com/envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;update_frequency&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;内部重定向&#34;&gt;内部重定向&lt;/h2&gt;
&lt;p&gt;Envoy 支持处理 3xx 内部重定向，捕获可配置的 3xx 重定向响应，合成一个新的请求，将他发送给新路由匹配指定的上游，将重定向的响应作为对原始请求的响应返回。&lt;/p&gt;
&lt;p&gt;内部重定向可以使用路由配置中的 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-routeaction-internal-redirect-policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;内部重定向策略&lt;/a&gt; 字段来配置。 当重定向处理开启，任何来自上游的 3xx 响应，只要匹配到配置的 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-internalredirectpolicy-redirect-response-codes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;redirect_response_codes&lt;/a&gt; 的响应都将由 Envoy 来处理。&lt;/p&gt;
&lt;p&gt;要成功地处理重定向，必须通过以下检查：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;响应码匹配到配置的 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-internalredirectpolicy-redirect-response-codes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;redirect_response_codes&lt;/a&gt;，默认是 302， 或者其他的 3xx 状态码（301, 302, 303, 307, 308）。&lt;/li&gt;
&lt;li&gt;拥有一个有效的、完全限定的 URL 的 location 头。&lt;/li&gt;
&lt;li&gt;该请求必须已被 Envoy 完全处理。&lt;/li&gt;
&lt;li&gt;请求不能包含请求体。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-internalredirectpolicy-allow-cross-scheme-redirect&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;allow_cross_scheme_redirect&lt;/a&gt; 是 true（默认是 false）， 或者下游请求的 scheme 和 location 头一致。&lt;/li&gt;
&lt;li&gt;给定的下游请求之前处理的内部重定向次数不超过请求或重定向请求命中的路由配置的 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-internalredirectpolicy-max-internal-redirects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最大重定向数&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;全部 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-internalredirectpolicy-predicates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;谓词&lt;/a&gt; 接受目标路由。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;任何失败都将导致重定向传递给下游。&lt;/p&gt;
&lt;p&gt;由于重定向请求可能会在不同的路由之间传递，重定向链中的任何满足以下条件的路由都将导致重定向被传递给下游。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;没有启用内部重定向&lt;/li&gt;
&lt;li&gt;或者当重定向链命中的路由的 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-internalredirectpolicy-max-internal-redirects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最大重定向次数&lt;/a&gt; 小于等于重定向链的长度。&lt;/li&gt;
&lt;li&gt;或者路由被 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/config/route/v3/route_components.proto.html#envoy-v3-api-field-config-route-v3-internalredirectpolicy-predicates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;谓词&lt;/a&gt; 拒绝。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有两个谓词可以创建一个有向无环图 (DAG) 来定义一个过滤器链，他们是 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/extensions/internal_redirect/previous_routes/v3/previous_routes_config.proto.html#envoy-v3-api-msg-extensions-internal-redirect-previous-routes-v3-previousroutesconfig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;先前的路由&lt;/a&gt; 谓词 和 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/extensions/internal_redirect/allow_listed_routes/v3/allow_listed_routes_config.proto.html#envoy-v3-api-msg-extensions-internal-redirect-allow-listed-routes-v3-allowlistedroutesconfig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;allow_listed_routes&lt;/a&gt;。 具体来说，&lt;em&gt;allow listed routes&lt;/em&gt; 谓词定义的有向无环图（DAG）中各个节点的边，而 先前的路由 谓词定义了边的“访问”状态，如果是这样就可以避免循环。&lt;/p&gt;
&lt;p&gt;第三个谓词 &lt;a href=&#34;https://cloudnative.to/envoy/api-v3/extensions/internal_redirect/safe_cross_scheme/v3/safe_cross_scheme_config.proto.html#envoy-v3-api-msg-extensions-internal-redirect-safe-cross-scheme-v3-safecrossschemeconfig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;safe_cross_scheme&lt;/a&gt; 被用来防止 HTTP -&amp;gt; HTTPS 的重定向。&lt;/p&gt;
&lt;p&gt;一旦重定向通过这些检查，发送到原始上游的请求头将被修改为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将完全限定的原始请求 URL 放到 x-envoy-original-url 头中。&lt;/li&gt;
&lt;li&gt;使用 Location 头中的值替换 Authority/Host、Scheme、Path 头。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改后的请求头将选择一个新的路由，通过一个新的过滤器链发送，然后把所有正常的 Envoy 请求都发送到上游进行清理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;请注意，HTTP 连接管理器头清理（例如清除不受信任的标头）仅应用一次。即使原始路由和第二个路由相同，每个路由的头修改也将同时应用于原始路由和第二路由，因此请谨慎配置头修改规则， 以避免重复不必要的请求头值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个简单的重定向流如下所示：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端发送 GET 请求以获取 &lt;em&gt;&lt;a href=&#34;http://foo.com/bar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://foo.com/bar&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;上游 1 发送 302 响应码并携带 “&lt;em&gt;location: &lt;a href=&#34;http://baz.com/eep&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://baz.com/eep&lt;/a&gt;&lt;/em&gt;”&lt;/li&gt;
&lt;li&gt;Envoy 被配置为允许原始路由上重定向，并发送新的 GET 请求到上游 2，携带请求头 “&lt;em&gt;x-envoy-original-url: &lt;a href=&#34;http://foo.com/bar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://foo.com/bar&lt;/a&gt;&lt;/em&gt;” 获取 &lt;em&gt;&lt;a href=&#34;http://baz.com/eep&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://baz.com/eep&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Envoy 将 &lt;em&gt;&lt;a href=&#34;http://baz.com/eep&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://baz.com/eep&lt;/a&gt;&lt;/em&gt; 的响应数据代理到客户端，作为对原始请求的响应。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;超时&#34;&gt;超时&lt;/h2&gt;
&lt;p&gt;各种可配置的超时适用于 HTTP 连接及其组成的流。有关重要超时配置的概述，请参考 &lt;a href=&#34;https://cloudnative.to/envoy/faq/configuration/timeouts.html#faq-configuration-timeouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;此 FAQ 条目&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
