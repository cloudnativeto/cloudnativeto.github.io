<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>段访 | 云原生社区（中国）</title>
    <link>https://cloudnativecn.com/translators/%E6%AE%B5%E8%AE%BF/</link>
      <atom:link href="https://cloudnativecn.com/translators/%E6%AE%B5%E8%AE%BF/index.xml" rel="self" type="application/rss+xml" />
    <description>段访</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 25 Sep 2019 10:01:15 +0800</lastBuildDate>
    <image>
      <url>https://cloudnativecn.com/translators/%E6%AE%B5%E8%AE%BF/avatar_hu_993d1b6c8f0963be.jpg</url>
      <title>段访</title>
      <link>https://cloudnativecn.com/translators/%E6%AE%B5%E8%AE%BF/</link>
    </image>
    
    <item>
      <title>你必知的 Kubernetes 自动缩放</title>
      <link>https://cloudnativecn.com/blog/k8s-autoscaling-all-you-need-to-know/</link>
      <pubDate>Wed, 25 Sep 2019 10:01:15 +0800</pubDate>
      <guid>https://cloudnativecn.com/blog/k8s-autoscaling-all-you-need-to-know/</guid>
      <description>&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://caylent.com/kubernetes-autoscaling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;编者按&#34;&gt;编者按&lt;/h2&gt;
&lt;p&gt;许多 Kubernetes 用户，特别是那些企业级用户，很快就遇到了对环境自动缩放的需求。幸运的是，Kubernetes Horizontal Pod Autoscaler（HPA）允许您将部署配置为以多种方式水平扩展。使用 Kubernetes Autoscaling 的最大优势之一是您的集群可以跟踪现有 Pod 的负载能力，并计算是否需要更多的 Pod。&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-autoscaling&#34;&gt;Kubernetes Autoscaling&lt;/h2&gt;
&lt;p&gt;通过协调内置的两层可扩展性，可以充分利用高效的 Kubernetes Autoscaling：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pod 级别的自动缩放：包括 Horizontal Pod Autoscaler（HPA）和 Vertical Pod Autoscaler（VPA）; 两者都可以扩展容器的可用资源。&lt;/li&gt;
&lt;li&gt;集群级别的自动缩放：集群自动调节器（CA）通过在必要时向上或向下扩展集群内的节点数来管理这种可扩展性平面。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;kubernetes-autoscaling-详情&#34;&gt;Kubernetes Autoscaling 详情&lt;/h2&gt;
&lt;h3 id=&#34;horizontal-pod-autoscaler-hpa&#34;&gt;Horizontal Pod Autoscaler (HPA)&lt;/h3&gt;
&lt;p&gt;HPA 会在集群中缩放 Pod 副本的数量。该操作由 CPU 或内存触发，以根据需要向上或向下扩展。但是，也可以根据各种外部的和自定义指标（metrics.k8s.io，external.metrics.k8s.io 和 custom.metrics.k8s.io）来配置 HPA 以扩展 Pod。&lt;/p&gt;
&lt;h3 id=&#34;vertical-pod-autoscaler-vpa&#34;&gt;Vertical Pod Autoscaler (VPA)&lt;/h3&gt;
&lt;p&gt;VPA 主要用于有状态服务，它可根据需要为 Pod 添加 CPU 或内存——它也适用于无状态的 Pod。为了应用这些更改，VPA 重新启动 Pod 以更新新的 CPU 和内存资源，这些资源可以配置为响应 OOM（内存不足）事件而启动。重新启动 Pod 的时候，VPA 始终确保根据 Pod 分配预算（PDB）确定最小数量，您可以设置该资源分配最大和最小速率。&lt;/p&gt;
&lt;h3 id=&#34;cluster-autoscaler-ca&#34;&gt;Cluster Autoscaler (CA)&lt;/h3&gt;
&lt;p&gt;第二层的自动缩放涉及 CA，它在以下情况下自动调整集群的大小：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于集群中的容量不足，任何 Pod/s 都无法运行并进入挂起状态（在这种情况下，CA 将向上扩展）。&lt;/li&gt;
&lt;li&gt;集群中的节点在一段时间内未得到充分利用，并且有可能迁移节点上的 Pod（在这种情况下，CA 将缩小）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CA 进行例行检查以确定是否有任何 pod 因等待额外资源处于待定状态，或者集群节点是否未得到充分利用。如果需要更多资源，会相应地调整 Cluster 节点的数量。CA 与云提供商交互以请求其他节点或关闭空闲节点，并确保按比例放大的集群保持在用户设置的限制范围内。它适用于 AWS，Azure 和 GCP。&lt;/p&gt;
&lt;h2 id=&#34;将-hpa-和-ca-与-amazon-eks-配合使用的-5-个步骤&#34;&gt;将 HPA 和 CA 与 Amazon EKS 配合使用的 5 个步骤&lt;/h2&gt;
&lt;p&gt;本文提供了通过适用于 Kubernetes（Amazon EKS）集群的 Amazon Elastic 容器服务，通过 HPA 和 CA 安装和自动扩展的分步指南。以下指南是两个测试用例示例：&lt;/p&gt;
&lt;h3 id=&#34;集群要求&#34;&gt;集群要求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;满足 EKS 集群要求的 Amazon VPC 和 一个安全组。&lt;/li&gt;
&lt;li&gt;或者，为免手动创建 VPC，AWS 提供了创建了 VPC 和 EKS 的&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CloudFormation 模板&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2018-08-30/amazon-eks-vpc-sample.yaml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CloudFormation YAML 文件&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;应用到集群的&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EKS 角色&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; 根据&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方指南&lt;/a&gt;创建一个 AWS EKS 集群 (控制面板和和工作节点). 一旦你把工作节点以 auto scaling group 的形式启动了，它们会自动向 EKS 集群注册，你就可以开始部署 k8s 应用了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; 部署度量服务器以便HPA能够根据API提供的CPU/内存数据自动缩放POD副本的数量。metrics.k8s.io api 通常由 metrics-server（负责从 summary api 收集 cpu 和内存度量）提供。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; 把以下策略应用到 EKS 创建的 worker 节点的 Role 上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2012-10-17&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;#34;Statement&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;autoscaling:DescribeAutoScalingGroups&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;autoscaling:DescribeAutoScalingInstances&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;autoscaling:DescribeLaunchConfigurations&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;autoscaling:DescribeTags&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;autoscaling:SetDesiredCapacity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;autoscaling:TerminateInstanceInAutoScalingGroup&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;#34;Resource&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; &lt;a href=&#34;https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/examples/cluster-autoscaler-autodiscover.yaml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;部署 k8s CA 特性&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据你使用的 linux 发行版，你可能需要更新部署文件和证书路径。例如，如果使用 AMI Linux，需要用/etc/ssl/certs/ca-bundle.crt 替换/etc/ssl/certs/ca-certificates.crt&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; 更新 CA 的部署 YAML 文件，找到指定的 AWS AG（k8s.io/cluster-autoscaler/&amp;lt;&lt;code&gt;CLUSTER NAME&lt;/code&gt;&amp;gt;应该包含真实的集群名称）标签。
同时更新&lt;code&gt;AWS_REGION&lt;/code&gt;环境变量。&lt;/p&gt;
&lt;p&gt;把以下 tag 添加到 AWS AG，以便 k8s 的 cluster autoscaler 能够自动识别 AWS AG：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;k8s.io/cluster-autoscaler/enabled
k8s.io/cluster-autoscaler/&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;kubernetes-autoscaling-测试用例-1&#34;&gt;Kubernetes Autoscaling 测试用例 #1&lt;/h3&gt;
&lt;p&gt;测试 k8s hpa 特性和 k8s ca 特性同时使用&lt;/p&gt;
&lt;p&gt;要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个运行中的 eks 集群&lt;/li&gt;
&lt;li&gt;安装好 metric server&lt;/li&gt;
&lt;li&gt;安装了 k8s cluster autoscaler 特性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; 部署一个测试 app，为 app 部署创建 HPA 资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; 从不同的地理位置发起请求以增加负载。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; HPA 应该会随着负载的增加开始缩放 pod 的数量。它会根据 hpa 资源指定的进行缩放的。在某一时刻，新的 POD 在等待其他资源的时候会是等待状态。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get nodes -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                             STATUS    ROLES     AGE       VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-189-29.ec2.internal   Ready         1h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-200-20.ec2.internal   Ready         1h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get Pods -o wide -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME READY STATUS RESTARTS AGE IP NODE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-200-20.ec2.internal
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-4mg7w 0/1 Pending &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 17m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-64zkm 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 1h 192.168.210.90 ip-192-168-200-20
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-8nqwk 0/1 Pending &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 17m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-cl8lj 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 27m 192.168.172.71 ip-192-168-189-29
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-cpzdn 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 17m 192.168.219.71 ip-192-168-200-20
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-dn9tb 0/1 Pending &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 17m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; CA 检测到因为容量不足而进入等待状态的 pods，调整 AWS 自动缩放组的大小。一个新的节点加入了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get nodes -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                                       STATUS    ROLES     AGE       VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-189-29.ec2.internal   Ready         2h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-200-20.ec2.internal   Ready         2h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-92-187.ec2.internal   Ready         34s       v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; HPA 能够把等待状态的 POD 调度到新的节点上了。平均 cpu 使用率低于指定的目标，没有必要再调度新的 pod 了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get hpa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME         REFERENCE                    TARGETS   MINPODS   MAXPODS   REPLICAS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache   Deployment/php-apache   40%/50%   &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;                  &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;                 &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;               1h $ kubectl get Pods -o wide -w
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get Pods -o wide -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME READY STATUS RESTARTS AGE IP NODE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-4mg7w 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 25m 192.168.74.4 ip-192-168-92-187
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-64zkm 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 1h 192.168.210.90 ip-192-168-200-20
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-8nqwk 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 25m 192.168.127.85 ip-192-168-92-187
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-cl8lj 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 35m 192.168.172.71 ip-192-168-189-29
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; 关闭几个 terminal，停掉一些负载&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; CPU 平均利用率减小了，所以 HPA 开始更改部署里的 pod 副本数量并杀掉一些 pods&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get hpa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME         REFERENCE                     TARGETS   MINPODS   MAXPODS   REPLICAS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache   Deployment/php-apache   47%/50%     &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;                &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;                 &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;                   1h 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get Pods -o wide -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME READY STATUS RESTARTS AGE IP NODE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-v5kwf 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 36m 192.168.250.0 ip-192-168-200-20
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-vl4zj 1/1 Running &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 36m 192.168.242.153 ip-192-168-200-20
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-8nqwk 1/1 Terminating &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 26m 192.168.127.85 ip-192-168-92-187
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-dn9tb 1/1 Terminating &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 26m 192.168.124.108 ip-192-168-92-187
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-apache-8699449574-k5ngv 1/1 Terminating &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 26m 192.168.108.58 ip-192-168-92-187
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; CA 检测到一个节点未充分使用，正在运行的 pod 能够调度到其他节点上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                             STATUS    ROLES     AGE       VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-189-29.ec2.internal   Ready         2h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-200-20.ec2.internal   Ready         2h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-92-187.ec2.internal   NotReady       23m       v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                             STATUS    ROLES     AGE       VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-189-29.ec2.internal   Ready         2h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-200-20.ec2.internal   Ready         2h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; 在向下缩放的时候，terminal 中应该没有明显的 timeout&lt;/p&gt;
&lt;h3 id=&#34;kubernetes-autoscaling-测试用例-2&#34;&gt;Kubernetes Autoscaling 测试用例 #2&lt;/h3&gt;
&lt;p&gt;测试在如果没有足够的 CPU 容量调度 pod 下，CA 是否能够自动调整集群的大小&lt;/p&gt;
&lt;p&gt;要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个运行中的 aws eks 集群&lt;/li&gt;
&lt;li&gt;Kubernetes ca 特性已安装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; 创建 2 个请求小于 1vcpu 的 deployment&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl run nginx --image&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nginx:latest --requests&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;200m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl run nginx2 --image&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nginx:latest --requests&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;200m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; 创建一个新的 deployment，请求比剩余的 cpu 更多的资源&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl run nginx3 --image&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nginx:latest --requests&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; 新的 POD 会处于等待状态，因为没有可用的资源：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get Pods -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                      READY     STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx-5fcb54784c-lcfht    1/1       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          13m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx2-66667bf959-2fmlr   1/1       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx3-564b575974-xcm5t   0/1       Pending   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          41s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;描述 pod 的时候，可能会看到没有足够的 cpu 的事件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl describe Pod nginx3-564b575974-xcm5t
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;…..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;…..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Events:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Type     Reason            Age               From               Message
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;----     ------            ----              ----               -------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Warning  FailedScheduling  32s &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;x7 over 1m&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  default-scheduler  0/1 nodes are available: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; Insufficient cpu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; CA 自动调整集群的大小，新加了一个节点&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                              STATUS    ROLES     AGE       VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-142-179.ec2.internal   Ready         1m        v1.10.3  &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;ip-192-168-82-136.ec2.i&lt;/span&gt;nternal     Ready         1h        v1.10.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; 集群现在有了足够的资源以运行 pod&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get Pods
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                      READY     STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx-5fcb54784c-lcfht    1/1       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          48m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx2-66667bf959-2fmlr   1/1       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          37m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx3-564b575974-xcm5t   1/1       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          35m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; 两个部署删除了。一段时间后，CA 检测到集群中的一个节点未被充分利用，运行的 pod 可以安置到其他存在的节点上。AWS AG 更新，节点数量减 1。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                                      STATUS    ROLES     AGE       VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip-192-168-82-136.ec2.internal   Ready         1h          v1.10.3 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get Pods -o wide
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                        READY     STATUS    RESTARTS   AGE       IP                       NODE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx-5fcb54784c-lcfht   1/1       Running     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;                   1h       192.168.98.139   ip-192-168-82-136
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;清除环境的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;删除添加到 eks worker 节点上 Role 的自定义策略&lt;/li&gt;
&lt;li&gt;按照这个&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;指南&lt;/a&gt;删除这个集群&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;其他的关于 kubernetes autoscaling，可以阅读 Stefan Prodan 的文章 &lt;a href=&#34;https://github.com/stefanprodan/k8s-prom-hpa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes Horizontal Pod Autoscaler with Prometheus Custom Metrics&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;还有这些链接也可以看看 &lt;a href=&#34;https://caylent.com/spotlight-on-kubernetes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link1&lt;/a&gt;, &lt;a href=&#34;https://caylent.com/50-useful-kubernetes-tools/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link2&lt;/a&gt;, &lt;a href=&#34;https://caylent.com/best-practices-kubernetes-pods/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link3&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
