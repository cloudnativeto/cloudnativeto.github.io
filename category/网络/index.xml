<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络 | 云原生社区（中国）</title>
    <link>https://cloudnative.to/category/%E7%BD%91%E7%BB%9C/</link>
      <atom:link href="https://cloudnative.to/category/%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    <description>网络</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Mon, 18 Feb 2019 17:59:29 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/media/sharing.png</url>
      <title>网络</title>
      <link>https://cloudnative.to/category/%E7%BD%91%E7%BB%9C/</link>
    </image>
    
    <item>
      <title>Cilium 1.4 发布了，新功能一览</title>
      <link>https://cloudnative.to/blog/cilium-1-4/</link>
      <pubDate>Mon, 18 Feb 2019 17:59:29 +0800</pubDate>
      <guid>https://cloudnative.to/blog/cilium-1-4/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-发布概述&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;发布概述&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_d2f3f35e934b005380fcaf5388558f3d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_75e445a1e02c9e39976cda89c640f04e.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_d2f3f35e934b005380fcaf5388558f3d.webp&#34;
               width=&#34;700&#34;
               height=&#34;312&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      发布概述
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://cilium.io/blog/2019/02/12/cilium-14/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们很高兴地宣布 Cilium 1.4 版本。该版本引入了几项新功能以及优化和可扩展性工作。重点包括增加全局服务，提供跨多个集群的 Kubernetes 服务路由、DNS 请求/响应感知授权和可见性、透明加密（beta）、IPVLAN 支持以获得更好的性能和延迟（beta）、与 Flannel 集成、GKE 在 COS 上支持、基于 AWS 元数据的策略实施（alpha）以及优化内存和 CPU 使用的重要工作。&lt;/p&gt;
&lt;p&gt;像往常一样，感谢过去 4 个月中在版本 1.3 和 1.4 之间贡献了 1048 次提交的 Cilium 开发人员及整个社区。&lt;/p&gt;
&lt;h2 id=&#34;cilium-是什么&#34;&gt;Cilium 是什么？&lt;/h2&gt;
&lt;p&gt;Cilium 是一个开源软件，用于透明地提供和保护使用 Kubernetes、Docker 和 Mesos 等 Linux 容器管理平台部署的应用程序服务之间的网络和 API 连接。&lt;/p&gt;
&lt;p&gt;Cilium 的基础是一种名为 BPF 的新 Linux 内核技术，它可以在 Linux 本身内动态插入强大的安全性、可见性和网络控制逻辑。BPF 用于提供诸如多集群路由，负载均衡以取代 kube-proxy，使用 X.509 证书的透明加密以及网络和服务安全性等功能。除了提供传统的网络级安全性之外，BPF 的灵活性还可以通过应用程序协议和 DNS 请求/响应的上下文实现安全性。Cilium 与 Envoy 紧密集成，并提供基于 Go 的扩展框架。由于 BPF 在 Linux 内核中运行，因此可以应用所有 Cilium 功能，而无需对应用程序代码或容器配置进行任何更改。&lt;/p&gt;
&lt;p&gt;有关 &lt;strong&gt;&lt;a href=&#34;https://cilium.readthedocs.io/en/stable/intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium&lt;/a&gt;&lt;/strong&gt; 的更详细的介绍，请参阅**&lt;a href=&#34;https://cilium.readthedocs.io/en/stable/intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium 简介&lt;/a&gt;** 一节。&lt;/p&gt;
&lt;h2 id=&#34;多集群服务路由&#34;&gt;多集群服务路由&lt;/h2&gt;
&lt;p&gt;Cilium 1.3 在多个集群之间引入了基本的 pod IP 路由功能。Cilium 1.4 引入了基于标准 Kubernetes 服务的全局服务概念。全局服务允许用户指定 Kubernetes 服务在多个集群中可用。然后，该服务可以在多个集群中具有后端 pod。&lt;/p&gt;
&lt;p&gt;用户体验就像在每个集群中定义具有相同名称和命名空间的 Kubernetes 服务并添加注释以将其标记为全局一样简单。 















&lt;figure  id=&#34;figure-多集群服务&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;多集群服务&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_460a0f32374978f9622b6bc2446a71b6.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_323e4e4b950309459499d3d82f07ca2d.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_460a0f32374978f9622b6bc2446a71b6.webp&#34;
               width=&#34;760&#34;
               height=&#34;331&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      多集群服务
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;当 pod 向上或向下扩展或变得不健康时，Kubernetes 运行状态检查信息可用于自动添加和删除后端服务。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-多集群故障转移&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;多集群故障转移&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_f1b1c0d82925f7315292c188f29ebfd7.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_d12925d932ffbdb81ff4689bad72fd94.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_f1b1c0d82925f7315292c188f29ebfd7.webp&#34;
               width=&#34;760&#34;
               height=&#34;255&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      多集群故障转移
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;控制平面建立在 etcd 之上，类似于 Kubernetes 原生的操作方式，具有弹性和简单性作为其基本设计模式。每个集群继续运行其自己的 etcd 集群，并且复制以只读方式进行，这可确保集群中的故障不会影响其他集群。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-集群控制平面&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;集群控制平面&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_507810fa8567808ac2f9dbe72b39bb81.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_a78750920b24e86c68d7d3ac9b6e986c.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_507810fa8567808ac2f9dbe72b39bb81.webp&#34;
               width=&#34;700&#34;
               height=&#34;345&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      集群控制平面
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;将集群连接在一起就像使用云供应商的标准路由 API 或基于常规 IP 地址的 VPN 网关和隧道的本地基础设施在 VPC 之间提供路由，然后通过内部 Kubernetes 负载均衡器暴露 Cilium 控制平面以将其暴露给内部 VPC 一样简单。TLS 用于使用作为 Kubernetes Secret 管理的证书和密钥对客户端和服务器进行身份验证。&lt;/p&gt;
&lt;h2 id=&#34;ipvlan-支持测试版&#34;&gt;IPVLAN 支持（测试版）&lt;/h2&gt;
&lt;p&gt;添加了一种新的基于 IPVLAN 的数据路径模式。与基于 veth 的体系结构相比，IPVLAN 具有低延迟优势。使用 netperf 在 3.40Ghz Xeon 上的两个本地容器之间测量了以下基准测试，并使用单核禁用超线程。与 veth 相比，IPVLAN 的 P99 延迟相对较低（越低越好）：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ipvlan-性能-延迟&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;IPVLAN 性能 (延迟)&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_58fdf6153b8057e977662716d0e6b70b.webp 400w,
               /blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_be8511b7d97c062aa90e0a13ee8d5b5a.webp 760w,
               /blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_58fdf6153b8057e977662716d0e6b70b.webp&#34;
               width=&#34;760&#34;
               height=&#34;443&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      IPVLAN 性能 (延迟)
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;IPVLAN 和 veth 之间的最大吞吐量（越高越好）非常相似，但是通过从内核编译 netfilter/iptables 可以实现非常显着的性能提升。如果您不使用 NodePort 服务并且在离开 Kubernete worker node 时不需要伪装网络流量，则已经可以完全运行您的 Kubernetes 集群。我们将在接下来的几周内提供有关如何运行 iptables 和 kube-proxy 的指南。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ipvlan-性能&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;IPVLAN 性能&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_9972362f02080a035c74c029ff86c1b8.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_6bcbca9f8d3e5e8b4e39c81b5fd64e3e.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_9972362f02080a035c74c029ff86c1b8.webp&#34;
               width=&#34;604&#34;
               height=&#34;371&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      IPVLAN 性能
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;IPVLAN 是 1.4 中的 beta 级功能，有关如何启用和配置该功能的说明，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/ipvlan/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IPVLAN 入门指南&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;dns请求响应的安全性和可见性&#34;&gt;DNS请求/响应的安全性和可见性&lt;/h2&gt;
&lt;p&gt;Cilium 1.4 扩展了现有的 DNS 安全策略模型，以了解各个 pod 发出的 DNS 请求以及它们收到的 DNS 响应。这显着提高了访问集群外部服务的 pod 的安全性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在执行 DNS 查找时，可以将 Pod 限制为具有最小权限，即 pod 可以仅限于查找匹配模式的 DNS 名称，例如 &lt;code&gt;*.domain.com&lt;/code&gt; 。任何超出允许模式的请求都将收到 &lt;code&gt;request refused&lt;/code&gt; DNS 响应。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS 查找后的通信可以限制为特定 pod 接收的 DNS 响应中返回的 IP 地址。这显着降低了受损应用程序的权限，并提高了基于 DNS 的策略规则的可靠性，因为执行逻辑不再需要知道 DNS 名称可以映射到的所有可能的 IP 地址。&lt;/p&gt;
&lt;p&gt;特别是对于云供应商提供的流行存储，消息传递和数据库服务，单个 DNS 名称可以映射到数百或数千个 IP 地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在可以通过 API 访问的 Cilium 授权日志记录层记录 DNS 查找和响应。这提供了 pod 执行的每个 DNS 请求和响应的精确日志。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-dns&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;DNS&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_2c154926a343b88310bf2b9d42643b8f.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_146386a96e365a2751edbebd59f5cef2.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_2c154926a343b88310bf2b9d42643b8f.webp&#34;
               width=&#34;760&#34;
               height=&#34;163&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      DNS
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;上面的示例显示了一个成功的 DNS 序列，然后是 DNS 服务器响应的对 IP 的 HTTP 请求。这是应用程序的行为方式和允许的方式。后续 HTTP 请求可以使用缓存的 DNS 信息，允许此类请求。DNS 信息将根据记录中的 TTL 信息超时。&lt;/p&gt;
&lt;p&gt;右侧是应用程序在允许的 DNS 策略之外执行 DNS 查找的序列。它还显示，如果应用程序无法执行 DNS 查找，则在应用程序无法在以下位置查找 DNS 名称时，即使 IP 地址实际映射到允许的 DNS 名称，也会阻止任何尝试联系 IP 地址的尝试。一点。&lt;/p&gt;
&lt;h3 id=&#34;策略示例&#34;&gt;策略示例&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;egress-domain-wildcard&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;myService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#39;k8s:io.kubernetes.pod.namespace&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k8s-app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-dns&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;53&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;UDP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchPattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*.domain.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toFQDNs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchPattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*.domain.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;443&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述策略示例授予 pod 或容器通过 kube-dns 执行 DNS 请求的权限，但将允许的 DNS 查找限制为 &lt;code&gt;*.domain.com&lt;/code&gt; 。与模式不匹配的请求将收到 &lt;code&gt;request refused&lt;/code&gt; DNS 响应。它进一步授予端口 443/TCP 上的 pod 出口访问权限到 DNS 响应中返回的 IP。任何尝试访问先前未在 DNS 响应中返回的任何 IP 地址的请求都将被拒绝。&lt;/p&gt;
&lt;p&gt;要开始使用基于 DNS 的策略，请遵循 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/dns/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基于 DNS 的入门指南&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;透明加密和身份验证测试版&#34;&gt;透明加密和身份验证（测试版）&lt;/h2&gt;
&lt;p&gt;为集群内和集群之间的所有服务到服务通信提供透明加密是一种经常被要求的功能。加密允许在不受信任的网络中运行 Kubernetes，透明地加密集群中服务之间的所有通信。身份验证可确保只有受信任的工作节点才能参与集群。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-加密&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;加密&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_1aac3022826d3e5883fe2a32fb7e2f3d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_fe53d4de641de3ed55f905108b103494.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_1aac3022826d3e5883fe2a32fb7e2f3d.webp&#34;
               width=&#34;760&#34;
               height=&#34;318&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      加密
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;加密基于 X.509 证书和密钥。目前，使用 PSK，使用 Kubernetes Secret 分发给所有节点。但是，基础结构与 SPIFFE 兼容，并允许在将来的版本中在每个服务级别上使用 SPIFFE 证书提供服务身份验证。数据路径实现使用 Linux 内核的 IPSec 实现，它避免了作为所有服务的一部分运行 sidecar 代理的需要，并确保通过现代处理器中的专用 CPU 指令集有效和自动地使用硬件辅助加密加速。&lt;/p&gt;
&lt;p&gt;透明加密是一种 beta 级功能。要启用该功能，请将 &lt;code&gt;--enable-ipsec&lt;/code&gt; 选项传递给代理，并通过 &lt;code&gt;--ipsec-key-file&lt;/code&gt; 选项或使用 Kubernetes Secret 提供预共享密钥（PSK） 。&lt;/p&gt;
&lt;h2 id=&#34;基于-sockmap-bpf-的-sidecar-加速alpha&#34;&gt;基于 Sockmap BPF 的 sidecar 加速（alpha）&lt;/h2&gt;
&lt;p&gt;正如&lt;a href=&#34;https://www.youtube.com/watch?v=ER9eIXL2_14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在 KubeCon 上宣布的那样&lt;/a&gt; ，我们正在使用 Cilium 1.4 进行本地进程通信加速。&lt;/p&gt;
&lt;p&gt;Sockmap 加速本地进程通信主要用于 sidecar 代理和本地进程之间的通信，但适用于所有本地进程。 















&lt;figure  id=&#34;figure-sockmap-加速了延迟&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;SockMap 加速了延迟&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_5cec80b47c097fe1f896ac4b3337bc5f.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp&#34;
               width=&#34;760&#34;
               height=&#34;454&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      SockMap 加速了延迟
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;启用 sockmap 时，请求数/s 和最大吞吐量都加倍： 















&lt;figure  id=&#34;figure-sockmap-加速了请求处理&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;SockMap 加速了请求处​​理&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_4e9397559eadb93e404c13b1d042aeaf.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_5042f4d7f1b7e702c5118f951cdb3c66.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_4e9397559eadb93e404c13b1d042aeaf.webp&#34;
               width=&#34;760&#34;
               height=&#34;451&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      SockMap 加速了请求处​​理
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-sockmap-加速了吞吐量&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;SockMap 加速了吞吐量&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_6121247749ab4f339c12f77f17b494f9.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp&#34;
               width=&#34;579&#34;
               height=&#34;343&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      SockMap 加速了吞吐量
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;请注意，所有这些性能数字均为每个 CPU 核心。&lt;/p&gt;
&lt;p&gt;Sockmap 加速是 1.4 中的 alpha 级别功能。可以使用该 &lt;code&gt;--sockops-enable&lt;/code&gt; 选项启用它。&lt;/p&gt;
&lt;h2 id=&#34;新-grafana-仪表板&#34;&gt;新 Grafana 仪表板&lt;/h2&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-grafana&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Grafana&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_27095b32a2ad527a94c5db8d445c0817.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_cdf4e6ff1ef22fe4157dcf87489900d7.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_27095b32a2ad527a94c5db8d445c0817.webp&#34;
               width=&#34;760&#34;
               height=&#34;173&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Grafana
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;添加了几个新的 Prometheus 指标，并且可以使用单个命令将新的 Grafana 仪表板部署到任何 Kubernetes 集群中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v1.4/examples/kubernetes/addons/prometheus/monitoring-example.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  id=&#34;figure-grafana&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Grafana&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_81523ae34279bf42cf96802df9acf992.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_ce0dbaa6db5f231c28e1bd439b71f1db.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_81523ae34279bf42cf96802df9acf992.webp&#34;
               width=&#34;760&#34;
               height=&#34;307&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Grafana
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;flannel-整合测试版&#34;&gt;Flannel 整合（测试版）&lt;/h2&gt;
&lt;p&gt;与使用 Flannel CNI 插件配置的现有集群的 Cilium 的安全策略实施和负载平衡功能的用户经常要求与 Flannel 集成。&lt;/p&gt;
&lt;p&gt;Cilium 1.4 引入了一个新的配置选项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;flannel-master-device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cni0&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这使得 Cilium 可以使用 CNI 链接在 flannel 上运行。通过启用以下选项，还可以自动获取工作节点上的现有容器/容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;flannel-manage-existing-containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该选项还需要编辑 Cilium DaemonSet 以启用该 &lt;code&gt;hostPID: true&lt;/code&gt; 选项，以便 Cilium 可以查看附加到现有容器的所有进程。&lt;/p&gt;
&lt;p&gt;Flannel 集成主要用于在现有集群中尝试 Cilium 功能或用于迁移目的。有些大规模有用的功能将无法运行，这包括将源的安全身份嵌入网络数据包的能力，这需要回退到基于 IP 的识别。&lt;/p&gt;
&lt;p&gt;有关详细信息，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/flannel-integration/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flannel 入门指南&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;与其他-cni-的基准测试&#34;&gt;与其他 CNI 的基准测试&lt;/h2&gt;
&lt;p&gt;在过去的两个月里，我们已经接触过很多 Cilium 与其他 CNI 插件的比较。因此，我们针对其他流行的 CNI 插件运行了几个基准测试。&lt;/p&gt;
&lt;p&gt;在我们进入实际数字之前的两个单词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基准测试很难。我们并未声称我们可以在理想配置中配置其他 CNI 插件。如果您有意见，请联系我们，我们很乐意进行调整。这些基准测试的目标是表明，通过改变架构和在堆栈中使用不同的技术，而不是仅仅将一个 CNI 与另一个 CNI 进行比较，可以产生最大的影响。即使是 Cilium，其性能也会因配置而异。&lt;/li&gt;
&lt;li&gt;我们专注于测量网络开销，因此我们在两个本地容器之间运行基准测试，以尽可能多地消除硬件限制。&lt;/li&gt;
&lt;li&gt;目标不是达到最大或最低的数量。我们使用单个 CPU 核心进行测量，限制 CPU 的数量。系统的 CPU 越多那么上限可能会更高。而我们关注在单核下数字之间的差异，而不是测试结果数的最大值。&lt;/li&gt;
&lt;li&gt;通常采取几个重点来做基准。基准测试总是在特定的环境中完成。理解上下文很重要。如果您不清楚我们在这里发布的数字，请联系我们，我们会澄清它。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说了那么多，接下来让我们深入研究数字：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cni-延迟&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CNI 延迟&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_153dbbae5ba90c73ebe2f4ff46da17b6.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_d4547099fa258f8bf367f1fcd5ce910f.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_153dbbae5ba90c73ebe2f4ff46da17b6.webp&#34;
               width=&#34;575&#34;
               height=&#34;353&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CNI 延迟
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;以上数字显示了两个容器在单个连接上交换尽可能多的 1 字节请求和响应消息时的各种延迟测量。此测试主要显示特定转发路径是否非常有利于吞吐量而非延迟。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cilium Sockmap 正在大力利用其能够在套接字级别上运行的优势。这仅适用于节点内的连接。&lt;/li&gt;
&lt;li&gt;下一个最佳类别是在 IPVLAN 模式下运行的 Cilium，netfilter/iptables 已完全删除。Cilium 是否在加载安全策略规则时运行是有区别的，但这种差异很小。这是因为用于策略实施的高效的每 CPU 哈希表可以最大限度地减少开销。请注意，此数字已包含负载平衡 BPF 映射查找，因此此模式允许替换其他测试未考虑的 kube-proxy。&lt;/li&gt;
&lt;li&gt;接下来是 Flannel 和 Cilium 以 veth 模式运行。Flannel 是一个使用 Linux 路由表的最小网络插件。极简主义得到了回报，但这也意味着 flannel 不能执行任何策略执行，并且必须依赖于 iptables 或 IPVS 模式的 kube-proxy。由于执行了一些工作以在连接过程中启用策略实施，即使之前未加载任何策略规则，Cilium 也会略微恶化。&lt;/li&gt;
&lt;li&gt;Calico 在我们的测试中显示出略微增加的开销。可能由于添加了更多的 iptables 规则并且正在使用更多的 netfilter 链。我们没有为此特定测试加载任何策略规则到 Calico 但是假设使用 ipset 将允许缩放 OK。不如每个 CPU 哈希表好。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些基准测试的典型敌人是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上下文在内核和用户空间之间切换。这些数字会由于 &lt;strong&gt;很多&lt;/strong&gt; 当L4/L7代理会现实的更糟。&lt;/li&gt;
&lt;li&gt;任何每个数据包开销都会产生巨大影响。冷缓存和数据结构也会产生负面影响。必须遍历的代码越少越好。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cni-rr&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CNI RR&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_5cec80b47c097fe1f896ac4b3337bc5f.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp&#34;
               width=&#34;760&#34;
               height=&#34;454&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CNI RR
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;上图显示了执行相同基准测试的每秒请求数。每秒请求与延迟相当重叠。对于之前的测试，这些数字是按 CPU 核心测量的。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cni-stream&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CNI Stream&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_1357166b6d837c917cde0689319cf2c2.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_b4c0415214fa37828f4994be0c467cae.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_1357166b6d837c917cde0689319cf2c2.webp&#34;
               width=&#34;760&#34;
               height=&#34;439&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CNI Stream
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最后一张图说明了频谱的相反情况。TCP_STREAM 测试试图通过单个 TCP 连接抽取尽可能多的字节。这是内存带宽可以发挥作用的地方，网络硬件或云供应商限制通常可以人为地限制基准。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抛开 Sockmap 的数据，我们可以看到 IPVLAN 模式比其他所有模式都有明显的优势。&lt;/li&gt;
&lt;li&gt;我们预计 Calico 与 Cilium 的数字相似，所以我们可能会错误地配置一些东西。任何帮助表示赞赏。Calico 在 TCP_STREAM 中表现更差并没有多大意义，因为此测试中的 iptables 开销在大量数据中分摊。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-带有-sockmap-的-cni-stream&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;带有 SockMap 的 CNI Stream&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_6121247749ab4f339c12f77f17b494f9.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp&#34;
               width=&#34;579&#34;
               height=&#34;343&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      带有 SockMap 的 CNI Stream
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;将 Sockmap 添加回图片证明了在套接字级别进行网络连接的性能优势。同样，这种好处仅在本地进程之间获得，因为当 sidecar 代理生效时或者当服务被调度到同一节点上以便改进本地通信时，它经常发生。&lt;/p&gt;
&lt;h2 id=&#34;用-cos-支持-gke&#34;&gt;用 COS 支持 GKE&lt;/h2&gt;
&lt;p&gt;一个全新的 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/k8s-install-gke/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;指南&lt;/a&gt; 记录了如何使用 COS 在 GKE 上运行 Cilium。一个全新的 &lt;a href=&#34;https://github.com/cilium/cilium/tree/master/examples/kubernetes/node-init&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;node-init DaemonSet&lt;/a&gt; 可以通过安装 BPF 文件系统并重新配置 kubelet 以在 CNI 模式下运行来准备 GKE 节点。使用 &lt;a href=&#34;https://github.com/cilium/cilium-etcd-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cilium-etcd-operator&lt;/a&gt; 提供 kvstore 要求，同时保持安装简单。&lt;/p&gt;
&lt;h2 id=&#34;14-发布亮点&#34;&gt;1.4 发布亮点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多集群&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;增加全球服务，通过注释实现跨多个 Kubernetes 服务的 Kubernetes 服务。 （测试版）&lt;/li&gt;
&lt;li&gt;许多改进的安装指南，包括在使用 &lt;a href=&#34;https://github.com/cilium/cilium-etcd-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cilium-etcd-operator&lt;/a&gt; 时自动提取 SSL 证书的工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;透明加密（测试版）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;使用带有PSK的IPsec将所有pod/host加密到pod/host通信。&lt;/li&gt;
&lt;li&gt;IPv4 和 IPv6&lt;/li&gt;
&lt;li&gt;PSK 通过 Kubernetes Secret 配置&lt;/li&gt;
&lt;li&gt;无需修改 app 或 pod。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IPVLAN 支持（测试版）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;利用 IPVLAN 的新的替代数据路径模式取代了 veth 对的使用，以改善延迟和性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS请求/响应授权&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;现在，基于每个服务执行的实际 DNS 请求和响应，强制执行基于 FQDN 的安全策略。&lt;/li&gt;
&lt;li&gt;能够指定服务可以执行的 DNS 请求的策略。&lt;/li&gt;
&lt;li&gt;用于查询各个端点执行的 FQDN 主机名查找的 API 和 CLI&lt;/li&gt;
&lt;li&gt;能够在代理还原上恢复 FQDN 映射以进行持久映射&lt;/li&gt;
&lt;li&gt;每个端点可配置的最小 TTL 和最大 FQDN 主机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flannel 整合（测试版）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;能够在 flannel 上运行 Cilium。Flannel 提供网络，Cilium 提供负载平衡和策略实施。&lt;/li&gt;
&lt;li&gt;能够挂钩现有的 Flannel 部署而无需重新启动任何 pod。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于 AWS 元数据的策略实施（alpha）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;能够根据 AWS 元数据指定策略规则，例如 EC2 标签，安全组名称，VPC 名称，子网名称等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他指标和监控&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;联网&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;通过 kvstore 实现新的简单 PodCIDR 路由传播模式。通过 --auto-direct-node-routes`启用。&lt;/li&gt;
&lt;li&gt;现在，对于新安装，IPv6 现在已禁用。现有的 ConfigMaps 将继续当前行为。启用通过 &lt;code&gt;--enable-ipv6=true&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;能够在不使用该 &lt;code&gt;--enable-ipv4=false&lt;/code&gt; 选项 分配任何 IPv4 地址的情况下运行仅 IPv6 集群。&lt;/li&gt;
&lt;li&gt;改进了负载均衡器的持久行为&lt;/li&gt;
&lt;li&gt;BPF sockmap 支持加速本地进程通信。可通过选项 &lt;code&gt;--sockops-enable&lt;/code&gt; （alpha）获得&lt;/li&gt;
&lt;li&gt;从 IP 地址识别的解耦端点，以支持任意 IP 寻址模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率和规模&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;大大提高了 CiliumEndpoint CRD 的可扩展性。不再需要为大型部署禁用 CEP。&lt;/li&gt;
&lt;li&gt;引入基于CIDR/DNS的规则的每节点本地标识，不需要集群或全局范围。在节点 23 上执行 DNS 请求的 pod 导致该 pod 的白名单 IP 不再对集群中的其他节点产生任何影响。&lt;/li&gt;
&lt;li&gt;现在，默认情况下禁用 IPv6 以减少小型部署中的内存占用。&lt;/li&gt;
&lt;li&gt;现在，默认情况下禁用 BPF 映射预分配，以减少小型部署中的内存占用。&lt;/li&gt;
&lt;li&gt;用于代理和客户端命令的单个二进制文件以减少容器图像大&lt;/li&gt;
&lt;li&gt;将 bugtool 编译为静态二进制文件&lt;/li&gt;
&lt;li&gt;新的 cilium-operator 提供单例任务，如 CEP 垃圾收集。&lt;/li&gt;
&lt;li&gt;CNI ADD 上的同步 pod 标签检索。这可以稍微降低 pod 调度速率，但避免在没有 init 策略的情况下启动 pod 的策略丢失。&lt;/li&gt;
&lt;li&gt;状态探测器现在同时收集状态以提高准确性。&lt;/li&gt;
&lt;li&gt;终止时更好的信号处理和新的 terminationGracePeriodSeconds 默认值为 1 秒，以最大限度地减少代理的停机时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;增加了对 Kubernetes 1.13 的支持&lt;/li&gt;
&lt;li&gt;支持自动挂载 BPF 文件系统的新 CRI-O 版本&lt;/li&gt;
&lt;li&gt;新的 NodeInit DaemonSet 为 Cilium 安装自动准备 GKE 节点。这样可以使用 COS 和自动缩放。&lt;/li&gt;
&lt;li&gt;当 cilium 不管理 kube-dns 时，cilium-operator 现在会自动重启 kube-dns。这简化了托管 Kubernetes 产品的初始安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Istio&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;改进了 Istio 集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;观测&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;新指标：kvstore 操作，代理上游/处理延迟，转发和丢弃字节，节点事件，节点数，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;标准安装现在使用 &lt;a href=&#34;https://github.com/cilium/cilium-etcd-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cilium-etcd-operator&lt;/a&gt; ，不再依赖于提供外部 kvstore 的用户。&lt;/li&gt;
&lt;li&gt;新的 GKE 指南，包括 COS 支持&lt;/li&gt;
&lt;li&gt;使用 eksctl 的简化 EKS 指南&lt;/li&gt;
&lt;li&gt;使用自动化工具改进了集群网格指南&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;升级说明&#34;&gt;升级说明&lt;/h2&gt;
&lt;p&gt;像往常一样，请按照&lt;a href=&#34;https://cilium.readthedocs.io/en/v1.4/install/upgrade/#upgrading-minor-versions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;升级指南&lt;/a&gt; 升级您的 Cilium 部署。随意在 &lt;a href=&#34;https://cilium.herokuapp.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack&lt;/a&gt; 上 ping 我们。&lt;/p&gt;
&lt;h2 id=&#34;发布&#34;&gt;发布&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;发行说明和二进制文件： &lt;a href=&#34;https://github.com/cilium/cilium/releases/tag/1.4.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1.4.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;容器 image： &lt;code&gt;docker.io/cilium/cilium:v1.4.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
