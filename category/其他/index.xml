<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>其他 | 云原生社区（中国）</title>
    <link>https://cloudnative.to/category/%E5%85%B6%E4%BB%96/</link>
      <atom:link href="https://cloudnative.to/category/%E5%85%B6%E4%BB%96/index.xml" rel="self" type="application/rss+xml" />
    <description>其他</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Tue, 29 Oct 2024 17:43:25 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/media/sharing.png</url>
      <title>其他</title>
      <link>https://cloudnative.to/category/%E5%85%B6%E4%BB%96/</link>
    </image>
    
    <item>
      <title>API 网关的自查清单：你的 API 前门有多坚固？</title>
      <link>https://cloudnative.to/blog/api-gateway-checklist-strength/</link>
      <pubDate>Tue, 29 Oct 2024 17:43:25 +0800</pubDate>
      <guid>https://cloudnative.to/blog/api-gateway-checklist-strength/</guid>
      <description>&lt;p&gt;每个 API 都需要一个前门，一个迎接请求与响应的门户。这个“门”不仅要坚固，能承受高流量的压力，最好还能过滤掉“蚊虫”——也就是潜在的威胁行为者和 DDoS 攻击。同时，一些额外的功能可以让整个体验更加愉快。&lt;/p&gt;
&lt;p&gt;API 网关便是你 API 的前门，它不仅仅负责流量的调度，还包括执行安全策略、优化性能等任务。然而，涉及大规模基础设施的决策总是难以把握，特别是当你已经开始构建新的 API，可能很难判断是否在正确的轨道上前行。&lt;/p&gt;
&lt;p&gt;受云原生计算基金会（CNCF）的 &lt;a href=&#34;https://maturitymodel.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生成熟度模型&lt;/a&gt; 启发，我试图帮助你从全局视角出发，客观评估 API 前门的当前状态，并了解接下来的优化方向。&lt;/p&gt;
&lt;h4 id=&#34;基础阶段打好地基&#34;&gt;基础阶段：打好地基&lt;/h4&gt;
&lt;p&gt;在这个阶段，你正处于 API 网关的 MVP 或预生产阶段，验证工具并分配各项责任，以便正式上线。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;决定 API 网关基础架构的基本形态（如云托管或本地部署），选择独立代理或通过 SDK 嵌入 API 网关功能，或者利用 Kubernetes 原生特性如 Gateway API。&lt;/li&gt;
&lt;li&gt;实施安全基本策略，从基本认证开始，逐步升级到 JSON Web Tokens（JWT）。&lt;/li&gt;
&lt;li&gt;设定速率限制和 IP 限制以防滥用。&lt;/li&gt;
&lt;li&gt;实施负载均衡，探索 DDoS 保护选项。&lt;/li&gt;
&lt;li&gt;利用 API 网关的功能来根据流量条件执行特定操作。&lt;/li&gt;
&lt;li&gt;制定 API 管理的基础政策，即便当前还未具备技术条件或专业人员来执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在构建过程中，请随时记录每项决策和实施如何影响开发周期。API 开发人员是否仍然能自由地构建？DevOps、基础设施和平台工程师是否拥有适当的工具来管理此平台？&lt;/p&gt;
&lt;p&gt;完成这些步骤后，你将拥有一个具备基本功能的 API 网关，能够顺利代理请求并具备初步的安全保护。&lt;/p&gt;
&lt;h4 id=&#34;运行阶段投入生产&#34;&gt;运行阶段：投入生产&lt;/h4&gt;
&lt;p&gt;当你的 MVP 完成测试，移至生产环境时，重点是集成、效率和为实时环境的挑战做好准备。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 API 网关的配置和部署集成至 CI/CD 流程，进行安全和治理规则的集成测试。&lt;/li&gt;
&lt;li&gt;以代码形式管理所有 API 相关配置，以便进行版本控制、代码审查和质量保证。&lt;/li&gt;
&lt;li&gt;开始在多区域、多云和私有云环境中测试 API 网关，为未来扩展做准备。&lt;/li&gt;
&lt;li&gt;将 API 网关的安全、测试和操作任务提前至开发周期中，让 API 开发人员有更多控制权。&lt;/li&gt;
&lt;li&gt;为 API 的部署和操作编写详细的文档。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论你处于此阶段的哪一步，都将受益于 API 网关对生产负载的自动化管理，并可利用早期的观测数据微调行为。如果效果不尽如人意，可能需要重新评估。&lt;/p&gt;
&lt;h4 id=&#34;扩展阶段准备增长&#34;&gt;扩展阶段：准备增长&lt;/h4&gt;
&lt;p&gt;此时，API 网关不再只是一个入口，而是你管理服务、区域、用户和高负载的核心工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用多区域和多云部署的经验提升性能和冗余性。&lt;/li&gt;
&lt;li&gt;为 API 网关和 API 服务构建或采用自动化故障切换机制。&lt;/li&gt;
&lt;li&gt;收集更多可观测数据，以便将流量、错误、请求和响应的趋势转化为可执行的数据。&lt;/li&gt;
&lt;li&gt;基于实际使用情况制定和实施高级流量策略，如精细的速率限制或细粒度访问控制。&lt;/li&gt;
&lt;li&gt;实施版本和弃用流程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下一个阶段？API 网关将不仅仅是一个工具，而是你团队快速、敏捷部署的核心支柱。&lt;/p&gt;
&lt;h4 id=&#34;改善阶段强化安全与治理&#34;&gt;改善阶段：强化安全与治理&lt;/h4&gt;
&lt;p&gt;这个阶段的重点在于精炼。你的 API 网关足够灵活和可扩展，但要保持持续发展，还需在不影响开发人员效率的情况下增加控制措施。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用允许 DevOps 和基础设施工程师集中管理安全的工具和工作流，同时让开发人员可以高效工作。Kubernetes Gateway API 是一个不错的例子，它基于角色进行配置。&lt;/li&gt;
&lt;li&gt;分析并优化 API 基础设施的整体成本。&lt;/li&gt;
&lt;li&gt;实现实时监控，以便向 API 的主要用户提供服务水平协议（SLA）。&lt;/li&gt;
&lt;li&gt;为开发人员提供自助开发环境，以测试 API 或网关的复杂场景或重大变更。&lt;/li&gt;
&lt;li&gt;精简 API 网关的工具和供应商。&lt;/li&gt;
&lt;li&gt;考虑使用 GitOps 等持续部署方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你几乎已经达成目标，但仍需不断努力。&lt;/p&gt;
&lt;h4 id=&#34;适应阶段回顾重建与再创新&#34;&gt;适应阶段：回顾、重建与再创新&lt;/h4&gt;
&lt;p&gt;此时，你不仅要应对 API 网关的现状，还要前瞻性地调整策略，保持领先地位。基于丰富的观测数据不断改进，同时还有更多工作要做。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 API 网关测试套件实现质量控制，以减少缺陷和事故。&lt;/li&gt;
&lt;li&gt;将所有 API 发布和 API 网关配置更改迁移至 GitOps 工作流。&lt;/li&gt;
&lt;li&gt;启用蓝绿部署或金丝雀发布等高级部署技术。&lt;/li&gt;
&lt;li&gt;提供工具和培训，让 API 开发人员从开发的早期阶段便能实现和测试高级安全功能。&lt;/li&gt;
&lt;li&gt;创建自助环境，使开发人员能够在既定的安全范围内配置和管理 API 网关。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你已完成清单中的所有事项，恭喜你！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何通过修复 CNCF 项目治理问题实现社区共赢与商业化</title>
      <link>https://cloudnative.to/blog/how-to-fix-cncf-governance-and-create-business/</link>
      <pubDate>Wed, 23 Oct 2024 18:05:24 +0800</pubDate>
      <guid>https://cloudnative.to/blog/how-to-fix-cncf-governance-and-create-business/</guid>
      <description>&lt;p&gt;为什么我们的 OpenEBS 项目被归档了？我们是如何修复它的？以及通过修复它，我们如何创建了一个可持续的商业模式。&lt;/p&gt;
&lt;p&gt;当云原生计算基金会（CNCF）在 2024 年 2 月&lt;a href=&#34;https://thenewstack.io/openebs-lessons-we-learned-from-open-source/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;归档了我们的 OpenEBS 项目&lt;/a&gt;时，我们面临两个选择：放弃项目，或者解决发现的问题并重新申请进入 CNCF 的 Sandbox 项目，重新开始。重新开始是最困难的选择，但对于每月有 25,000 名用户加入的 &lt;a href=&#34;https://thenewstack.io/how-openebs-brings-container-attached-storage-to-kubernetes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenEBS&lt;/a&gt; 来说，这是正确的做法。&lt;/p&gt;
&lt;p&gt;以下是 CNCF 归档我们项目的主要原因，我们是如何修复问题的，以及通过修复问题，我们是如何实现盈利的。&lt;/p&gt;
&lt;h2 id=&#34;所有权和控制问题&#34;&gt;所有权和控制问题&lt;/h2&gt;
&lt;p&gt;问题的核心是一个常见的治理问题。大约 60% 的 CNCF 项目都有一个企业赞助方——一个为项目提供资金的盈利公司。当公司将项目捐赠给 CNCF 时，项目就成为 CNCF 的财产，赞助公司放弃了对项目的所有权和控制权。&lt;/p&gt;
&lt;p&gt;但在项目尚未建立社区之前，赞助公司的员工通常仍在为该项目工作。许多 CEO 认为他们仍然拥有项目的所有权和控制权。“如果我的员工还在工作，那我就拥有决策权。”这种所有权和控制权的紧张关系导致了我们项目被归档，除非我们解决这个问题，否则问题将继续存在。&lt;/p&gt;
&lt;h2 id=&#34;通过赞助-cncf-项目盈利&#34;&gt;通过赞助 CNCF 项目盈利&lt;/h2&gt;
&lt;p&gt;我们向 CNCF 询问了如何解决这个问题。一个有用的 CNCF 资源是技术顾问组（TAG）贡献者策略治理工作组。联合主席 &lt;a href=&#34;https://github.com/jberkus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Josh Berkus&lt;/a&gt; 如此解释这个更广泛的问题和解决方案：“&lt;a href=&#34;https://thenewstack.io/20-years-in-open-source-resilience-failure-success/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源&lt;/a&gt;的前提是你可以获得大规模的用户采用，然后从这些采用者中的一小部分获取收入，这样的收入甚至可能与销售专有软件相当甚至更多。”&lt;/p&gt;
&lt;p&gt;当软件复杂且难以支持时（比如许多 Kubernetes 安装），这种方法效果特别好。&lt;/p&gt;
&lt;p&gt;对于 &lt;a href=&#34;https://thenewstack.io/kubernetes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt; 来说，一种成功的商业化策略通常来自以下三种途径：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提供支持和专业服务&lt;/li&gt;
&lt;li&gt;提供带有行业认证或平台集成的专用发行版&lt;/li&gt;
&lt;li&gt;提供适用于大规模生产环境的附加产品（例如管理工具或报告工具）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对 Kubernetes 来说，“开放核心”模式不太常见，因为你必须不断决定哪些功能应该开放源码，哪些功能应该保留为专有版本，这重新引入了所有权和控制权的问题。&lt;/p&gt;
&lt;p&gt;假设大多数采用者不会为软件付费。如果他们必须付费，他们可能不会使用。这些采用者的生态系统有助于增强软件的稳定性，并为大规模采用带来的可信度提供支持。&lt;/p&gt;
&lt;p&gt;对于企业和大型组织来说，支付支持费用或使用专用发行版通常是一个有吸引力的选择，因为这可以缩短上市时间，降低风险，而这只是他们整个项目成本中的一小部分。&lt;/p&gt;
&lt;p&gt;这些策略被证明是有效的，对于我们来说，也提供了一个简单的解决方案，证明了继续赞助项目而不控制它是有利可图的。&lt;/p&gt;
&lt;h2 id=&#34;将所有权和控制权交给社区&#34;&gt;将所有权和控制权交给社区&lt;/h2&gt;
&lt;p&gt;为赞助公司找到一种不需要控制项目的盈利方法解决了一半的问题。但在赞助公司继续负责大部分维护人员和工程团队的情况下，所有权和控制权的紧张关系仍将继续存在。&lt;/p&gt;
&lt;p&gt;这时，Kubernetes 社区发挥了至关重要的作用。通过从项目的采用者用户群中招募维护人员和工程师，项目获得了额外的资源，赞助公司能够显著减少支持项目的成本（同时可以将部分工程师转移到其他附加产品上）。&lt;/p&gt;
&lt;p&gt;培养和维持一个社区需要付出努力；仅仅因为项目广泛采用并不意味着你会自动拥有一个社区。我们的团队必须努力做到包容和透明。我们需要花时间引导贡献者。我们还必须参与更广泛的 Kubernetes 社区，帮助其他人成功开发自己的项目。我们才刚刚开始，但已经看到了成效。&lt;/p&gt;
&lt;h2 id=&#34;结果&#34;&gt;结果&lt;/h2&gt;
&lt;p&gt;对于我们的项目，我们调整了商业化策略，现在我们有了支付支持和专业服务的客户。我们正在开始招募维护人员和工程师，并且发现有一个巨大的人才库可以帮助我们。&lt;/p&gt;
&lt;p&gt;赞助公司可以减少成本，同时看到项目的工程能力增加。通过放弃控制权和所有权，我们得到了很多回报。当我们完成时，这将真正成为一个社区的共同努力。&lt;/p&gt;
&lt;p&gt;Kubernetes 的创立基于这些原则——未来的基础设施不应该被任何人拥有或控制。我们将共同分享这个所有权和控制权。&lt;/p&gt;
&lt;p&gt;有时，这个过程可能会尴尬或痛苦。有时，你的项目会被归档，你必须重新开始工作。自由软件不是免费的——我们必须共同努力开发软件，建立围绕它的社区，保护它，有时我们甚至需要保护它不受我们自己的影响。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KubeCon Chicago 主要收获：人工智能（AI）的缓慢崛起，平台工程的主导地位，以及 KubeCon NA 2023 对开发者体验的重新关注</title>
      <link>https://cloudnative.to/blog/kubecon-chicago-key-takeaways/</link>
      <pubDate>Mon, 13 Nov 2023 07:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/kubecon-chicago-key-takeaways/</guid>
      <description>&lt;p&gt;本文译自：&lt;a href=&#34;https://danielbryantuk.medium.com/kubecon-chicago-key-takeaways-3de5ca13b375&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://danielbryantuk.medium.com/kubecon-chicago-key-takeaways-3de5ca13b375&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：本文讨论了 KubeCon 的主要议题，包括平台工程、Kubernetes 的不断发展、开发者体验的重要性、对应用开发和集成的关注、云原生通信的捆绑问题、安全问题的重要性、对可持续性的关注，以及社区的力量。文章强调了在标准化和创新之间取得平衡的重要性，并预测云原生的未来将看到更多的 AI/LLMs。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这次 KubeCon NA 对我来说是一次非常不同的体验，因为我不是代表公司或办展位。然而，我仍然度过了一段愉快的时光，与云原生社区的许多人见面真是太棒了。回到芝加哥也很不错，这座城市对我们很好 —— 我几乎忘记了我有多喜欢芝加哥式深盘披萨！&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-chicago-key-takeaways/f1_hu15793923935074189549.webp 400w,
               /blog/kubecon-chicago-key-takeaways/f1_hu5461011958668877251.webp 760w,
               /blog/kubecon-chicago-key-takeaways/f1_hu15053650256081335132.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/kubecon-chicago-key-takeaways/f1_hu15793923935074189549.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;以下是我从 KubeCon NA 2023 中得出的主要收获：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;云原生社区正在缓慢接受AI/LLM&lt;/li&gt;
&lt;li&gt;DevOps 已经过时：平台工程万物&lt;/li&gt;
&lt;li&gt;山中有金！在平台激战中销售镐和铲子&lt;/li&gt;
&lt;li&gt;Kubernetes 应该保持不完整（并不断发展）&lt;/li&gt;
&lt;li&gt;别忘了开发者体验！&lt;/li&gt;
&lt;li&gt;增加对应用程序开发和集成的关注&lt;/li&gt;
&lt;li&gt;云原生通信：打包获胜？&lt;/li&gt;
&lt;li&gt;安全是大生意&lt;/li&gt;
&lt;li&gt;更加关注可持续性：可观察性、扩展性和 FinOps&lt;/li&gt;
&lt;li&gt;社区，社区，社区&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;背景设定迎来了后期采用者&#34;&gt;背景设定：迎来了后期采用者&lt;/h2&gt;
&lt;p&gt;我从参加 KubeCon 芝加哥得到的总体感觉是，我们已经完全进入了&lt;a href=&#34;https://en.wikipedia.org/wiki/Diffusion_of_innovations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;创新扩散&lt;/a&gt;的后期采用者阶段。&lt;/p&gt;
&lt;p&gt;当然，像 KubeCon 这样的会议存在一个危险，即陷入（云原生）泡沫，走出会议时很容易认为整个世界都在运行 Kubernetes。这并不是真的，而且“&lt;a href=&#34;https://www.gartner.com/en/newsroom/press-releases/2023-10-30-gartner-says-50-percent-of-critical-enterprise-applications-will-reside-outside-of-centralized-public-cloud-locations-through-2027&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gartner 表示到 2027 年，50% 的关键企业应用将存储在集中的公共云位置之外&lt;/a&gt;”。然而，如果你睁大眼睛看，几乎 50% 的工作负载正在云中运行（或将要运行），这标志着后期采用者的到来。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-chicago-key-takeaways/f2_hu6015243465580091418.webp 400w,
               /blog/kubecon-chicago-key-takeaways/f2_hu980327202724956832.webp 760w,
               /blog/kubecon-chicago-key-takeaways/f2_hu8949191298088342566.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/kubecon-chicago-key-takeaways/f2_hu6015243465580091418.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我从活动的主题演讲和厂商展厅中感受到了这种转变。更多的强调放在了可靠性和值得信赖性上，而不是创新，产品套件和易于集成而不是“最佳解决方案”，以及伙伴关系和合作而不是个别组织的开创性。&lt;/p&gt;
&lt;p&gt;有了这个背景，让我们更深入地了解这些主要收获！&lt;/p&gt;
&lt;h2 id=&#34;云原生社区正在缓慢接受aillm&#34;&gt;云原生社区正在缓慢接受AI/LLM&lt;/h2&gt;
&lt;p&gt;与同一天举行的 KubeCon NA 同期活动的 &lt;a href=&#34;https://devday.openai.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenAI DevDay&lt;/a&gt; 形成鲜明对比，KubeCon 上几乎没有关于人工智能的内容。如果你还没有观看 &lt;a href=&#34;https://www.youtube.com/watch?v=U9mJuUkhUzk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenAI DevDay 的主题演讲&lt;/a&gt;，我鼓励你看看。Ed Sim 在他的每周 &lt;a href=&#34;https://www.whatshotit.vc/p/whats-in-enterprise-itvc-367&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;企业IT/VC快讯&lt;/a&gt; 中也提供了一个很好的总结。&lt;/p&gt;
&lt;p&gt;当然，KubeCon 的第一天主题演讲以人工智能为主题，但这似乎有点“外挂”，更侧重于为 AI/LLM 提供基础设施，而不是在开发或运营工作流中使用。在这里我不想过于判断，因为像 KubeCon 这样的活动需要数月的策划，而 AI 的发展是以每天的速度发生的。&lt;/p&gt;
&lt;p&gt;一些厂商的展位专注于“云端的 ChatGPT”，但我与赞助商的大多数交谈都集中在构建平台的现有问题上。如果你对在平台空间中使用 AI 的潜力感兴趣，我建议你在最近的 &lt;a href=&#34;https://www.infoq.com/podcasts/cloud-devops-trends-2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;InfoQ 云和 DevOps 趋势报告播客&lt;/a&gt; 中与几位云原生和 DevOps 领导人，包括 Helen Beal、Abby Bangser、Matt Campbell 和 Steef-Jan Wiggers 一起聊一聊。&lt;/p&gt;
&lt;h2 id=&#34;devops-已经过时平台工程万物&#34;&gt;DevOps 已经过时：平台工程万物！&lt;/h2&gt;
&lt;p&gt;我相信我们都看过 Minions/Gru 平台工程和 DevOps 的表情包（如果没有，在我 &lt;a href=&#34;https://blog.getambassador.io/kubecon-eu-cloudnativecon-2023-summary-devex-debugging-and-doubling-down-on-community-82abee5853b3#acc6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KubeCon EU 2023 摘要&lt;/a&gt; 中提到过），而在 KubeCon 上每个人都在强调这一点。如果你搜索 &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/program/schedule/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;程序日程&lt;/a&gt;，你会发现至少有两倍于提到 DevOps 的演讲数量的演讲提到了平台工程，而几乎没有一个演讲是以 DevOps 为标题的。&lt;/p&gt;
&lt;p&gt;这是这个领域的自然演变，伴随着这种变化的好与坏。&lt;/p&gt;
&lt;p&gt;“好”的是，我们正在围绕这个主题形成一个社区，并在行业内形成最佳实践。我要向云原生计算基金会（CNCF）TAG App 交付团队致以崇高的赞扬，因为他们发布了他们的“&lt;a href=&#34;https://tag-app-delivery.cncf.io/whitepapers/platform-eng-maturity-model/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;平台工程成熟度模型&lt;/a&gt;”（以及向云原生猫的 Abby Bangser 致以特别的赞扬）&lt;/p&gt;
&lt;p&gt;在 KubeCon EU 2024 中还将举办 &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/co-located-events/platform-engineering-day/#call-for-proposals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;平台工程日同期活动&lt;/a&gt;。自从我整理了一堆关于社区中出现的平台工程思想，并在 KubeCon 2022 上呈现了“&lt;a href=&#34;https://www.youtube.com/watch?v=btUYeOa7JPI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;从 Kubernetes 到 PaaS 再到…嗯，下一步是什么？&lt;/a&gt;”的想法后，我们走了很长的路。&lt;/p&gt;
&lt;h2 id=&#34;山中有金在平台激战中销售镐和铲子&#34;&gt;山中有金！在平台激战中销售镐和铲子&lt;/h2&gt;
&lt;p&gt;每个人都采用平台工程的坏处是，许多供应商面临“平台洗牌”的危险。当然，许多现有的 CNCF 景观灵感来自的产品在官方成为一个事物之前就帮助人们构建了平台。但是我不确定我在 KubeCon 上看到的一切都被市场营销为与平台工程友好。这意味着最终用户在购买产品时必须更仔细地查看，以确保它们符合他们的需求。&lt;/p&gt;
&lt;p&gt;如果一个工具与现有的云原生堆栈集成不良，没有被构建来解决明确的用例（即“工作要完成的任务”），并且不能以自助服务的方式使用，那么它可能没有考虑到平台工程的概念。&lt;/p&gt;
&lt;p&gt;当然，在任何（平台工程）淘金热中，总是有机会卖镐和铲子。&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-应该保持不完整并不断发展&#34;&gt;Kubernetes 应该保持不完整（并不断发展）&lt;/h2&gt;
&lt;p&gt;我非常喜欢 Tim Hockins 在最后一天的主题演讲，““愿景的愿景 — Kubernetes 在其第二个十年的表现”，他在演讲中谈到了在短期内做出妥协以获得长期愿景的价值。&lt;/p&gt;
&lt;p&gt;社区本可以尝试解决所有云原生挑战，并将所有平台工具集成到 Kubernetes 中。然而，Tim 强调了这在 OpenStack 中已经尝试过了…并且结果存疑。&lt;/p&gt;
&lt;p&gt;这个概念在 Tim Bannister 的一条推文中得到了很好的总结，Tim 在大屏幕上分享了这条推文：“Kubernetes 应该保持不完整。”引用我最喜欢的漫画/电影系列之一，Kubernetes 也许是“&lt;a href=&#34;https://batmanfactor.com/not-the-hero-we-deserve-why-the-quote-is-significant/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gotham 需要的英雄，但现在此刻理应拥有的英雄&lt;/a&gt;”。&lt;/p&gt;
&lt;h2 id=&#34;别忘了开发者体验&#34;&gt;别忘了开发者体验！&lt;/h2&gt;
&lt;p&gt;很高兴在 KubeCon NA 的主题演讲中看到几次提到开发者体验和重要性。KubeCon 历来是一个基础设施和运维焦点的事件，但我们不能忘记我们的主要（平台）客户：开发者。&lt;/p&gt;
&lt;p&gt;如果你不知道你的用户是谁以及他们最大的痛点是什么，你无法成功地定位你的产品。开发者是一群聪明的人，喜欢解决自己的问题，而且往往你的产品将与使用胶带和包线但能够“足够好地”完成工作的现状解决方案正面对决。&lt;/p&gt;
&lt;h2 id=&#34;加大对应用开发和集成的关注&#34;&gt;加大对应用开发和集成的关注&lt;/h2&gt;
&lt;p&gt;长期以来，我一直对 &lt;a href=&#34;https://dapr.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dapr&lt;/a&gt; 社区的工作印象深刻，可以说他们在突显云原生社区内应用开发者需求方面处于领先地位。对于不熟悉 CNCF 项目的人来说，Dapr 提供了用于通信、状态和工作流的集成 API。对于一些拥有一些灰发的人来说，可以将其视为云时代企业中间件（做得很好）。&lt;/p&gt;
&lt;p&gt;即使在云原生空间迅速采用 AI/LLMs，我们仍然需要关注定义正确抽象的问题；否则，我们将能够生成大量难以理解的代码！&lt;/p&gt;
&lt;p&gt;在我看来，Dapr 提供了构建分布式应用所需的几个非常有用的抽象，如发布 - 订阅、状态管理、分布式锁等。&lt;/p&gt;
&lt;p&gt;我参加了几次 Dapr 的讲座并留下了深刻印象。如果我要构建一个全新的云原生应用（甚至是演变中的旧应用），我会首先考虑这个项目：&lt;/p&gt;
&lt;p&gt;开源社区非常强大，Diagrid 的团队提供了几个出色的商业解决方案，减少了管理后端基础设施的摩擦和运营负担。我与 &lt;a href=&#34;https://twitter.com/mfussell&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mark Fussell&lt;/a&gt; 和 &lt;a href=&#34;https://twitter.com/bibryam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bilgin Ibryam&lt;/a&gt; 进行了几次很好的交流，我鼓励你在 X 上关注他们。我的 InfoQ 朋友 Thomas Betts 还撰写了对最新的 Diagrid 商业发布的摘要：“&lt;a href=&#34;https://www.infoq.com/news/2023/11/diagrid-managed-dapr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diagrid 推出 Catalyst，一个无服务器、全托管的 Dapr 产品&lt;/a&gt;。”&lt;/p&gt;
&lt;h2 id=&#34;云原生通信捆绑是否王道&#34;&gt;云原生通信：捆绑是否王道？&lt;/h2&gt;
&lt;p&gt;正如 Netscape 的前首席执行官 Jim Barksdale 曾经著名地说过的，创造利润的方式只有两种：一种是捆绑，另一种是解绑。而在云原生生态系统中，我们看到了很多捆绑！&lt;/p&gt;
&lt;p&gt;这种观察在云原生通信栈领域尤为突出。&lt;/p&gt;
&lt;p&gt;我多次讨论过这一点，包括最近的演讲：“&lt;a href=&#34;https://speakerdeck.com/danielbryantuk/devopscon-the-busy-platform-engineers-guide-to-api-gateways&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;忙碌的平台工程师指南：API 网关&lt;/a&gt;” 。在这个栈中，大多数平台构建者将需要三个组件：API 网关（用于南北流量管理）、服务网格（用于东西流量）和容器本地接口或 CNI（用于所有底层软件定义网络）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-chicago-key-takeaways/f3_hu16257865955487212866.webp 400w,
               /blog/kubecon-chicago-key-takeaways/f3_hu14294495806128052888.webp 760w,
               /blog/kubecon-chicago-key-takeaways/f3_hu16637215615787688503.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/kubecon-chicago-key-takeaways/f3_hu16257865955487212866.webp&#34;
               width=&#34;760&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我会坦言我的偏见——曾在 Ambassador Labs 工作，制造 &lt;a href=&#34;https://www.getambassador.io/products/edge-stack/api-gateway&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Edge Stack&lt;/a&gt;，并且是 &lt;a href=&#34;https://linkerd.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linkerd&lt;/a&gt; 团队的大支持者——我喜欢选择“最佳解决方案”并进行集成。&lt;/p&gt;
&lt;p&gt;然而，商业趋势正在朝着捆绑方向发展。我看到该领域的各种供应商在其最新产品中上下移动，例如 Isovalent（Cilium CNI 的创建者）通过拥抱服务网格和 API 网关而向上移动。Solo 通过将 CNI（Cilium）纳入其 Istio 服务网格和 API 网关产品中而向下移动。Tetrate、Kong、Tyk、Traefik 等公司也在进行类似的尝试。&lt;/p&gt;
&lt;p&gt;如果你追踪（和关注）这个循环（和资金），明智的做法似乎是倾向于捆绑。&lt;/p&gt;
&lt;p&gt;我相信这种学习不仅适用于云原生通信领域。总的来说，企业正在寻求整合供应商，减少自己动手解决方案的总体拥有成本（TCO），并将云支出承诺转移到云市场内提供的端到端解决方案上。&lt;/p&gt;
&lt;p&gt;在相关的讨论中，由 &lt;a href=&#34;https://twitter.com/danielbryantuk/status/1722034551650648507&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Keith Mattix&lt;/a&gt; 主持的服务网格辩论小组是我在会议上最喜欢的会话之一。与通常的所有人都同意的形式不同，参与者没有保留，导致了一场有趣而富有信息的讨论！&lt;/p&gt;
&lt;h2 id=&#34;安全是大生意&#34;&gt;安全是大生意&lt;/h2&gt;
&lt;p&gt;我将最后的三个要点保持简短，但我想提到展厅里满是安全解决方案，从安全的供应链解决方案到网络入侵检测和权限管理。这个领域有很多兴趣（和资金）。&lt;/p&gt;
&lt;p&gt;演讲还很好地涵盖了这些主题，KubeCon 共同主席 &lt;a href=&#34;https://twitter.com/ffkiv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Frederick Kautz&lt;/a&gt; 和 CNCF 的成员们强调了安全（以及相关的 CNCF 项目）在主题演讲中的重要性。&lt;/p&gt;
&lt;h2 id=&#34;更加关注可持续性可观测性扩展性和-finops&#34;&gt;更加关注可持续性：可观测性、扩展性和 FinOps&lt;/h2&gt;
&lt;p&gt;关键演讲中突出的另一个话题是可持续性。有一个有趣的小组讨论：“&lt;a href=&#34;https://sched.co/1R4Tl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云中的环境可持续性并非神话&lt;/a&gt;” ，甚至 AWS 赞助的主题演讲也侧重于这一点。&lt;/p&gt;
&lt;p&gt;这是一个重要的话题，通过可观测性、自动扩展和 FinOps 来探讨理解和监控你的云（碳）足迹的基本驱动因素是很好的。&lt;/p&gt;
&lt;p&gt;对于对 FinOps 这个主题不熟悉的人，我从 Roi Ravhon 那里学到了很多，他在我最近与他录制的 InfoQ 播客中分享了一些内容：“&lt;a href=&#34;https://www.infoq.com/podcasts/finops-cloud-cost-optimization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Roi Ravhon 谈 FinOps、应用单元经济学和云成本优化&lt;/a&gt;。”&lt;/p&gt;
&lt;h2 id=&#34;社区社区社区&#34;&gt;社区，社区，社区&lt;/h2&gt;
&lt;p&gt;我不能写一篇 KubeCon 总结而不提到社区的力量。在主题演讲中看到了许多成功故事和奖项真是太棒了。&lt;/p&gt;
&lt;p&gt;我参加这些活动的主要原因之一就是与社区的成员见面和交流。走向云原生的道路并不总是容易，我喜欢与同行交流故事。今年我有点懒，照片没拍多少，但我的 devrel 朋友 Marino Wijay 和 Daniel Oh 帮我拍了一些。&lt;/p&gt;
&lt;p&gt;我还有机会与我想见的每个人交流（KubeCon 很忙！），所以如果你想安排一个 Zoom 会话，可以通过社交媒体与我联系。否则，希望我们很快在会议上见面！&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;正如我在文章开头提到的，参加这次 KubeCon 让我感到非常愉快。社区和周围的支持体系显然正在不断发展，现在我们面临的困难任务是在标准化和创新之间取得平衡。&lt;/p&gt;
&lt;p&gt;我相信云原生的未来光明无限。然而，我认为我们将在未来看到更多种类的 AI/LLMs 🙂&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O&#39;Reilly：值得关注的雷达趋势（2023 年 8 月）</title>
      <link>https://cloudnative.to/blog/radar-trends-to-watch-august-2023/</link>
      <pubDate>Thu, 10 Aug 2023 13:05:42 +0800</pubDate>
      <guid>https://cloudnative.to/blog/radar-trends-to-watch-august-2023/</guid>
      <description>&lt;p&gt;摘要：O&amp;rsquo;Reilly 的雷达趋势报告列举了多个 AI、编程、安全、网络、加密货币、生物学和材料方面的趋势。其中包括 GPT-Prompt-Engineer、LlamaIndex、OpenAI 的代码解释器、WormGPT 等。此外，还有一些关于 Web 框架、浏览器、元宇宙、加密货币和室温常压超导体的趋势。&lt;/p&gt;
&lt;p&gt;本文译自：&lt;a href=&#34;https://www.oreilly.com/radar/radar-trends-to-watch-august-2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.oreilly.com/radar/radar-trends-to-watch-august-2023/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;人工智能依然是新闻头条。在过去的一个月中，我们看到了许多语言模型的重大更新：Claude 2，其上下文限制为 10 万个令牌；LLaMA 2，限制相对较宽松；以及 Stable Diffusion XL，是 Stable Diffusion 的一个功能更强大的版本。Claude 2 的巨大上下文是否真的改变了模型的能力？开放访问和开源语言模型在商业应用发展中将扮演什么角色？&lt;/p&gt;
&lt;h2 id=&#34;人工智能&#34;&gt;人工智能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stability.ai/blog/stable-diffusion-sdxl-1-announcement&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stable Diffusion XL&lt;/a&gt; 是一个新的生成模型，扩展了 Stable Diffusion 的能力。它承诺更短、更容易的提示；正确地在图像内生成文本的能力；能够在私有数据上进行训练；以及更高质量的输出。在 &lt;a href=&#34;https://clipdrop.co/stable-diffusion&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clipdrop&lt;/a&gt; 上试用它。&lt;/li&gt;
&lt;li&gt;OpenAI &lt;a href=&#34;https://arstechnica.com/information-technology/2023/07/openai-discontinues-its-ai-writing-detector-due-to-low-rate-of-accuracy/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;撤回了 OpenAI Classifier&lt;/a&gt;，这是一个用于检测 AI 生成文本的工具，因为它的准确性不够高。&lt;/li&gt;
&lt;li&gt;ChatGPT 添加了一个名为“&lt;a href=&#34;https://openai.com/blog/custom-instructions-for-chatgpt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Custom Instructions&lt;/a&gt;”的新功能。这个功能允许用户在任何其他用户生成的提示之前指定一个初始提示；实际上，它是一个个人的“系统提示”。这样可以让 Prompt Injection 更有趣。&lt;/li&gt;
&lt;li&gt;高通正与 Facebook/Meta 合作，在像手机这样的小型设备上运行 &lt;a href=&#34;https://www.qualcomm.com/news/releases/2023/07/qualcomm-works-with-meta-to-enable-on-device-ai-applications-usi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LLaMA 2&lt;/a&gt;，使得 AI 应用可以在本地运行。目标机器的大小将比开源和其他许可证的区别更少。&lt;/li&gt;
&lt;li&gt;StabilityAI 发布了两个新的大型语言模型，&lt;a href=&#34;https://stability.ai/blog/freewilly-large-instruction-fine-tuned-models&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FreeWilly1 和 FreeWilly2&lt;/a&gt;。它们分别基于 LLaMA 和 LLaMA 2。它们被称为开放访问（而不是开源），声称某些任务的性能类似于 GPT 3.5。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chat.lmsys.org/?arena&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chatbot Arena&lt;/a&gt; 让 &lt;a href=&#34;https://arxiv.org/abs/2306.05685&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;聊天机器人互相对战&lt;/a&gt;。用户输入提示，然后将其发送给两个未知（随机选择？）的语言模型。在生成响应后，用户可以宣布获胜者，并了解竞争的模型。&lt;/li&gt;
&lt;li&gt;GPT-4 解决问题的能力可能在过去几个月中 &lt;a href=&#34;https://arxiv.org/pdf/2307.09009.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;有所下降&lt;/a&gt;，特别是它解决数学问题和生成正确的 Python 代码的能力似乎有所下降。另一方面，它对越狱攻击更加稳健。&lt;/li&gt;
&lt;li&gt;Facebook/Meta 发布了 &lt;a href=&#34;https://ai.meta.com/llama/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Llama 2&lt;/a&gt;。虽然对其使用的限制较少，但它并不是 &lt;a href=&#34;https://blog.opensource.org/metas-llama-2-license-is-not-open-source/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源的&lt;/a&gt;，尽管 Facebook 声称它是。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Forethought-Technologies/AutoChain&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Autochain&lt;/a&gt; 是 Langchain 的一种轻量级、简化的替代品。它允许开发人员在大型语言模型和数据库之上构建复杂的应用程序。&lt;/li&gt;
&lt;li&gt;Elon Musk &lt;a href=&#34;https://techxplore.com/news/2023-07-musk-xai-rival-openai-google.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;宣布了&lt;/a&gt; 他的新人工智能公司 xAI。这是否真正有助于人工智能或成为另一个花边，还有待观察。&lt;/li&gt;
&lt;li&gt;Anthropic 宣布了 &lt;a href=&#34;https://www.anthropic.com/index/claude-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Claude 2&lt;/a&gt;，这是他们大型语言模型的新版本。在 &lt;a href=&#34;https://claude.ai/login&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;claude.ai&lt;/a&gt; 上提供了聊天界面，API 访问也可用。Claude 2 允许多达 10 万个令牌的提示，比其他 LLM 大得多，并且可以生成长度为“几千个令牌”的输出。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zelikman.me/parselpaper/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;parsel&lt;/a&gt; 是一个框架，帮助大型语言模型在涉及分层多步推理和问题解决的任务上做得更好。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mshumer/gpt-prompt-engineer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gpt-prompt-engineer&lt;/a&gt; 是一个工具，它读取您希望 AI 执行的任务的描述，以及若干个测试用例。然后，它生成关于一个主题的大量提示，测试提示，然后对结果进行评分。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jerryjliu/llama_index&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LlamaIndex&lt;/a&gt; 是一个面向语言模型的 &lt;a href=&#34;https://www.llamaindex.ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;数据框架&lt;/a&gt;（有时被称为“编排框架”），简化了对用户数据进行索引并使用该数据构建复杂提示的过程。它可以与 &lt;a href=&#34;https://python.langchain.com/docs/get_started/introduction.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Langchain&lt;/a&gt; 一起用于构建复杂的 AI 应用程序。&lt;/li&gt;
&lt;li&gt;OpenAI 正在逐步发布其 &lt;a href=&#34;https://openai.com/blog/chatgpt-plugins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;代码解释器&lt;/a&gt;，它将允许 ChatGPT 执行它创建的任何代码，使用用户提供的数据，并将输出发送回用户。代码解释器可以减少幻觉、错误和错误的数学。&lt;/li&gt;
&lt;li&gt;人类现在可以通过 &lt;a href=&#34;https://goattack.far.ai/pdfs/go_attack_paper.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;找到并利用 AI 系统的游戏弱点&lt;/a&gt;，诱导 AI 犯下严重错误，从而打败 AI 的围棋。&lt;/li&gt;
&lt;li&gt;时间到了提出存在性问题的时候：单个香蕉存在吗？&lt;a href=&#34;https://www.digital-science.com/tldr/article/the-lone-banana-problem-or-the-new-programming-speaking-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Midjourney 不这么认为&lt;/a&gt;。说真的，这是一篇关于设计适当的提示以提供适当结果的困难的优秀文章。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theregister.com/2023/07/03/jolly_roger_telephone_company/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jolly Roger Telephone Company&lt;/a&gt; 开发了基于 GPT-4 的语音机器人，可以雇佣它来回答电话，当推销员打电话时。如果你想听听，结果可能会很有趣。&lt;/li&gt;
&lt;li&gt;Apache Spark 现在有了一个 &lt;a href=&#34;https://www.databricks.com/blog/introducing-english-new-programming-language-apache-spark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;English SDK&lt;/a&gt;。它比 CoPilot 等工具更进一步，允许您在编写代码时直接使用英语。&lt;/li&gt;
&lt;li&gt;人类可能会更愿意相信由 AI 生成的错误信息，可能是因为 AI 生成的文本比大多数人类文本更好结构化。或者，可能是因为 AI 很擅长说服。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://erichartford.com/openorca&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenOrca&lt;/a&gt;是另一个基于 LLaMA 的开源语言模型和数据集。它的目标是复制 Microsoft 的&lt;a href=&#34;https://www.microsoft.com/en-us/research/publication/orca-progressive-learning-from-complex-explanation-traces-of-gpt-4/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orca&lt;/a&gt;的训练数据，该模型是使用 GPT-4 的链式思考提示和响应进行训练的。Orca 模型的主张是它可以复制 GPT-4 的“推理”过程。&lt;/li&gt;
&lt;li&gt;在其&lt;a href=&#34;https://thenewstack.io/snowflake-pushes-range-of-new-ai-developer-capabilities/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开发者峰会&lt;/a&gt;上，Snowflake 宣布了 Document AI：对非结构化文档集合的自然语言查询。该产品基于他们自己的大型语言模型，而不是 AI 提供商。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编程&#34;&gt;编程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;“它在我的机器上运行”已经变成了“&lt;a href=&#34;https://dwdraju.medium.com/how-it-works-in-my-machine-turns-it-works-in-my-container-1b9a340ca43d&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;它在我的容器中运行&lt;/a&gt;”：这篇文章提供了一些关于如何避免困扰计算机用户数十年的问题的好建议。&lt;/li&gt;
&lt;li&gt;StackOverflow 正在将 AI 集成到其产品中。StackOverflow for Teams 现在有一个&lt;a href=&#34;https://stackoverflow.co/labs/slack/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chatbot&lt;/a&gt;来帮助解决技术问题，以及一个新的&lt;a href=&#34;https://genai.stackexchange.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GenAI StackExchange&lt;/a&gt;用于讨论生成 AI，提示编写和相关问题。&lt;/li&gt;
&lt;li&gt;GitHub 泄露私钥和身份验证密钥并不是新闻。但是对 DockerHub 上可用的容器进行的研究表明，&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/thousands-of-images-on-docker-hub-leak-auth-secrets-private-keys/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker 容器也会泄露密钥和密码&lt;/a&gt;，其中许多密钥正在使用中。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firejail.wordpress.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Firejail&lt;/a&gt;是一个 Linux 工具，可以在私有，安全的沙箱中运行任何进程。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://spin.atomicobject.com/2023/07/10/complexity-software-information/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;复杂和复杂&lt;/a&gt;：有什么区别？它与信息有关，在“复杂系统”的时代，了解它很重要。第一部分。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/panki27/npm-manifest-check&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;npm-manifest-check&lt;/a&gt;是一个工具，用于&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/new-python-tool-checks-npm-packages-for-manifest-confusion-issues/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;检查&lt;/a&gt;NPM 包中的内容与包的清单。这是解决 NPM 中恶意包问题的部分解决方案。&lt;/li&gt;
&lt;li&gt;Facebook 描述了他们的&lt;a href=&#34;https://engineering.fb.com/2023/06/27/developer-tools/meta-developer-tools-open-source/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;软件开发平台&lt;/a&gt;，其中大部分已经开源。很少有开发人员需要使用这么大的软件项目，但是他们的工具（包括测试框架，版本控制和构建系统）值得探究。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dredozubov/polyrhythmix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Polyrhythmix&lt;/a&gt;是一个命令行程序，用于生成多节奏鼓部。没有涉及 AI。&lt;/li&gt;
&lt;li&gt;Philip Guo 的“&lt;a href=&#34;https://www.oreilly.com/radar/real-real-world-programming-with-chatgpt/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Real-Real-World Programming with ChatGPT&lt;/a&gt;”展示了使用 ChatGPT 执行真实编程任务的情况：哪些工作得很好，哪些不好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安全&#34;&gt;安全&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一个研究小组发现了一种方法来&lt;a href=&#34;https://llm-attacks.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;自动生成攻击字符串&lt;/a&gt;，以迫使大型语言模型生成有害内容。这些攻击可针对开源和闭源模型。AI 提供商无法防御它们还不清楚。&lt;/li&gt;
&lt;li&gt;黑客集团 Lazarus Group 正在对 JavaScript 加密货币开发人员进行&lt;a href=&#34;https://socket.dev/blog/social-engineering-campaign-npm-malware&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;社交工程攻击&lt;/a&gt;。开发人员被邀请在依赖于恶意 NPM 包的 Github 项目上进行合作。&lt;/li&gt;
&lt;li&gt;语言模型是网络犯罪的下一个大事。一个名为&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/openai-credentials-stolen-by-the-thousands-for-sale-on-the-dark-web/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WormGPT&lt;/a&gt;的大型语言模型已经被开发用于网络犯罪。它基于 GPT-J。WormGPT 可在暗网上使用，以及成千上万的被盗 ChatGPT 凭据。&lt;/li&gt;
&lt;li&gt;根据 MITRE 的研究，&lt;a href=&#34;https://www.theregister.com/2023/06/29/cwe_top_25_2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;越界写入&lt;/a&gt;是最危险的安全漏洞之一。它们也是最常见的，并且一直位列榜首。解决问题的简单方法是使用 Rust。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网络&#34;&gt;网络&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;又一个 Web 框架？&lt;a href=&#34;https://enhance.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Enhance&lt;/a&gt;声称是 HTML 优先，只有在需要时才使用 JavaScript。实际情况可能并不那么简单，但如果没有其他东西，它证明了对复杂和臃肿的 Web 应用程序的不满正在增长。&lt;/li&gt;
&lt;li&gt;又一个新的浏览器？&lt;a href=&#34;https://arc.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arc&lt;/a&gt; &lt;a href=&#34;https://arstechnica.com/gadgets/2023/07/the-browsing-companys-unconventional-browser-arc-releases-publicly-on-mac/#p3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;重新思考&lt;/a&gt;浏览体验，具有在选项卡组之间切换和自定义单个网站的功能。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://htmx.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTMX&lt;/a&gt;提供一种使用 HTML 属性构建许多高级 Web 页面功能的方法，包括 WebSockets 和我们曾经称之为 Ajax。所有复杂性似乎都打包在一个 JavaScript 库中。&lt;/li&gt;
&lt;li&gt;在元宇宙中有一家&lt;a href=&#34;https://www.technologyreview.com/2023/06/28/1074338/future-job-metaverse-lawyer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;律师事务所&lt;/a&gt;，以及一个新兴的元宇宙律师协会。这是一个很好的会议地点，尽管律师不能获得在元宇宙中执业的许可。&lt;/li&gt;
&lt;li&gt;欧洲法院（CJEU）裁定 Meta 的 GDPR 合规方法是非法的，Meta 可能不会在未经明确，自由授予的同意的情况下使用数据进行除核心功能之外的任何其他事情; 不在使用条款文件中隐藏的同意不足。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;加密货币&#34;&gt;加密货币&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;谷歌已更新其关于 Android 应用程序的&lt;a href=&#34;https://android-developers.googleblog.com/2023/07/new-blockchain-based-content-opportunities-google-play.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;政策&lt;/a&gt;，允许应用程序提供基于区块链的资产，例如 NFT。&lt;/li&gt;
&lt;li&gt;ChatGPT 可以编程为&lt;a href=&#34;https://marginalrevolution.com/marginalrevolution/2023/07/teaching-gpt-to-send-bitcoin-payments.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;发送比特币付款&lt;/a&gt;。正如第一个评论者指出的那样，这是 Langchain 的一个相当简单的应用。但这肯定会发生的事情。但问题是：我们何时会有基于 GPT 的加密货币套利？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;生物学&#34;&gt;生物学&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Google 开发了&lt;a href=&#34;https://arxiv.org/abs/2307.14334&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Med-PaLM M&lt;/a&gt;，试图构建一个被训练用于生物医学应用程序的“通用”多模态 AI。Med-PaLM M 仍然是一个研究项目，但可能代表了将大型语言模型应用于医学的一步前进。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;材料&#34;&gt;材料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2307.12008&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;室温常压超导体&lt;/a&gt;：这一说法引起了很多怀疑 - 但是一如既往，最好等到另一个团队成功或未能复制结果。如果这项研究成果成立，那么这是一个巨大的进步。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>JWT 组件详解</title>
      <link>https://cloudnative.to/blog/jwt-components-explained/</link>
      <pubDate>Mon, 27 Mar 2023 17:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/jwt-components-explained/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;译者注：本文译自 &lt;a href=&#34;https://fusionauth.io/learn/expert-advice/tokens/jwt-components-explained&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fusion Auth Developer&lt;/a&gt;。JSON Web Token（通常缩写为 JWT）是一种通常与 OAuth2 等标准协议一起使用的令牌。本文解释了 JWT 的组成部分和工作原理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在我们继续之前，重要的是要注意 JWT 通常被错误地称为 &lt;code&gt;JWT Tokens&lt;/code&gt;。在末尾添加 &lt;code&gt;Token&lt;/code&gt; 将会使其变成 &lt;code&gt;JSON Web Token Token&lt;/code&gt;。因此，在本文中，我们省略末尾的 &lt;code&gt;Token&lt;/code&gt; 并简单地称之为 &lt;code&gt;JWT&lt;/code&gt;，因为这是更正确的名称。同样地，由于 JWT 通常用作身份验证和授权过程的一部分，一些人将其称为 &lt;code&gt;Authentication Tokens&lt;/code&gt; 或 &lt;code&gt;JWT Authentication Tokens&lt;/code&gt;。从技术上讲，JWT 只是一个包含 Base64 编码的 JSON 的令牌。它可以用于许多不同的用例，&lt;em&gt;包括&lt;/em&gt;身份验证和授权。因此，在本文中，我们不使用这个术语，而是讨论如何在身份验证过程中使用 JWT。&lt;/p&gt;
&lt;p&gt;让我们开始吧！这是一个新生成的 JWT。为清楚起见添加了换行符，但它们通常不存在。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImY1ODg5MGQxOSJ9.eyJhdWQiO
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iI4NWEwMzg2Ny1kY2NmLTQ4ODItYWRkZS0xYTc5YWVlYzUwZGYiLCJleHAiOjE2NDQ4ODQ
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xODUsImlhdCI6MTY0NDg4MDU4NSwiaXNzIjoiYWNtZS5jb20iLCJzdWIiOiIwMDAwMDAwM
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;C0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEiLCJqdGkiOiIzZGQ2NDM0ZC03OWE5LTR
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kMTUtOThiNS03YjUxZGJiMmNkMzEiLCJhdXRoZW50aWNhdGlvblR5cGUiOiJQQVNTV09SR
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CIsImVtYWlsIjoiYWRtaW5AZnVzaW9uYXV0aC5pbyIsImVtYWlsX3ZlcmlmaWVkIjp0cnV
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;lLCJhcHBsaWNhdGlvbklkIjoiODVhMDM4NjctZGNjZi00ODgyLWFkZGUtMWE3OWFlZWM1M
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GRmIiwicm9sZXMiOlsiY2VvIl19.dee-Ke6RzR0G9avaLNRZf1GUCDfe8Zbk9L2c7yaqKME
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这可能看起来像是一堆乱码，但随着您对 JWT 以及它们在 OAuth2 或身份验证过程中的使用方式了解得更多，它开始变得更有意义了。&lt;/p&gt;
&lt;p&gt;有几种类型的 JSON Web 令牌，但我将重点介绍已签名的 JWT，因为它们是最常见的。签名的 JWT 也可以称为 JWS。它由三个部分组成，以句号分隔。&lt;/p&gt;
&lt;p&gt;有一个标头，在上面的 JWT 中以&lt;code&gt;eyJhbGc&lt;/code&gt;开头。然后有一个主体或有效载荷，上面以&lt;code&gt;eyJhdWQ&lt;/code&gt;开头。最后有一个签名，在示例 JWT 中以&lt;code&gt;dee-K&lt;/code&gt;开头。&lt;/p&gt;
&lt;p&gt;JWT 如何工作？让我们拆开这个示例 JWT 并深入了解一下。&lt;/p&gt;
&lt;h2 id=&#34;jwt-标头解释&#34;&gt;JWT 标头解释&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImY1ODg5MGQxOSJ9&lt;/code&gt;是 JWT 的标头。JWT 标头包含有关 JWT 的元数据，包括密钥标识符、用于登录的算法和其他信息。&lt;/p&gt;
&lt;p&gt;如果您通过 base64 解码器运行上述标头：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImY1ODg5MGQxOSJ9&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;base64 -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你会看到这个 JSON：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;alg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;HS256&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;typ&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;JWT&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;kid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;f58890d19&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;HS256&lt;/code&gt;表示 JWT 是使用对称算法签名的，特别是使用 SHA-256 的 HMAC。&lt;/p&gt;
&lt;p&gt;算法列表和实现支持级别如下。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;“alg” Param Value&lt;/th&gt;
          &lt;th&gt;Digital Signature or MAC Algorithm&lt;/th&gt;
          &lt;th&gt;Implementation Requirements&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;HS256&lt;/td&gt;
          &lt;td&gt;HMAC using SHA-256&lt;/td&gt;
          &lt;td&gt;Required&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;HS384&lt;/td&gt;
          &lt;td&gt;HMAC using SHA-384&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;HS512&lt;/td&gt;
          &lt;td&gt;HMAC using SHA-512&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RS256&lt;/td&gt;
          &lt;td&gt;RSASSA-PKCS1-v1_5 using SHA-256&lt;/td&gt;
          &lt;td&gt;Recommended&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RS384&lt;/td&gt;
          &lt;td&gt;RSASSA-PKCS1-v1_5 using SHA-384&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RS512&lt;/td&gt;
          &lt;td&gt;RSASSA-PKCS1-v1_5 using SHA-512&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ES256&lt;/td&gt;
          &lt;td&gt;ECDSA using P-256 and SHA-256&lt;/td&gt;
          &lt;td&gt;Recommended+&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ES384&lt;/td&gt;
          &lt;td&gt;ECDSA using P-384 and SHA-384&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ES512&lt;/td&gt;
          &lt;td&gt;ECDSA using P-521 and SHA-512&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PS256&lt;/td&gt;
          &lt;td&gt;RSASSA-PSS using SHA-256 and MGF1 with SHA-256&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PS384&lt;/td&gt;
          &lt;td&gt;RSASSA-PSS using SHA-384 and MGF1 with SHA-384&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;PS512&lt;/td&gt;
          &lt;td&gt;RSASSA-PSS using SHA-512 and MGF1 with SHA-512&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;none&lt;/td&gt;
          &lt;td&gt;No digital signature or MAC performed&lt;/td&gt;
          &lt;td&gt;Optional&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;此表取自 RFC 7518。由于仅 HS256 需要符合规范，请查阅用于创建 JWT 的软件或库以获取有关受支持算法的详细信息。&lt;/p&gt;
&lt;p&gt;其他元数据也存储在 JWT 的这一部分中。&lt;code&gt;typ&lt;/code&gt;标头指示 JWT 的类型。在本例中，该值为&lt;code&gt;JWT&lt;/code&gt;，但其他值均有效。例如，如果 JWT 符合 RFC 9068，它可能具有&lt;code&gt;at+JWT&lt;/code&gt;指示它是访问令牌的值。&lt;/p&gt;
&lt;p&gt;该&lt;code&gt;kid&lt;/code&gt;值指示用于签署 JWT 的密钥。对于对称密钥，&lt;code&gt;kid&lt;/code&gt;可用于在秘密保险库中查找值。对于非对称签名算法，此值让 JWT 的消费者查找与签署此 JWT 的私钥相对应的正确公钥。正确处理此值对于签名验证和 JWT 负载的完整性至关重要。&lt;/p&gt;
&lt;p&gt;通常情况下，将标头值的大部分处理过程转移到库中。有许多优秀的开源 JWT 处理库。您应该了解这些库的价值，但可能不必实现实际处理。&lt;/p&gt;
&lt;h2 id=&#34;jwt-令牌主体&#34;&gt;JWT 令牌主体&lt;/h2&gt;
&lt;p&gt;有效载荷或主体是使 JWT 变得有趣的地方。此部分包含创建 JWT 以传输的数据。例如，如果 JWT 表示授权访问某些数据或功能的用户，则有效载荷包含用户数据，例如角色或其他授权信息。&lt;/p&gt;
&lt;p&gt;这是来自示例 JWT 的有效负载：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;eyJhdWQiOiI&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;NWEwMzg&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;Ny&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;kY&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;NmLTQ&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;ODItYWRkZS&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;xYTc&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;YWVlYzUwZGYiLCJleHAiOjE&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;NDQ&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;ODQxODUsImlhdCI&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;MTY&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;NDg&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;MDU&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;NSwiaXNzIjoiYWNtZS&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;jb&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;iLCJzdWIiOiIwMDAwMDAwMC&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;wMDAwLTAwMDAtMDAwMC&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;wMDAwMDAwMDAwMDEiLCJqdGkiOiIzZGQ&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;NDM&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;ZC&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;03&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;OWE&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;LTRkMTUtOThiNS&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;03&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;YjUxZGJiMmNkMzEiLCJhdXRoZW&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;aWNhdGlvblR&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;cGUiOiJQQVNTV&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;SRCIsImVtYWlsIjoiYWRtaW&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;AZnVzaW&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;uYXV&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;aC&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;pbyIsImVtYWlsX&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;ZlcmlmaWVkIjp&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;cnVlLCJhcHBsaWNhdGlvbklkIjoiODVhMDM&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;NjctZGNjZi&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;ODgyLWFkZGUtMWE&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;OWFlZWM&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;MGRmIiwicm&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;sZXMiOlsiY&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;VvIl&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您通过 base64 解码器运行示例负载：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;eyJhdWQiOiI4NWEwMzg2Ny1kY2NmLTQ4ODItYWRkZS0xYTc5YWVlYzUwZGYiLCJleHAiOjE2NDQ4ODQxODUsImlhdCI6MTY0NDg4MDU4NSwiaXNzIjoiYWNtZS5jb20iLCJzdWIiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEiLCJqdGkiOiIzZGQ2NDM0ZC03OWE5LTRkMTUtOThiNS03YjUxZGJiMmNkMzEiLCJhdXRoZW50aWNhdGlvblR5cGUiOiJQQVNTV09SRCIsImVtYWlsIjoiYWRtaW5AZnVzaW9uYXV0aC5pbyIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJhcHBsaWNhdGlvbklkIjoiODVhMDM4NjctZGNjZi00ODgyLWFkZGUtMWE3OWFlZWM1MGRmIiwicm9sZXMiOlsiY2VvIl19&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;base64 -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你会看到这个 JSON：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;aud&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;85a03867-dccf-4882-adde-1a79aeec50df&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;exp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1644884185&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;iat&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1644880585&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;iss&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;acme.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;sub&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;00000000-0000-0000-0000-000000000001&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;jti&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;3dd6434d-79a9-4d15-98b5-7b51dbb2cd31&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;authenticationType&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;PASSWORD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;admin@fusionauth.io&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;email_verified&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;applicationId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;85a03867-dccf-4882-adde-1a79aeec50df&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;roles&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;ceo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，创建签名 JWT 的算法可以删除 base64 填充，因此 JWT 末尾可能缺少符号。您可能需要将其添加回去才能解码 JWT 令牌。这取决于内容的长度。您可以&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7515#appendix-C&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在此处了解更多信息&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如上所述，负载是您的应用程序所关心的，所以让我们更仔细地看一下这个 JSON。对象的每个键都称为“声明”（Claim）。&lt;/p&gt;
&lt;p&gt;一些声明是众所周知的，其含义由 IETF 等标准机构规定。您可以在此处查看&lt;a href=&#34;https://www.iana.org/assignments/jwt/jwt.xhtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;此类声明的示例&lt;/a&gt;。这些包括示例令牌中的&lt;code&gt;iss&lt;/code&gt;和&lt;code&gt;aud&lt;/code&gt;声明。当它们出现在 JWT 的有效负载中时，这两者都具有定义的含义。&lt;/p&gt;
&lt;p&gt;还有其他非标准声明，例如&lt;code&gt;authenticationType&lt;/code&gt;。这些声明可能代表业务领域或自定义数据。例如，&lt;code&gt;authenticationType&lt;/code&gt;是 FusionAuth 使用的专有声明，用于指示身份验证方法，例如密码、刷新令牌或通过无密码链接。&lt;/p&gt;
&lt;p&gt;您可以向 JWT 添加您想要的任何声明，包括对 JWT 的下游消费者有用的数据。从&lt;code&gt;roles&lt;/code&gt;声明中可以看出，声明不必是简单的 JSON 原语。它们可以是任何可以用 JSON 表示的数据结构。&lt;/p&gt;
&lt;h2 id=&#34;声明验证&#34;&gt;声明验证&lt;/h2&gt;
&lt;p&gt;当代码与 JWT 一起出现时，它应该验证某些声明。至少，应检查这些声明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iss&lt;/code&gt;标识 JWT 的发行者。只要 JWT 的发行者和消费者就有效值达成一致，并且消费者验证声明与已知的良好值相匹配，这个字符串到底是什么并不重要（UUID、域名、URL 或其他内容）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aud&lt;/code&gt;标识令牌的受众，即谁应该使用它。可以是标量或数组值。同样，JWT 的发行者和消费者应该就可接受的特定值达成一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nbf&lt;/code&gt; 和 &lt;code&gt;exp&lt;/code&gt;。这些声明确定令牌有效的时间范围。如果您要发行令牌以供将来使用，则该声明可能很有用。应始终设置 &lt;code&gt;exp&lt;/code&gt; 声明，即 JWT 不再有效的时间。与其他声明不同，它们具有定义的值格式：自 unix 纪元以来的秒数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了这些之外，还要验证业务领域特定的声明。例如，使用上述 JWT 的人可以在&lt;code&gt;authenticationType&lt;/code&gt;未知值时拒绝访问。&lt;/p&gt;
&lt;p&gt;避免将未使用的声明放入 JWT。虽然 JWT 的大小没有限制，但通常它们越大，签名和验证它们所需的 CPU 就越多，传输它们所需的时间也就越多。Benchmark 期望 JWT 了解性能特征。&lt;/p&gt;
&lt;h2 id=&#34;声明和安全&#34;&gt;声明和安全&lt;/h2&gt;
&lt;p&gt;拥有令牌的任何人都可以看到已签名 JWT 的声明。&lt;/p&gt;
&lt;p&gt;正如您在上面看到的，要以明文形式查看声明，您只需要一个 base64 解码器，它可以在每个命令行和互联网上的任何地方使用。&lt;/p&gt;
&lt;p&gt;因此，您不应将任何应该保密的内容放入 JWT 中。这包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;私人信息，例如政府 ID&lt;/li&gt;
&lt;li&gt;密码之类的秘密&lt;/li&gt;
&lt;li&gt;任何会泄露信息的东西，比如整数 id&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另一个安全问题与&lt;code&gt;aud&lt;/code&gt;声明的验证有关。由于消费代码已经拥有令牌，验证&lt;code&gt;aud&lt;/code&gt;声明是否多此一举？&lt;code&gt;aud&lt;/code&gt;声明表明谁应该接收这个 JWT，但代码已经有了它。不，总是验证声明。&lt;/p&gt;
&lt;p&gt;为什么？&lt;/p&gt;
&lt;p&gt;想象一下您有两个不同 API 的场景。一个是创建和管理待办事项，另一个是计费 API，用于转账。这两个 API 都期望一些用户具有&lt;code&gt;admin&lt;/code&gt;角色。然而，就可以采取的行动而言，该角色意味着截然不同的事情。&lt;/p&gt;
&lt;p&gt;如果待办事项 API 和计费 API 均未验证是否为它们创建了任何给定的 JWT，则攻击者可以从具有该&lt;code&gt;admin&lt;/code&gt;角色的待办事项 API 中获取 JWT，并将其呈现给计费 API。&lt;/p&gt;
&lt;p&gt;这最多是一个错误，最坏的情况是特权升级，对银行账户产生负面影响。&lt;/p&gt;
&lt;h2 id=&#34;jwt-签名&#34;&gt;&lt;strong&gt;JWT 签名&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;JWT 的签名很关键，因为它保证了负载和标头的完整性。验证签名必须是 JWT 的任何消费者执行的第一步。如果签名不匹配，则不应进行进一步处理。&lt;/p&gt;
&lt;p&gt;虽然您可以阅读&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7515#page-15&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;规范的相关部分&lt;/a&gt;以了解签名是如何生成的，但高级概述是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标头变成了 base64 URL 编码的字符串&lt;/li&gt;
&lt;li&gt;负载被转换为 base64 URL 编码的字符串&lt;/li&gt;
&lt;li&gt;它们由&lt;code&gt;.&lt;/code&gt; 连接&lt;/li&gt;
&lt;li&gt;生成的字符串通过所选的加密算法运行，连同相应的密钥&lt;/li&gt;
&lt;li&gt;签名是 base64 URL 编码的&lt;/li&gt;
&lt;li&gt;编码后的签名以 &lt;code&gt;.&lt;/code&gt; 作为分隔符附加到字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当收到 JWT 时，可以执行相同的操作。如果生成的签名正确，则 JWT 的内容与创建时没有变化。&lt;/p&gt;
&lt;h2 id=&#34;json-web-令牌限制&#34;&gt;&lt;strong&gt;JSON Web 令牌限制&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在规范中，JSON Web Tokens 的长度没有硬性限制。实际上，考虑一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你打算在哪里存储 JWT&lt;/li&gt;
&lt;li&gt;大型 JWT 的性能损失是什么&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;存储&#34;&gt;存储&lt;/h2&gt;
&lt;p&gt;JWT 可以在 HTTP 标头中发送，存储在 cookie 中，并放置在表单参数中。在这些场景中，存储决定了 JWT 的最大长度。&lt;/p&gt;
&lt;p&gt;例如，浏览器中 cookie 的典型存储限制通常为 4096 字节，包括名称。HTTP 标头的限制因软件组件而异，但 8192 字节似乎是一个常见值。&lt;/p&gt;
&lt;p&gt;请查阅相关规范或其他资源以了解特定用例的限制，但请放心，JWT 没有固有的大小限制。&lt;/p&gt;
&lt;h2 id=&#34;性能影响&#34;&gt;性能影响&lt;/h2&gt;
&lt;p&gt;由于 JWT 可以包含许多不同类型的用户信息，因此开发人员可能会忍不住在其中放入太多信息。这会降低签名和验证步骤以及传输中的性能。&lt;/p&gt;
&lt;p&gt;对于前者的示例，以下是签署和验证两个不同 JWT 的基准测试结果。每个操作进行了 50,000 次。&lt;/p&gt;
&lt;p&gt;第一个 JWT 的正文长度约为 180 个字符；总编码令牌长度在 300 到 600 之间，具体取决于所使用的签名算法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hmac sign
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  1.632396   0.011794   1.644190 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  1.656177&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hmac verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  2.452983   0.015723   2.468706 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  2.487930&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rsa sign
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 28.409793   0.117695  28.527488 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt; 28.697615&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rsa verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  3.086154   0.011869   3.098023 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  3.109780&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ecc sign
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  4.248960   0.017153   4.266113 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  4.285231&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ecc verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  7.057758   0.027116   7.084874 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  7.113594&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下一个 JWT 负载大约有 1800 个字符，因此是前一个令牌大小的十倍。这具有 2400 到 2700 个字符的总令牌长度。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hmac sign
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  3.356960   0.018175   3.375135 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  3.389963&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hmac verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  4.283810   0.018320   4.302130 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  4.321095&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rsa sign
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 32.703723   0.172346  32.876069 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt; 33.072665&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rsa verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  5.300321   0.027455   5.327776 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  5.358079&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ecc sign
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  6.557596   0.032239   6.589835 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  6.624320&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ecc verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  9.184033   0.035617   9.219650 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;  9.259225&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您可以看到，对于较长的 JWT，总时间增加了，但通常不是线性的。所用时间的增加范围从 RSA 签名的大约 20% 到 HMAC 签名的大约 100%。&lt;/p&gt;
&lt;p&gt;请注意传输更长的 JWT 所花费的额外时间；这可以用与任何其他 API 或 HTML 内容相同的方式进行测试和优化。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;已签名的 JWT 具有标头、正文和签名。每个都在确保 JWT 可用于安全地存储和传输关键信息（无论是否与身份有关）方面发挥着至关重要的身份验证作用。了解所有这三个组件对于正确使用 JWT 也至关重要。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>为什么现在对 Web3 感到兴奋还为时过早？</title>
      <link>https://cloudnative.to/blog/why-its-too-early-to-get-excited-about-web3/</link>
      <pubDate>Wed, 12 Jan 2022 09:24:17 +0800</pubDate>
      <guid>https://cloudnative.to/blog/why-its-too-early-to-get-excited-about-web3/</guid>
      <description>&lt;p&gt;本文译自知名出版商 O’Reilly 创始人 Tim O’Reilly 的文章 &lt;a href=&#34;http://localhost:1313/blog/why-its-too-early-to-get-excited-about-web3/oreilly.com/radar/why-its-too-early-to-get-excited-about-web3/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why it’s too early to get excited about Web3&lt;/a&gt;，原文发布于 2021 年 12 月 13 日。&lt;/p&gt;
&lt;p&gt;最近有很多关于 Web3 的讨论，作为 17 年前&lt;a href=&#34;https://www.oreilly.com/pub/a/web2/archive/what-is-web-20.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;定义“Web2.0”&lt;/a&gt; 的人，我经常被要求发表评论。我通常避免这样做，因为大多数关于未来的预言都是错误的。不过，我们可以做的是问自己一些问题，帮助我们更深入地看到现在，也就是未来的土壤。正如 William Gibson 的名言：&amp;quot; [未来已来，只是还没有被平均分配](&lt;a href=&#34;https://quoteinvestigator.com/2012/01/24/future-has-arrived/#:~:text=The&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://quoteinvestigator.com/2012/01/24/future-has-arrived/#:~:text=The&lt;/a&gt; Future Has Arrived — It&amp;rsquo;s,Evenly Distributed Yet – Quote Investigator) &amp;ldquo;。我们还可以审视经济和社会模式和周期，把&lt;a href=&#34;https://quoteinvestigator.com/2014/01/12/history-rhymes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;马克・吐温的观点&lt;/a&gt;作为镜头，即“历史不会重复，但总会惊人的相似”。&lt;/p&gt;
&lt;p&gt;抛开这些噪音，我们可以对 Web3 说些什么？&lt;/p&gt;
&lt;h2 id=&#34;分权与集权&#34;&gt;分权与集权&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nytimes.com/2006/05/23/technology/23iht-web.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2006 年&lt;/a&gt;，万维网的创建者&lt;a href=&#34;https://www.nytimes.com/2006/05/23/technology/23iht-web.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蒂姆・伯纳斯・李（Tim Berners-Lee）使用了 Web 3.0&lt;/a&gt; 这个术语，作为对 Web 2.0 之后的网络下一阶段的展望。他认为，“语义网“将是这一演变的核心。但结果却并非如此。现在人们提出的理由是，下一代网络将以加密为基础。&lt;/p&gt;
&lt;p&gt;我们今天所认为的“Web3“是由 Gavin Wood 在 2014 年提出的，他是 Ethereum 的共同创造者之一。&lt;a href=&#34;https://www.wired.com/story/web3-gavin-wood-interview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wood 对 Web3 的紧凑定义&lt;/a&gt;，正如他在最近的 &lt;strong&gt;《连线》&lt;/strong&gt; 采访中所说，很简单。“更少的信任，更多的真相”。&lt;/p&gt;
&lt;p&gt;在作出这一断言时，Wood 将 Web3 与最初的互联网协议进行了对比，后者的精神也许可以用 Jon Postel 的“&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc761#section-2.10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;稳健性原则&lt;/a&gt; “来概括。“TCP 实现应该遵循一个一般的稳健性原则：在自己做的事情上要保守，在接受别人的事情上要自由。这种精神成为全球分布的计算机网络的基础，在这个网络中，只要每个人都尽力遵循相同的协议，并对偏差持宽容态度，就不需要有人负责。这个系统迅速超越了所有专有网络，改变了世界。不幸的是，时间证明，这个系统的创造者过于理想化，没有考虑到&lt;a href=&#34;https://cacm.acm.org/magazines/2011/8/114933-the-robustness-principle-reconsidered/fulltext?mobile=false&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;破坏者&lt;/a&gt;，也许更重要的是，没有预见到大数据将使巨大的权力集中成为可能，即使是在分散的网络之上。&lt;/p&gt;
&lt;p&gt;Wood 的观点是，区块链以技术中内置的透明度和不可撤销性取代了对他人良好意图的信任。正如 &lt;a href=&#34;https://ethereum.org/en/developers/docs/intro-to-ethereum/#what-is-ethereum&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ethereum.org 上解释的&lt;/a&gt;那样：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;加密机制确保一旦交易被验证为有效并被添加到区块链中，它们以后就不能被篡改了。同样的机制还确保所有的交易都被签署并以适当的“权限“执行（除了 Alice 本人，任何人都不能从 Alice 的账户中发送数字资产）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ethereum.org 的文档&lt;a href=&#34;https://ethereum.org/en/developers/docs/web2-vs-web3/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;继续&lt;/a&gt;解释道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Web2 指的是我们今天大多数人知道的互联网版本。一个由提供服务以换取你的个人数据的公司主导的互联网。Web3，在以太坊的背景下，指的是在区块链上运行的去中心化的应用程序。这些应用程序允许任何人参与，而不对他们的个人数据进行货币化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;加密货币爱好者 &lt;a href=&#34;https://mirror.xyz/0x26163318B9972E41A734602Fe00A5683D233613f/6TFol00n6eOMP11Tupsj6Hr4WGWbW7898yWmaR8yarE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sal Delle Palme 说得更大胆&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们正在见证一个新经济体系的诞生。它的特点和信条现在才刚刚被全世界数百万人以透明的方式设计和完善。欢迎大家参与。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我喜欢 Web3 愿景的理想主义，但我们以前也经历过这种情况。在我的职业生涯中，我们已经经历了几个去中心化和再中心化的周期。个人电脑通过提供一个任何人都可以建立的、无人控制的商品 PC 架构，实现了计算的去中心化。但微软想出了如何围绕一个专有的操作系统重新集中整个行业。开源软件、互联网和万维网用自由软件和开放协议打破了专有软件的束缚，但在几十年内，谷歌、亚马逊和其他公司在大数据基础上建立了巨大的新垄断。&lt;/p&gt;
&lt;p&gt;Clayton Christensen 将这种模式概括为&lt;a href=&#34;https://www.oreilly.com/pub/a/tim/articles/paradigmshift_0504.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;有吸引力的利润守恒定律&lt;/a&gt;。“当有吸引力的利润在价值链的某一阶段因产品变得模块化和商品化而消失时，用专有产品赚取有吸引力的利润的机会通常会在相邻的阶段出现。”&lt;/p&gt;
&lt;p&gt;区块链开发者认为，这一次他们已经找到了重新集中化的结构性答案，但我倾向于怀疑。一个有趣的问题是，下一个中心化和控制点可能是什么。通过降低计算的能源成本，比特币开采迅速整合到少数人手中，这表明了一种再中心化。还会有其他的。&lt;/p&gt;
&lt;h2 id=&#34;炒作周期&#34;&gt;炒作周期&lt;/h2&gt;
&lt;p&gt;以太坊社区关于该主题的早期著作对 Web3 的权衡和未来的挑战提供了有分寸的评估，但今天大多数流行的说法都充斥着炒作和金融投机的魅力。&lt;a href=&#34;https://www.nytimes.com/2021/10/29/us/politics/crypto-currency-venture-capitalists.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《纽约时报》最近的一篇文章&lt;/a&gt;就提供了一个例子。&lt;/p&gt;
&lt;p&gt;风险资本家们正在押注数十亿美元，以创造一个实际上是网络上的金融、商业、通信和娱乐的替代世界，这可能会从根本上改变全球经济的主要元素 —— 所有这些都建立在由比特币推广的区块链技术之上。&lt;/p&gt;
&lt;p&gt;接下来是加密货币支持者 Andreessen Horowitz 的一连串投资，领域包括游戏、去中心化金融、&lt;a href=&#34;https://en.wikipedia.org/wiki/Non-fungible_token&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NFT&lt;/a&gt; 和去中心化的社交网络。文章中的例子都没有关注所创造的东西的效用，只是关注它们会让投资者和创造者发财的可能性。&lt;/p&gt;
&lt;p&gt;不仅仅是主流媒体在大肆报道可以赚到的钱，好像实际价值的创造并不重要。那些已经进入“&lt;a href=&#34;https://mirror.xyz/0x26163318B9972E41A734602Fe00A5683D233613f/6TFol00n6eOMP11Tupsj6Hr4WGWbW7898yWmaR8yarE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;加密货币兔子洞&lt;/a&gt; “的人在获得财富的问题上说得头头是道。&lt;/p&gt;
&lt;p&gt;加密货币的一个伟大之处在于它如何使投资机会民主化。例如，人们已经可以通过 Kraken 轻松获得 95 种经过审查的加密货币资产。如果你有足够的技术知识，你可以直接投资于全球超过 1150 种加密资产，每一种资产的市值都在 1000 万美元以上（截至发稿时）….&lt;/p&gt;
&lt;p&gt;为了获得科技领域的早期创业投资交易，传统上你需要在硅谷获得认可和联系。从理论上讲，进入加密货币的唯一真正障碍应该是认识….&lt;/p&gt;
&lt;p&gt;跟着我重复：无论是风险资本投资还是容易获得高风险、高度膨胀的资产，都不能预测某个公司或技术的持久成功和影响。还记得网络公司的繁荣和随后的破产吗？&lt;a href=&#34;https://www.thinkadvisor.com/2021/12/03/berkshires-munger-says-now-even-crazier-than-dot-com-bust/?slreturn=20211106151609&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;伯克希尔・哈撒韦公司的&lt;/a&gt;传奇投资者&lt;a href=&#34;https://www.thinkadvisor.com/2021/12/03/berkshires-munger-says-now-even-crazier-than-dot-com-bust/?slreturn=20211106151609&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;查理・芒格最近指出&lt;/a&gt;，我们正处于一个“比网络时代更疯狂的时代”。&lt;/p&gt;
&lt;p&gt;加密货币很可能是金融的未来，但目前很难看到什么是真正有效的，因为有很多烟雾被吹散了。是的，&lt;a href=&#34;https://finance.yahoo.com/quote/COIN/financials/?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;amp;guce_referrer_sig=AQAAAI6rNDF_tlSWSdABt9Y_YdiTozbIPYSWYRTXkqC9MNibTIaYHcOshiCNSqgYO_KYaks1DwNrgqjEfW0tlup6onVSEb4vxxgVtzG4cyt2uP-LgQ14NK8uCJhD7iOLBPfX5CWH3H7ZjXg5EEtHugajpGguvqRal4-rljjNwu-0G2TD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;像 Coinbase 这样的交易所正在赚大钱&lt;/a&gt;，但与传统的金融交易所不同，正在交易的不是通用货币，而是可能被严重高估的投机性资产类别。区块链也没有像 Gavin Wood 希望的那样取代信任。按交易量计算，世界上最大的加密货币交易所 Binance 正在&lt;a href=&#34;https://www.bloomberg.com/news/articles/2021-05-13/binance-probed-by-u-s-as-money-laundering-tax-sleuths-bore-in&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;接受税务欺诈和洗钱的调查&lt;/a&gt;。最近的一个头条新闻指出，&amp;rdquo; &lt;a href=&#34;https://www.bloomberg.com/news/articles/2021-12-06/small-group-is-reaping-most-of-the-gains-on-nfts-study-shows?cmpid=BBD120621_BIZ&amp;amp;utm_medium=email&amp;amp;utm_source=newsletter&amp;amp;utm_term=211206&amp;amp;utm_campaign=bloombergdaily&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;一小群内部人士正在收获 NFT 的大部分收益&lt;/a&gt; &amp;ldquo;。加密货币和现有金融系统之间的接口已经成熟，正好可以被滥用。&lt;/p&gt;
&lt;p&gt;如果 Web3 要成为一个通用的金融系统，或者一个去中心化信任的通用系统，它需要开发与现实世界、其法律系统和运营经济的强大接口。&lt;a href=&#34;https://stratechery.com/2021/constitutiondao-the-need-for-trust-memes-and-reality/?access_token=eyJhbGciOiJSUzI1NiIsImtpZCI6InN0cmF0ZWNoZXJ5LnBhc3Nwb3J0Lm9ubGluZSIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJzdHJhdGVjaGVyeS5wYXNzcG9ydC5vbmxpbmUiLCJlbnQiOnsidXJpIjpbImh0dHBzOi8vc3RyYXRlY2hlcnkuY29tLzIwMjEvY29uc3RpdHV0aW9uZGFvLXRoZS1uZWVkLWZvci10cnVzdC1tZW1lcy1hbmQtcmVhbGl0eS8iXX0sImV4cCI6MTYzOTY2MTE2NCwiaWF0IjoxNjM3MDY5MTY0LCJpc3MiOiJodHRwczovL3N0cmF0ZWNoZXJ5LnBhc3Nwb3J0Lm9ubGluZS9vYXV0aCIsInNjb3BlIjoiYXJ0aWNsZTpyZWFkIGNhdGVnb3J5OnJlYWQiLCJzdWIiOiJqRHF1MmJWU3BwSkp4eUxxcmJQNnUiLCJ1c2UiOiJhY2Nlc3MifQ.Y2H-oz504XqCdoPkrsL6B6ynRXAtKaSEj-VNKATkXufgNXxtenTXhlonmnHTnBohAZmbtD-fTjrIOhSxtwbMyjJn8sBrZyl4OwiJRH_JGWuhaVEXuBMCLtPAAuKPg-j2TAakzbS2-KkMN1rtV7H99RBCe0N_N2gSI0HhwkRaXuoi32YC3HLFZICjGDTnb4qvVDrD_g4E2dsjtPNjlWTVt0QU1xyyuGO5iGrsMU3kkbJieo8Sh7WM9DsN7ob7T13Vag-fUa3sJVPyTHVtJQ_APwIDhHUJjwttVA_u2MFm_V4t5jcT4btJTjp-Dv1K0uNsoIZ-k-ln-gcT4d6K0cPeTQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ConstitutionDAO 的故事&lt;/a&gt;说明了在用加密货币购买的加密资产的自我参照世界和 Web3 经济与实际所有权或非 Web3 资产的效用相联系的运作经济系统之间建立桥梁是多么困难。如果 DAO（去中心化的自治组织）成功地在拍卖会上购买了一份罕见的美国宪法，其成员不会对实际物品有合法的所有权，甚至不会对它可能发生的事情有明确的治理权。它将由启动该项目的人设立的有限责任公司拥有。而当 DAO 未能中标时，&lt;a href=&#34;https://www.theverge.com/2021/11/24/22800995/constitutiondao-refund-progress-steep-gas-fees-cryptocurrency&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;该有限责任公司甚至难以将钱退还给其支持者&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;未能思考并建立与现有法律和商业机制的接口，这与前几代网络形成鲜明对比，后者迅速成为物理世界中一切事物的数字影子 —— 人、物、地点、企业的相互联系，使得在现有经济中创造有经济价值的新服务变得容易。炒作加密货币资产容易赚钱，这似乎分散了开发者和投资者对建立有用的现实世界服务的艰苦工作的注意力。&lt;/p&gt;
&lt;p&gt;这并不是说 Web3 在金融投机之外没有真正的机会。加密货币非常适用于数字资产，可以在一个独立的世界中进行估值和使用，比如电脑游戏或渴望的&lt;a href=&#34;https://www.theinformation.com/articles/a-second-life-for-crypto-and-nfts-in-the-metaverse-another-meta-exec-quits?rc=7em78a&amp;amp;shared=ba5b1dd83daf5a4c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;元宇宙&lt;/a&gt;。&lt;a href=&#34;https://www.cryptoartnet.com/cryptoart-sites/marketplaces-platforms/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在数字艺术市场&lt;/a&gt;和&lt;a href=&#34;https://nbatopshot.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;体育亮点方面&lt;/a&gt;可能会有机会。正如 Sal delle Palme 所说：“加密货币的新应用，如 &lt;a href=&#34;https://www.coindesk.com/business/2021/11/18/investors-offer-opensea-10b-valuation-in-new-round-report/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NFT 市场&lt;/a&gt;、 &lt;a href=&#34;https://en.wikipedia.org/wiki/Decentralized_autonomous_organization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DAO&lt;/a&gt;、&lt;a href=&#34;https://dmarketforces.com/defi-market-size-soared-335-to-85-billion/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DeFi 和 DEX&lt;/a&gt;、&lt;a href=&#34;https://www.cnbc.com/2021/10/21/crypto-exchange-ftx-raises-420-million-at-25-billion.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CeFi&lt;/a&gt;、 &lt;a href=&#34;https://thegivingblock.com/resources/nonprofits-nfts-explained-a-new-vision-for-charitable-fundraising/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;慈善机构&lt;/a&gt;、 &lt;a href=&#34;https://crypto.com/price/categories/gamefi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GameFi&lt;/a&gt;、&lt;a href=&#34;http://news.fintech.io/post/102h75w/decentralized-social-deso-raises-200m-in-funding&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DeSo&lt;/a&gt; 等，正在以惊人的速度被发明、资助（通常由群众资助）、建造和交付。“但我们离一个全新的经济体系的诞生还有一段距离。&lt;/p&gt;
&lt;p&gt;当然，加密货币和 Web3 只是当今投机性过剩的一小部分。当下的创业公司的估值也高得离谱，而且根本不清楚这些估值是否是对正在创造的实际价值的准确衡量。它们很可能只是一个使少数内部人士受益的骗局，就像 2009 年世界经济几乎崩溃之前使许多华尔街人士发财的金融工具一样。因此，正如马特・斯托勒（Matt Stoller）最近写道：&amp;quot;&lt;a href=&#34;https://mattstoller.substack.com/p/cryptocurrencies-a-necessary-scam?token=eyJ1c2VyX2lkIjoxMjU2Mzk2LCJwb3N0X2lkIjo0NTAzNTY1NywiXyI6InNzTUVnIiwiaWF0IjoxNjM5MTU3NDA3LCJleHAiOjE2MzkxNjEwMDcsImlzcyI6InB1Yi0xMTUyNCIsInN1YiI6InBvc3QtcmVhY3Rpb24ifQ.yYlGoiSkciF_NeFFJOTG0-HyAQsT0x_TcZmssBu6rwU&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web3 是一坨屎。问题是，与什么相比？&lt;/a&gt;”目前的经济体系充斥着欺诈，而且还被操纵，有利于内部人！&amp;quot;。像 &lt;a href=&#34;http://celo.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Celo 项目&lt;/a&gt;背后的那些 Web3 梦想家是对的。我们确实需要一个新的经济体系。&lt;/p&gt;
&lt;h2 id=&#34;两种泡沫&#34;&gt;两种泡沫&lt;/h2&gt;
&lt;p&gt;1634 年至 1637 年的&lt;a href=&#34;https://en.wikipedia.org/wiki/Tulip_mania&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;荷兰郁金香狂热&lt;/a&gt;是一个典型的例子，说明一个资产类别的名义金融价值和其内在价值之间存在着巨大的差异。当泡沫破灭后，郁金香又回到了花的状态，虽然美丽，但不再值钱，对繁荣的荷兰经济没有产生持久的影响。此后出现了许多投机性泡沫，其中大多数都消逝在历史的长河中。&lt;/p&gt;
&lt;p&gt;不过，还有一种泡沫，经济学家 Carlota Perez 在她的《&lt;a href=&#34;https://www.amazon.com/Technological-Revolutions-Financial-Capital-Dynamics/dp/1843763311&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;技术革命与金融资本&lt;/strong&gt;&lt;/a&gt;》一书中指出，几乎所有过去的重大工业转型 —— 第一次工业革命；蒸汽动力时代；钢铁、电力和重型机械时代；汽车、石油和大规模生产时代；以及互联网 ——ß 都伴随着一个金融泡沫。&lt;/p&gt;
&lt;p&gt;Perez 指出，在这 50-60 年的创新周期中，每个阶段都有四个子阶段。在第一阶段，是对新技术的基础性投资。这让位于投机的狂热，金融资本在一个开始整合的快速发展的市场中寻求持续的超额回报。投机泡沫破灭后，会有一段更持续的整合和市场修正期（包括对过度市场力量的监管），随后是新技术融入社会的成熟“黄金时代”。最终，技术足够成熟，资本转移到其他地方，资助下一次新生的技术革命，循环往复。&lt;/p&gt;
&lt;p&gt;Perez 分析的一个重要结论是，真正的技术革命必须伴随着大量新基础设施的发展。在第一次工业革命中，这包括运河和公路网络；在第二次工业革命中，包括铁路、港口和邮政服务；在第三次工业革命中，包括电力、水和分配网络；在石油时代，包括州际公路、机场、炼油和分配能力以及酒店和汽车旅馆；在信息时代，包括芯片厂、无处不在的电信，以及数据中心。&lt;/p&gt;
&lt;p&gt;这种基础设施建设的大部分资金是在泡沫阶段提供的。正如 Perez 所说。&lt;/p&gt;
&lt;p&gt;金融泡沫的关键作用也许是促进对新基础设施不可避免的过度投资。这些网络的性质决定了它们无法提供足够的服务来盈利，除非它们达到足够的覆盖率来进行广泛的使用。泡沫为投资者提供了必要的资产膨胀，让他们期待资本收益，即使还没有利润或红利。&lt;/p&gt;
&lt;p&gt;因此，有一个运河泡沫，一个铁路泡沫，当然还有网络泡沫，就在 Perez 完成她的书时，网络泡沫结束了。一场低效投资的狂潮留下了黑暗的光纤，空荡荡的数据中心，以及一大批准备在整合阶段重新使用的人才和技术。&lt;/p&gt;
&lt;p&gt;在 Perez 的叙述中，许多小的技术周期被卷进了一个大的周期。考虑一下现代数字计算的历史。它有几个阶段，每个阶段都由新一代技术主导：大型机、个人电脑、互联网和万维网、智能手机，以及现在，也许还有加密货币和元宇宙。每个阶段都有自己的创新、投机、萧条和成熟的周期。&lt;/p&gt;
&lt;p&gt;那么，我们所说的 Web3 是一个新的次级周期的基础投资期，还是前一个周期的泡沫期？在我看来，判断的方法之一是投资的性质。丰富的金融资本是否像我们在以前的周期中看到的那样，建立了有用的基础设施？&lt;/p&gt;
&lt;p&gt;我不清楚 NFT 是否符合这一要求。不过，毫无疑问，金融的颠覆，就像互联网已经颠覆了媒体和商业一样，将代表当前技术革命周期中的一个重要的下一个阶段。特别是，如果有可能在没有大型集中式资本提供者（可以说是“华尔街”）的信任和权威的情况下有效分配资本，这将是一个基础性的进步。在这方面，我所寻找的是通过加密货币将资本分配给运营经济中的生产性投资的证据，而不是将资本分配给假想的资产。&lt;a href=&#34;http://twitter.com/timoreilly&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;让我知道&lt;/a&gt;你听到的任何好例子。&lt;/p&gt;
&lt;p&gt;为了更清楚地说明我在说什么，让我从加密货币和 Web3 中抽出身来，看看另一场技术革命：绿色能源革命。在那里，很明显的是，泡沫估值已经在为持久的基础设施的发展提供资金。埃隆・马斯克是一位大师，他利用特斯拉股票的超额投机价格（一两年前，特斯拉股票的估值相当于该公司 1500 年的利润！），并将其转化为全国性的电动汽车充电网络、超级工厂和自动驾驶汽车能力，同时催化整个行业追随他进入未来。杰夫・贝佐斯也利用亚马逊的超额估值建立了一个新的即时商务基础设施。而他们两人都在投资商业航天业的基础设施。&lt;/p&gt;
&lt;p&gt;在评估 Web3 的进展情况时，我还会将加密货币用于金融系统的其他功能 —— 购买、汇款等，不仅与传统银行网络进行比较，还与其他新兴技术进行比较。例如，在跨境汇款方面，瑞波币和恒星币是否比银行转账、信用卡或 PayPal 更成功的平台，就像谷歌地图比 Rand McNally 或 Garmin 等第一代 GPS 先驱更好一样？有一些证据表明，&lt;a href=&#34;https://www.pymnts.com/cryptocurrency/2021/new-study-crypto-emerging-as-favored-form-for-cross-border-remittances/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;加密货币正在成为这个市场上的一个有意义的参与者&lt;/a&gt;，尽管&lt;a href=&#34;https://www.bloomberg.com/news/articles/2021-11-16/ripple-wants-to-limit-sec-sway-over-crypto-as-legal-fight-rages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;监管障碍正在减缓其采用&lt;/a&gt;。不过，别忘了汇款，更普遍的支付情况如何？与 &lt;a href=&#34;https://www.meliopayments.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Melio&lt;/a&gt; 这样的非加密货币支付创业公司相比，其增长情况如何？鉴于 Square（现在的 Block）和 Stripe 等公司对加密货币的兴趣，他们完全有能力告诉我们加密货币相对于更传统的支付机制的进展。&lt;/p&gt;
&lt;p&gt;同样，如果 Web3 将成为身份识别或社会媒体的未来，我们需要问自己，有什么证据表明它被采用了 —— 它真的是一个更好的捕鼠器，就像前几代互联网技术所证明的那样？我指责关于这个领域的报道几乎完全缺乏对这种信息的报道。&lt;/p&gt;
&lt;h2 id=&#34;我们在这个周期中处于什么位置&#34;&gt;我们在这个周期中处于什么位置？&lt;/h2&gt;
&lt;p&gt;人们可能会问，Web3 的当前阶段是否更相当于 1995 年或 1999 年，泡沫的早期阶段或其结束？鉴于加密资产（以及一般的科技初创公司）目前的估值，很难争论更早的日期。&lt;/p&gt;
&lt;p&gt;我喜欢提醒人们，我在网络公司破产五年后写了“什么是 Web 2.0？&amp;quot;，其明确的目标是解释为什么有些公司幸存下来，而有些公司却没有。因此，我怀疑要到下一次萧条之后，我们才会真正理解 Web3 包括什么，如果有的话。&lt;/p&gt;
&lt;p&gt;从上一轮泡沫中，除了我在“什么是 Web 2.0&amp;rdquo; 中试图捕捉的技术和商业模式的变化之外，我还可以提供一些务实的观察。&lt;/p&gt;
&lt;p&gt;所有幸存下来的公司都在赚钱 —— 很多的钱。(就亚马逊而言，它是自由现金流，而不是利润，但数字是巨大的，就像它背后的商业和经济洞察力一样）。他们的估值虽然很高，但有可信的未来收益和现金流模型的支持。&lt;/p&gt;
&lt;p&gt;按照今天的标准，它们都不需要筹集巨额资金。(雅虎上市前的投资总额为 &lt;a href=&#34;https://www.crunchbase.com/organization/yahoo/company_financials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;680 万美元&lt;/a&gt;，谷歌为 &lt;a href=&#34;https://www.crunchbase.com/organization/google/company_financials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;3600&lt;/a&gt; 万美元，而亚马逊为 &lt;a href=&#34;https://www.crunchbase.com/organization/amazon/company_financials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1.08 亿美元&lt;/a&gt;）。当你看到公司一次又一次地向投资者寻求资金而没有达到盈利时，它们可能不是真正的企业；它们可能最好被认为是金融工具。&lt;/p&gt;
&lt;p&gt;他们都为改变世界的新服务拥有数百万，然后是数千万，然后是数亿（最后是数十亿）的日活跃用户。&lt;/p&gt;
&lt;p&gt;他们都以数据、基础设施和差异化商业模式的形式建立了独特的、实质性的和持久的资产。&lt;/p&gt;
&lt;p&gt;下一代主导科技领域的公司并不都是后起之秀。苹果和微软轻松地实现了向下一代的过渡，就苹果而言，甚至还引领了它。&lt;/p&gt;
&lt;p&gt;请记住，当时网络泡沫破裂时还很早。谷歌地图还没有被发明，iPhone 和安卓系统也没有被发明。在线支付还处于起步阶段。没有 Twitter 或 Facebook。没有 AWS 和云计算。我们今天所依赖的大部分东西还不存在。&lt;/p&gt;
&lt;p&gt;我怀疑这对加密货币来说也是如此。有很多东西还没有被创造出来。让我们专注于 Web3 愿景中与轻松致富无关的部分，专注于解决信任、身份和去中心化金融方面的困难问题。最重要的是，让我们关注加密货币和人们生活的现实世界之间的接口，正如&lt;a href=&#34;https://www.slowboring.com/p/on-what-matters&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;马修・伊格莱西亚斯（Matthew Yglesias&lt;/a&gt;）在谈到住房不平等时 &lt;a href=&#34;https://www.slowboring.com/p/on-what-matters&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;所说的&lt;/a&gt;那样，“一个社会通过积累长期的资本货物库存而逐渐变得富裕。“如果像 Sal Delle Palme 所说的那样，Web3 预示着一个新经济体系的诞生，那么让我们把它变成一个能增加真正财富的体系，而不仅仅是那些有幸提前进入的人的纸面财富，而是能改变生活的实际商品和服务，让每个人的生活变得更好。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>云端 IDE 是软件工程的未来吗？</title>
      <link>https://cloudnative.to/blog/are-cloud-based-ides-the-future-of-software-engineering/</link>
      <pubDate>Mon, 10 Jan 2022 19:55:44 +0800</pubDate>
      <guid>https://cloudnative.to/blog/are-cloud-based-ides-the-future-of-software-engineering/</guid>
      <description>&lt;p&gt;本文译自 &lt;a href=&#34;https://thenewstack.io/are-cloud-based-ides-the-future-of-software-engineering&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Are Cloud-Based IDEs the Future of Software Engineering&lt;/a&gt;，原文发布于 2022 年 1 月 7 日。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编者按&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文主要对比了云端 IDE 的优缺点，就像云端 Office 一样，云端 IDE 迟早也会变得流行起来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;传统上，&lt;a href=&#34;https://thenewstack.io/category/development/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;软件开发&lt;/a&gt;是（而且在很大程度上仍然是）在个人机器上使用集成开发环境（IDE）工具，如 VSCode、JetBrains、Eclipse 等完成。虽然这种 &amp;ldquo;离线&amp;rdquo; 开发的模式在早期运作得非常好，但人们很快就注意到，这种方法并非完美。&lt;/p&gt;
&lt;p&gt;首先，合作起来很麻烦，因为写好的代码必须上传到网上供进一步审查。这样写出来的代码的可移植性也并不总是有保证，因为有各种各样的操作系统和其他限制条件，需要它来实现最佳的功能。&lt;/p&gt;
&lt;p&gt;正如开发者和技术记者 &lt;a href=&#34;https://char.gd/blog/author/owen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Owen Williams&lt;/a&gt; 去年 &lt;a href=&#34;https://char.gd/blog/2020/github-codespaces-means-your-computer-doesnt-matter-anymore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在他的博客 Charged 上&lt;/a&gt;写道：“在设备之间同步你的文档和照片是微不足道的…… 这样你就可以在任何地方把它们调出来，但开发者工具仍然停留在过去 —— 每台笔记本电脑或 PC 都要单独配置，使你的环境设置得恰到好处。”&lt;/p&gt;
&lt;p&gt;随着大流行期间越来越多的分布式团队和更多的敏捷工作方式，引入能够让开发人员在任何地方保持生产力的工具变得至关重要。这为什么会有 &lt;a href=&#34;https://thenewstack.io/gitpod-open-sources-a-holistic-ide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gitpod&lt;/a&gt;、&lt;a href=&#34;https://thenewstack.io/this-week-in-programming-github-codespaces-portable-dev-environment/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Codespaces&lt;/a&gt;、Replit 等基于云端 IDE 出现。&lt;/p&gt;
&lt;h2 id=&#34;云端-ide-的优点&#34;&gt;云端 IDE 的优点&lt;/h2&gt;
&lt;p&gt;这些新的 IDE 工具具有大量的功能，包括 GitHub 集成，支持多语言的编写和编译，提供了一个整体的环境，以提高开发人员的生产力。&lt;/p&gt;
&lt;p&gt;在他们的其他优势中：&lt;/p&gt;
&lt;h3 id=&#34;使用云端-ide-无需担心配置&#34;&gt;使用云端 IDE 无需担心配置&lt;/h3&gt;
&lt;p&gt;由于开发环境完全在浏览器上运行，因此不再需要梳理安装页面和弄清楚需要安装哪个软件包。&lt;/p&gt;
&lt;h3 id=&#34;硬件的选择并不重要&#34;&gt;硬件的选择并不重要&lt;/h3&gt;
&lt;p&gt;基于云的集成开发环境消除了（好吧，几乎是！）开始进行网络开发的障碍。在任何支持现代网络浏览器都可以运行，你甚至不需要在不同的机器上从头开始重新配置一切。&lt;/p&gt;
&lt;h3 id=&#34;在任何地方工作和协作都很容易&#34;&gt;在任何地方工作和协作都很容易&lt;/h3&gt;
&lt;p&gt;这些工具具有高度可定制的工作空间，可以在团队 / 个人层面上进行优化，它们不仅促进了更好的合作，而且完全消除了“在我的机器上可以运行 &amp;quot; 这种太过普遍的情况。鉴于这些主要的优点，很明显基于云的 IDE 已经获得了发展势头。&lt;/p&gt;
&lt;p&gt;但云端 IDE 也有一些局限性。&lt;/p&gt;
&lt;h2 id=&#34;云端-ide-的缺点&#34;&gt;云端 IDE 的缺点&lt;/h2&gt;
&lt;p&gt;基于云的 IDE 的许多缺点都与扩展问题有关，因为这些工具仍然处于成熟的早期阶段。以下是早期采用者可能会遇到的一些关键问题。&lt;/p&gt;
&lt;h3 id=&#34;性能可能是不平衡的&#34;&gt;性能可能是不平衡的&lt;/h3&gt;
&lt;p&gt;由于云上的资源是由需求不稳定的消费者共享的，因此肯定有机会出现性能不一致的情况，特别是在对网络延迟、容量或整体产品的故障造成问题的情况下，更是如此。&lt;/p&gt;
&lt;h3 id=&#34;故障的来源可能很难识别和解决&#34;&gt;故障的来源可能很难识别和解决&lt;/h3&gt;
&lt;p&gt;当你不知道根本原因时，很难修复一个问题，总的来说，这可能会导致此类产品的早期采用者有一个令人沮丧的体验。&lt;/p&gt;
&lt;h3 id=&#34;大项目可能更适合使用离线-ide&#34;&gt;大项目可能更适合使用离线 IDE&lt;/h3&gt;
&lt;p&gt;到今天为止，已经观察到一些初期问题，用户&lt;a href=&#34;https://github.com/gitpod-io/gitpod/issues/5992&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;抱怨平均负载过高&lt;/a&gt;。对于大型开发项目，所需的数据传输和处理量将是巨大的。虽然它可能不会扼杀基于云的 IDE 的资源，但由于其实用性，在这种情况下，离线替代方案肯定是更佳选择。&lt;/p&gt;
&lt;h3 id=&#34;供应商锁定会限制工具的可用性&#34;&gt;供应商锁定会限制工具的可用性&lt;/h3&gt;
&lt;p&gt;另一个需要考虑的方面是当涉及到基于云端 IDE 时，工具包的可用性。大量的工具可以在本地与 IDE 配对使用。但是，对于基于云端 IDE，开发者被限制在供应商提供的集成选择上，这对于那些需要更广泛工具包的人来说可能是限制性的。&lt;/p&gt;
&lt;h3 id=&#34;云端-ide-需要-wifi&#34;&gt;云端 IDE 需要 WiFi&lt;/h3&gt;
&lt;p&gt;最后一点往往被忽略，基于云的 IDE 在与真正强大的桌面 IDE 相媲美之前还有很长的路要走，这些 IDE 允许降低对 WiFi 等外部因素的依赖性。即使正在实施各种变通办法，其可靠性水平也远远不能与桌面 IDE 提供的离线体验相比。&lt;/p&gt;
&lt;h2 id=&#34;下一代集成开发环境&#34;&gt;下一代集成开发环境&lt;/h2&gt;
&lt;p&gt;虽然基于桌面的集成开发环境仍是非常规范的，并将继续流行，但基于云的集成开发环境正在发展势头正猛。这些工具也在迅速发展，并可能越来越多地与基于桌面的 IDE 一起使用。&lt;/p&gt;
&lt;p&gt;为了类比这一切可能的走向，请考虑微软 Office 的情况。&lt;/p&gt;
&lt;p&gt;笔记本电脑 / 计算机刚问世时，我们只有微软 Office 作为任何形式的合作的默认套件。它的大部分工作都是离线的。但是，随着 Zoho Office 和 Google Workspace 等基于浏览器的协作工具将很大一部分工作带到了网上，我们现在看到它们比 MS Office 更重要的使用情况。&lt;/p&gt;
&lt;p&gt;集成开发环境也会走同样的路。桌面 IDE 仍将被使用（就像现在使用的微软 Office 一样），但基于云的 IDE 将看到一些非常有趣的用例出现，并可能对这些特定用例变得更加重要。&lt;/p&gt;
&lt;p&gt;在写这篇文章时，JetBrains 已经发布了其下一代 IDE——Fleet 的早期预览。由于更加关注分布式和协作式开发以及降低入门门槛，JetBrains 的解决方案承诺 Fleet 不会取代该公司现有的工具，而是旨在增加进一步的选择。&lt;/p&gt;
&lt;p&gt;Gitpod 的社区经理 &lt;a href=&#34;https://www.linkedin.com/in/pnarvas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pauline Narvas&lt;/a&gt; 告诉 The New Stack，她对未来的远程、云、开发环境有可能改善开发者的日常生活感到非常兴奋。&lt;/p&gt;
&lt;p&gt;她说：“例如，有了标准化的开发者环境，我们可以轻松地加入新的工程师，你可以审查同事的代码，提出 Pull request，甚至为开源做出贡献，“她补充说，“不再有’它在我的机器上工作’的痛苦，也不再有因为依赖关系不工作而破坏预览环境。&lt;/p&gt;
&lt;p&gt;“开发人员甚至不需要一台高规格的机器也能开始工作，“Narvas 说。“只要有一个可以联网的浏览器你就可以在任何地方编码！&amp;quot;。这真的是软件工程的未来，我迫不及待地想看看五年后的景象。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>疫情期间欧洲 IT 民工招聘趋势报告解读，DevOps、AI 和平台工程师最高年薪 9 万欧</title>
      <link>https://cloudnative.to/blog/europoe-it-hiring-report-2021/</link>
      <pubDate>Fri, 20 Aug 2021 10:05:42 +0800</pubDate>
      <guid>https://cloudnative.to/blog/europoe-it-hiring-report-2021/</guid>
      <description>&lt;p&gt;本文译自&lt;a href=&#34;https://thechief.io/c/editorial/2021-european-tech-hiring-trends/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021 European Tech Hiring Trends&lt;/a&gt;，作者&lt;a href=&#34;https://thechief.io/c/editorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Chief I/O&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;译者评论&#34;&gt;译者评论&lt;/h2&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-官方钦定码农属于新生代农民工如今不再是程序员的调侃了&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;官方钦定：码农属于新生代农民工如今不再是程序员的调侃了&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhy8vkj60hj09ijsq02_hu6894019530562681599.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhy8vkj60hj09ijsq02_hu18036861828777937935.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhy8vkj60hj09ijsq02_hu5054800221056414327.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhy8vkj60hj09ijsq02_hu6894019530562681599.webp&#34;
               width=&#34;631&#34;
               height=&#34;342&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      官方钦定：码农属于新生代农民工如今不再是程序员的调侃了
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最近在社区里看到很多人在讨论国家开始不给大型互联网企业减税，互联网公司股价普跌，大部分距离年内最高点腰斩，个人所得税成为工薪税，程序员被划归为”新生代农名工“，”贫贱不能移“等话题。让我们一起来看看欧洲的 IT 招聘趋势还有薪资水平，是否国外的月亮就是圆呢？&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-昨天在社区群里传的一张北京市运维工程师薪资水平&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;昨天在社区群里传的一张「北京市运维工程师薪资水平」&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lkeyaqj610q0u0mzs02_hu7597956787024019407.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lkeyaqj610q0u0mzs02_hu9073622458746689052.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lkeyaqj610q0u0mzs02_hu16906134680778585199.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lkeyaqj610q0u0mzs02_hu7597956787024019407.webp&#34;
               width=&#34;760&#34;
               height=&#34;621&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      昨天在社区群里传的一张「北京市运维工程师薪资水平」
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;报告解读&#34;&gt;报告解读&lt;/h2&gt;
&lt;p&gt;尽管新冠疫情正在逐渐消退，但其影响仍将持续一段时间。本文衡量了疫情对欧洲科技企业招聘的影响，展露了欧洲科技招聘的新趋势。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;国家的经济规模不断扩大&lt;/li&gt;
&lt;li&gt;欧洲国家的失业率保持稳定&lt;/li&gt;
&lt;li&gt;招聘活动增加&lt;/li&gt;
&lt;li&gt;软件开发人员、程序员的需求量更大&lt;/li&gt;
&lt;li&gt;雇主寻求全面发展的技术人才&lt;/li&gt;
&lt;li&gt;雇主要求软技能作为主要技能的一部分&lt;/li&gt;
&lt;li&gt;39% 的招聘信息寻求具有 0-2 年经验的专业人士&lt;/li&gt;
&lt;li&gt;薪资范围从 36000 到 90000 欧元&lt;/li&gt;
&lt;li&gt;德国和法国在科技人员招聘方面领先&lt;/li&gt;
&lt;li&gt;信息和通信业、制造业引领科技招聘&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在所有行业中，2020 年是一个促进招聘的年份，迫使招聘团队修改和改进他们的人才招聘模式，以满足对技术人才不断增长的需求，特别是在科技行业。与许多其他经济体一样，欧洲经济经历了疫情的冲击，并正在迅速从其影响中恢复。&lt;/p&gt;
&lt;p&gt;利用&lt;a href=&#34;https://www.burning-glass.com/?ref=thechiefio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Burning Glass&lt;/a&gt;汇总的雇主职位发布数据，CompTIA 开发了&lt;a href=&#34;https://comptiacdn.azureedge.net/webcontent/docs/default-source/research-reports/comptia-european-tech-hiring-trends---q2-2021-release.pdf?sfvrsn=c441f76b_2?ref=thechiefio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;欧洲科技企业招聘趋势&lt;/a&gt;，涵盖了 2020 年第一季度欧洲国家的科技招聘活动。该报告调查了十个欧洲国家。比利时、荷兰、捷克、波兰、法国、葡萄牙、德国、罗马尼亚、意大利和西班牙，将 2021 年第一季度的招聘活动与 2020 年进行比较，以衡量科技行业从 2020 年的衰退中恢复的程度。&lt;/p&gt;
&lt;p&gt;本文重述了这份报告，并强调了关键的发现，以帮助雇主、专业人士和科技界利益相关者了解欧洲科技就业市场的招聘趋势。&lt;/p&gt;
&lt;h2 id=&#34;国家的经济规模不断扩大&#34;&gt;国家的经济规模不断扩大&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lipq9aj60b40cvq3f02_hu13171273007519319572.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lipq9aj60b40cvq3f02_hu10030725441251962494.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lipq9aj60b40cvq3f02_hu10810682109542539782.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lipq9aj60b40cvq3f02_hu13171273007519319572.webp&#34;
               width=&#34;400&#34;
               height=&#34;463&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图片来源：https://comptiacdn.azureedge.net/webcontent/docs/default-source/research-reports/comptia-european-tech-hiring-trends&amp;mdash;q2-2021-release.pdf&lt;/p&gt;
&lt;p&gt;众所周知，新冠疫情在 2020 年对全球经济产生了破坏性影响。随着欧洲各国封锁的缓解，经济开始逐渐回升，商业活动重新活跃起来。预计西班牙的经济增长将达到 6.4%，为 11980 亿；罗马尼亚为 6.0%，为 2370 亿；法国为 5.8%，为 24090 亿；意大利和捷克分别为 4.2%，为 17270 亿和 2260 亿。其他预测增长缓慢的国家包括比利时（4.0%，4750 亿）、葡萄牙（3.9%，2110 亿）、德国（3.6%，35420 亿）、荷兰和波兰预测各 3.5% 的经济增长。&lt;/p&gt;
&lt;h2 id=&#34;欧洲国家的失业率保持稳定&#34;&gt;欧洲国家的失业率保持稳定&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lfrhmaj60bz0cldgb02_hu11222038602145244303.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lfrhmaj60bz0cldgb02_hu15030899331173630344.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lfrhmaj60bz0cldgb02_hu4013615036330448291.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lfrhmaj60bz0cldgb02_hu11222038602145244303.webp&#34;
               width=&#34;431&#34;
               height=&#34;453&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图片来源：https://comptiacdn.azureedge.net/webcontent/docs/default-source/research-reports/comptia-european-tech-hiring-trends&amp;mdash;q2-2021-release.pdf&lt;/p&gt;
&lt;p&gt;与美国等其他国家相比，欧洲国家的失业率在新冠疫情的高峰期保持相对稳定，只有西班牙在 2020 年的失业率超过 15%。&lt;/p&gt;
&lt;p&gt;然而，尽管失业率稳定，经济活动的放缓导致整个欧洲国家的招聘活动放缓。&lt;/p&gt;
&lt;h2 id=&#34;招聘活动的增加&#34;&gt;招聘活动的增加&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgf2mqj60bk0bv0t102_hu72275218071841917.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgf2mqj60bk0bv0t102_hu4293800567444465183.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgf2mqj60bk0bv0t102_hu10014966501609953120.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgf2mqj60bk0bv0t102_hu72275218071841917.webp&#34;
               width=&#34;416&#34;
               height=&#34;427&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在从疫情和招聘活动放缓的影响中恢复，2021 年第一季度的招聘活动比 2020 年第四季度恢复了 9%，比 2020 年第三季度增加了 40%。2021 年第一季度，技术职位的发布经历了一个新高，超过 90 万个职位发布，而 2020 年第一季度为 60 万个，2020 年第二季度约为 40 万个，2020 年第三季度和第四季度分别超过 60 万个和约 80 万个。&lt;/p&gt;
&lt;h2 id=&#34;软件开发人员程序员的需求量更大&#34;&gt;软件开发人员、程序员的需求量更大&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ljnvhoj60c30bx75202_hu9229818613115261736.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ljnvhoj60c30bx75202_hu13818261156339593823.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ljnvhoj60c30bx75202_hu6078203668091671915.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ljnvhoj60c30bx75202_hu9229818613115261736.webp&#34;
               width=&#34;435&#34;
               height=&#34;429&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在接受调查的十个欧洲国家中，软件开发人员、系统分析师和网络安全、系统管理员、网络开发人员、IT 专家、数据库、网络和应用程序员是招聘活动最多的技术职位。在 2021 年第一季度，有 249,017 个软件开发人员的招聘信息，231,464 个系统分析师和网络安全的招聘信息，以及超过 84,000 个系统管理员的招聘信息。进一步证实了技术的相互关联性，其他职业，如 IT 支持专家和技术员，IT 经理和首席信息官，应用程序员，数据库和网络人员的需求也很大。&lt;/p&gt;
&lt;h2 id=&#34;雇主寻求全面发展的技术人才&#34;&gt;雇主寻求全面发展的技术人才&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lklpyrj60bt0akjrq02_hu10514274816231544363.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lklpyrj60bt0akjrq02_hu16640343613366428940.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lklpyrj60bt0akjrq02_hu10942804019401110154.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lklpyrj60bt0akjrq02_hu10514274816231544363.webp&#34;
               width=&#34;425&#34;
               height=&#34;380&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;随着技术的不断扩展和新范围、工具、硬件和方法的出现，对工作要求的分析表明，雇主对了解广泛技术技能的候选人更感兴趣。以软件开发人员的职位为例，一个典型的雇主更喜欢具有多种编程语言经验的候选人，具有网络安全知识，至少有一个云平台，并熟悉&lt;a href=&#34;https://thechief.io/c/editorial/demystifying-the-devops-career/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DevOps 流程&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;办公室/电子表格、编程/面向对象的编程、商业IT系统、SQL、数据库和统一建模语言是技术职位招聘中最受欢迎的一些技术技能。&lt;/p&gt;
&lt;h2 id=&#34;雇主要求软技能作为主要技能的一部分&#34;&gt;雇主要求软技能作为主要技能的一部分&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgvkm4j60b20aj74l02_hu11690479164936473795.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgvkm4j60b20aj74l02_hu4867172200151356322.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgvkm4j60b20aj74l02_hu4971278800040857425.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lgvkm4j60b20aj74l02_hu11690479164936473795.webp&#34;
               width=&#34;398&#34;
               height=&#34;379&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;商业和软技能在技术岗位上不再被视为次要。招聘信息显示了这一点，技术雇主认为软技能，如批判性思维、团队合作、解决问题、项目和时间管理，与技术技能同等重要。&lt;/p&gt;
&lt;h2 id=&#34;39-的招聘信息寻求具有-0-2-年经验的专业人士&#34;&gt;39% 的招聘信息寻求具有 0-2 年经验的专业人士&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhbac6j60dr07nglu02_hu16084216846526988025.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhbac6j60dr07nglu02_hu11907186145347043083.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhbac6j60dr07nglu02_hu7257271127231279407.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lhbac6j60dr07nglu02_hu16084216846526988025.webp&#34;
               width=&#34;495&#34;
               height=&#34;275&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;虽然现在大多数科技雇主根据专业知识、技能和业绩进行招聘，但在科技岗位招聘中，工作年限仍然是一个决定性的标准。在 2021 年第一季度，雇主寻求更多具有 0-2 年经验的初级专业人士。2021 年第一季度，14% 的科技职位招聘要求有 3-10 年的经验，11% 要求有 11 年以上的经验，而 36% 没有明确要求的经验年限。&lt;/p&gt;
&lt;h2 id=&#34;薪资范围从-36000-到-90000-欧元&#34;&gt;薪资范围从 36000 到 90000 欧元&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ll8kkij60ep07ejrq02_hu6348046231179727971.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ll8kkij60ep07ejrq02_hu10856053280727172060.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ll8kkij60ep07ejrq02_hu3692032810399661344.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7ll8kkij60ep07ejrq02_hu6348046231179727971.webp&#34;
               width=&#34;529&#34;
               height=&#34;266&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;雇主提供的工资在 36,000 左右，主要是针对初级职位的招聘信息，不包括其他副业收入。随着专业知识水平、工作年限和工作地点的不同，技术类职位的&lt;a href=&#34;https://thechief.io/c/editorial/salary-trends-for-devops-and-cloud-native-professionals/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基本工资&lt;/a&gt;最高可达 9 万，不包括其他补偿和奖金。与疫情之前的时期相比，&lt;strong&gt;一些技术角色，如&lt;a href=&#34;https://thechief.io/c/news/devops-pros-salary-rise-despite-effect-pandemic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DevOps&lt;/a&gt;、平台工程师和 AI 工程师的工资在疫情之后也有所增加。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;德国和法国在科技人员招聘方面领先&#34;&gt;德国和法国在科技人员招聘方面领先&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lj87wyj60dc07djri02_hu7079153863869224201.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lj87wyj60dc07djri02_hu14449213756149301700.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lj87wyj60dc07djri02_hu4095043457491422038.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lj87wyj60dc07djri02_hu7079153863869224201.webp&#34;
               width=&#34;480&#34;
               height=&#34;265&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;尽管比 2020 年第四季度减少了 4%，但德国在 2021 年第一季度以 421,109 名科技人员的招聘数在所有被调查的十个国家中处于领先地位。法国紧随其后，与 2020 年第四季度相比，增加了 16%，即 121,863 人，而波兰则以 105,921 人的科技人员招聘数紧随其后，与 2020 年第四季度相比，增加了 37%。意大利和荷兰在 2021 年第一季度也分别经历了 50%（60,082 人）和 43%（53,313 人）的技术招聘激增。&lt;/p&gt;
&lt;h2 id=&#34;信息和通信业制造业引领科技招聘&#34;&gt;信息和通信业、制造业引领科技招聘&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lg1qukj60ce066wen02_hu11920760691622298121.webp 400w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lg1qukj60ce066wen02_hu1570241137311633898.webp 760w,
               /blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lg1qukj60ce066wen02_hu1374896061588928700.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/europoe-it-hiring-report-2021/008i3skNly1gtn7lg1qukj60ce066wen02_hu11920760691622298121.webp&#34;
               width=&#34;446&#34;
               height=&#34;222&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;随着各组织转向技术，以缓解疫情的影响并增加业务增长，信息和通信行业在招聘技术职位方面处于领先地位。其他行业，如制造业，物流和支持服务，专业、科学和技术服务，以及金融和工业行业也是招聘技术职位的主要行业之一。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>印度 API 管理公司 Postman D 轮融资 2.25 亿美元，估值高达 56 亿美元</title>
      <link>https://cloudnative.to/blog/postman-announces-series-d/</link>
      <pubDate>Wed, 18 Aug 2021 20:05:42 +0800</pubDate>
      <guid>https://cloudnative.to/blog/postman-announces-series-d/</guid>
      <description>&lt;p&gt;本文译自 &lt;a href=&#34;https://blog.postman.com/postman-announces-series-d/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman’s Series D Funding and the API-First World&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;译者评论&#34;&gt;译者评论&lt;/h2&gt;
&lt;p&gt;没错，这正是那个被人所熟知，在程序员中广为流传的 Postman，五年前我曾在被一个同事推荐 Chrome 中安装过一个插件，专门用来调试 API 的，这个插件就是 Postman。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-postman-chrome-app&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Postman Chrome App&#34; srcset=&#34;
               /blog/postman-announces-series-d/008i3skNly1gtlb0gv79zj61rm0mkdjq02_hu2958416608911001505.webp 400w,
               /blog/postman-announces-series-d/008i3skNly1gtlb0gv79zj61rm0mkdjq02_hu13516516763117362176.webp 760w,
               /blog/postman-announces-series-d/008i3skNly1gtlb0gv79zj61rm0mkdjq02_hu1886831654445357489.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/postman-announces-series-d/008i3skNly1gtlb0gv79zj61rm0mkdjq02_hu2958416608911001505.webp&#34;
               width=&#34;760&#34;
               height=&#34;270&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Postman Chrome App
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;p&gt;我很高兴地宣布，今天对 Postman 来说是一个巨大的里程碑。我们已经完成了 D 轮 2.25 亿美元的融资，目前公司的估值为 56 亿美元。本轮融资由 Insight Partners 领投，并有三个新的投资者加入 ——&lt;a href=&#34;https://www.coatue.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Coatue&lt;/a&gt;、&lt;a href=&#34;https://www.battery.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Battery Ventures&lt;/a&gt; 和 &lt;a href=&#34;https://www.bondcap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BOND&lt;/a&gt;。我们也得到了现有 Postman 投资者 &lt;a href=&#34;https://www.crv.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRV&lt;/a&gt; 和 &lt;a href=&#34;https://nexusvp.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nexus Venture Partners&lt;/a&gt; 的热情参与。此外，DoorDash 产品负责人 Gokul Rajaram 和 Freshworks 创始人 Girish Mathrubootham 作为个人投资者加入。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;API 已经迅速成为全球每个行业、每个国家的开发者使用的软件的基本构件，Postman 已经牢固地确立了自己作为开发者首选平台的地位。Postman 有机会成为企业构建、交付产品和无缝启用整个生态系统伙伴关系的关键支柱。他们持续、快速的扩张和强大的管理团队表明，Postman 的未来几乎有无限的可能性。——Insight Partners 总经理 Jeff Horing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一年多以前，Postman 完成了 C 轮投资，在那篇公告博文中，我描述了“Postman 飞轮”，它有助于指导我们决定如何使 Postman 平台对我们的客户越来越强大和有效。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-img&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;img&#34; srcset=&#34;
               /blog/postman-announces-series-d/008i3skNly1gtlavb1amyj30t20jw765_hu17371764293752813601.webp 400w,
               /blog/postman-announces-series-d/008i3skNly1gtlavb1amyj30t20jw765_hu7984207665353750734.webp 760w,
               /blog/postman-announces-series-d/008i3skNly1gtlavb1amyj30t20jw765_hu4344893565882021093.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/postman-announces-series-d/008i3skNly1gtlavb1amyj30t20jw765_hu17371764293752813601.webp&#34;
               width=&#34;760&#34;
               height=&#34;521&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      img
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Postman 飞轮&lt;/p&gt;
&lt;p&gt;今天，Postman 飞轮的运行速度比以往任何时候都快，在一些关键领域有强劲的势头。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开发者&lt;/strong&gt; 。现在，&lt;a href=&#34;https://www.postman.com/api-platform/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman API 平台&lt;/a&gt;上有 1700 万名开发者，Postman 应用程序迄今已被下载超过 6000 万次。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;团队协作&lt;/strong&gt;。最近宣布在 Postman 中为小型团队提供&lt;a href=&#34;https://blog.postman.com/announcing-unlimited-collaboration-for-small-teams/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;无限制的协作&lt;/a&gt;之后，我们今天在该平台上看到了创纪录的协作活动量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;企业客户&lt;/strong&gt;。我们继续增加的客户，如 Salesforce、Stripe、Kroger、Cisco、PayPal，以及更多。你可以在我们的&lt;a href=&#34;https://www.postman.com/case-studies/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;案例研究&lt;/a&gt;页面阅读更多内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公共 API 网络&lt;/strong&gt;。Postman 公共 API 网络最近成为&lt;a href=&#34;https://blog.postman.com/postman-public-api-network-is-now-the-worlds-largest-public-api-hub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;世界上最大的公共 API 中心&lt;/a&gt;，它已经迅速发展到 2 万多个&lt;a href=&#34;https://blog.postman.com/public-workspaces-why-we-created-them-what-you-can-do/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;公共工作空间&lt;/a&gt;（来自&lt;a href=&#34;https://www.postman.com/mbdevelopers/workspace/mercedes-benz/overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;梅赛德斯 - 奔驰&lt;/a&gt;、 &lt;a href=&#34;https://blog.postman.com/how-to-explore-notion-api-postman-public-workspace/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Notion&lt;/a&gt;、 &lt;a href=&#34;https://www.postman.com/microsoftgraph/workspace/microsoft-graph/overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微软 Graph 等&lt;/a&gt;顶级组织），使世界各地的开发者、团队和公司能够以前所未有的规模在 API 上合作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;api-优先的世界&#34;&gt;API 优先的世界&lt;/h2&gt;
&lt;p&gt;伴随着 Postman 和&lt;a href=&#34;https://blog.postman.com/api-growth-rate/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;整个 API 行业&lt;/a&gt;的这一势头，我们也观察到了与这一切直接相关的更大转变。世界正日益成为 API 优先。&lt;/p&gt;
&lt;p&gt;现在，关于“API-first“到底意味着什么，这些天在整个行业内有相当多的讨论，所以我们决定选择一个非常规的媒介来解释它。Postman 公司的人热爱阅读，也是科幻小说和图画小数的粉丝，所以我们决定创作一部图画小说来描述 API-first 的世界。&lt;/p&gt;
&lt;p&gt;Shruthi Venkatesh 是 Postman 的一名视觉设计师，她在一本全新的图画小说中用插图把这个想法变成了现实，我非常兴奋地与你们分享这本书：&lt;a href=&#34;https://api-first-world.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;“API 优先的世界”&lt;/a&gt;，请阅读一下。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-img&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;img&#34; srcset=&#34;
               /blog/postman-announces-series-d/008i3skNly1gtlavbgm6fj61hb0u0jw802_hu2531787652645193593.webp 400w,
               /blog/postman-announces-series-d/008i3skNly1gtlavbgm6fj61hb0u0jw802_hu5161567175542032838.webp 760w,
               /blog/postman-announces-series-d/008i3skNly1gtlavbgm6fj61hb0u0jw802_hu3328158064329254185.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/postman-announces-series-d/008i3skNly1gtlavbgm6fj61hb0u0jw802_hu2531787652645193593.webp&#34;
               width=&#34;760&#34;
               height=&#34;428&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      img
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我们新的图画小说&lt;a href=&#34;https://api-first-world.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《API 优先的世界》&lt;/a&gt;中的一幅插图&lt;/p&gt;
&lt;p&gt;现在你已经通过我们的新图画小说看到了这个 API 优先的世界的愿景，你可能会问：Postman 正在做什么来实现这个愿景？为了达到这个目标，Postman 一直坚持不懈地关注并将在未来通过 D 轮投资继续关注 Postman 迄今为止成功的两个基本要素：产品和社区。以下是最近在这些领域中的一些活动的回顾。&lt;/p&gt;
&lt;h2 id=&#34;postman-的产品在去年发生了什么&#34;&gt;Postman 的产品在去年发生了什么？&lt;/h2&gt;
&lt;p&gt;API 优先的世界需要一个 API 平台，使更多的人能够用 API 做更多的事情，而 Postman 继续以快速的速度发布新的功能，以实现这一目标。仅举几个例子。&lt;a href=&#34;https://blog.postman.com/announcing-postman-for-the-web-now-in-open-beta/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;网络上的 Postman&lt;/a&gt;、 &lt;a href=&#34;https://blog.postman.com/public-workspaces-why-we-created-them-what-you-can-do/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;公共工作空间&lt;/a&gt;、&lt;a href=&#34;https://blog.postman.com/postman-api-network-intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;私人 API 网络&lt;/a&gt;、&lt;a href=&#34;https://blog.postman.com/postman-public-api-network-is-now-the-worlds-largest-public-api-hub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;公共 API 网络&lt;/a&gt;、 &lt;a href=&#34;https://blog.postman.com/security-warnings-during-api-validation/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;API 安全验证&lt;/a&gt;、 &lt;a href=&#34;https://blog.postman.com/real-time-validation-of-openapi-definitions-in-postman-api-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenAPI 验证&lt;/a&gt;、对 &lt;a href=&#34;https://blog.postman.com/postman-supports-websocket-apis/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WebSockets&lt;/a&gt; 和 &lt;a href=&#34;https://blog.postman.com/making-http-soap-requests-with-postman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SOAP&lt;/a&gt; 等协议的支持、用户组和 &lt;a href=&#34;https://blog.postman.com/introducing-user-management-in-postman-with-scim/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SCIM 整合&lt;/a&gt;，以及其他数百项改进。&lt;/p&gt;
&lt;p&gt;我们今年还完成了 &lt;a href=&#34;https://blog.postman.com/postmans-new-soc-2-type-2-report-how-and-why-we-did-it/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SOC 2 Type 2&lt;/a&gt; 安全认证的里程碑，同时还与 &lt;a href=&#34;https://blog.postman.com/postman-datadog-technology-partner-more-integration-features/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Datadog&lt;/a&gt;、&lt;a href=&#34;https://blog.postman.com/monitor-apis-with-postman-and-new-relic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;New Relic&lt;/a&gt;、&lt;a href=&#34;https://blog.postman.com/postman-opsgenie-integration/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Opsgenie&lt;/a&gt; 和 &lt;a href=&#34;https://blog.postman.com/aws-api-gateway-integration-postman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS API Gateway&lt;/a&gt; 建立了新的伙伴关系，以帮助我们的客户解决许多现代挑战。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Postman 有能力解决全球开发者面临的挑战，他们需要比以往更快地构建软件，这给 Coatue 留下了深刻印象。我们还喜欢 Postman 为管理团队（无论规模大小）提供 API 环境的适当可见性，并确保日益精简的团队能够有效地维护 API，我们很自豪地支持 Postman 的未来计划，并与他们合作，因为他们执行的愿景是为迅速扩大的开发人员队伍提供服务，并进一步扩展到新的角色和领域，计划在未来实现令人兴奋的增长。——Coatue 普通合伙人 David Schneider&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;postman-社区去年发生了什么&#34;&gt;Postman 社区去年发生了什么？&lt;/h2&gt;
&lt;p&gt;Postman 社区正在引领建设 API 优先的世界，而我们正在以各种方式为社区提供支持。以下是今年的几个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们转向了全虚拟的教育和社区活动。
&lt;ul&gt;
&lt;li&gt;2021 年 2 月，我们举办了世界上最大的 API 会议 ——&lt;a href=&#34;https://www.postman.com/postman-galaxy/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman Galaxy&lt;/a&gt;，有超过 26000 人注册。&lt;/li&gt;
&lt;li&gt;我们推出了 &lt;a href=&#34;https://www.postman.com/events/breaking-changes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Breaking Changes&lt;/a&gt;，这是一个全新的每周在线谈话节目，由 Postman 首席布道师 Kin Lane 主持来自整个 API 领域的明星嘉宾，讨论、辩论和解决围绕 API 和 API 优先的最新话题。&lt;/li&gt;
&lt;li&gt;我们推出了 &lt;a href=&#34;https://www.postman.com/events/postman-space-camp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman Space Camp&lt;/a&gt;，这是一系列针对每种用户类型的在线教育培训。&lt;/li&gt;
&lt;li&gt;我们推出了 &lt;a href=&#34;https://blog.postman.com/the-exploratory-postmans-new-educational-video-series/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Exploratory&lt;/a&gt;，这是一个新的教育视频系列，包含了人们强烈要求的 Postman 操作内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我们正式确定了 &lt;a href=&#34;https://blog.postman.com/announcing-postman-open-technologies/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman 开放技术项目&lt;/a&gt;，以支持和引导围绕 API 规范的对话，这有助于实现 API 优先的世界。
&lt;ul&gt;
&lt;li&gt;我们&lt;a href=&#34;https://blog.postman.com/postman-joins-openapi-initiative/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;加入了 OpenAPI 倡议&lt;/a&gt;，参与了 OpenAPI 规范的教育、营销和发展。&lt;/li&gt;
&lt;li&gt;我们&lt;a href=&#34;https://blog.postman.com/asyncapi-joins-forces-with-postman-future-of-apis/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;与 AsyncAPI 联合起来&lt;/a&gt;，帮助定义 API 的未来，并加速将 API 优先原则应用于异步 API。AsyncAPI 规范也成为 Linux 基金会的一个正式组成部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Postman 的&lt;a href=&#34;https://blog.postman.com/how-postman-is-building-education-first-student-programs-that-empower/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;学生项目&lt;/a&gt;继续扩大。
&lt;ul&gt;
&lt;li&gt;本月早些时候，我们举行了首届 &lt;a href=&#34;https://blog.postman.com/announcing-the-first-postman-student-summit/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman 学生峰会&lt;/a&gt;，这是世界上最大的以学生为中心的 API 活动，有超过 6000 人报名参加。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我们推出了 &lt;a href=&#34;https://blog.postman.com/introducing-postman-for-nonprofits/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman for Nonprofits&lt;/a&gt;，这是一个以 Postman 计划折扣支持社区内非营利组织的计划，以帮助它们完成任务。该计划的参与者包括 &lt;a href=&#34;https://mhcd.org/get-to-know-us/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;丹佛心理健康中心&lt;/a&gt;、&lt;a href=&#34;https://worldmarrowdonorday.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;世界骨髓捐献者日&lt;/a&gt;、 &lt;a href=&#34;https://givingcompass.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Giving Compass&lt;/a&gt; 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Postman，整个团队对 API 优先的世界有一个大的、广泛的、热情的愿景，我们觉得我们仍然处于执行这一愿景的早期阶段。我们继续寻求招聘那些希望长期建设并符合 Postman 文化价值观的人，这些价值观是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带着好奇心创作&lt;/li&gt;
&lt;li&gt;赢得信任&lt;/li&gt;
&lt;li&gt;拥抱制约因素&lt;/li&gt;
&lt;li&gt;共赢&lt;/li&gt;
&lt;li&gt;拥有并交付&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果这些价值观听起来像你的价值观，并且你想加入我们，帮助创造 API 第一的世界，请看一下 &lt;a href=&#34;https://www.postman.com/company/careers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postman 的职业页面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;最后但并非最不重要的是，在这个重要的日子里，我想亲自感谢我们的客户、我们的社区、我们的投资者，以及在 Postman 团队中工作的每个人。很荣幸能与你们一起走过这段旅程，而且未来看起来比以往任何时候都更加光明。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>从 Gartner 的 2021 年云安全炒作周期报告中得到的启示</title>
      <link>https://cloudnative.to/blog/takeaways-from-gartners-2021-hype-cycle-for-cloud-security-report/</link>
      <pubDate>Sun, 15 Aug 2021 17:05:42 +0800</pubDate>
      <guid>https://cloudnative.to/blog/takeaways-from-gartners-2021-hype-cycle-for-cloud-security-report/</guid>
      <description>&lt;p&gt;本文译自 &lt;a href=&#34;https://venturebeat.com/2021/08/12/takeaways-from-gartners-2021-hype-cycle-for-cloud-security-report/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Takeaways from Gartner’s 2021 Hype Cycle for Cloud Security report&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Gartner 在该集团的最新预测中称，2021 年全球公有云服务将增长 26.2%，见 &lt;a href=&#34;https://www.gartner.com/account/signin?method=initialize&amp;amp;TARGET=http%3A%2F%2Fwww.gartner.com%2Fdocument%2F4002952%3Fref%3DsolrAll%26amp%3Brefval%3D296725769&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Forecast: Public Cloud Services, Worldwide, 2019-2025, 2Q21 Update&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2020 年，云计算使 IT 路线图和计划不断向前推进，同时支持不断增长的虚拟劳动力和破纪录的数字转型步伐。麦肯锡对全球高管的调查发现，数字化转型的步伐在 2020 年加快了 7 年。&lt;/p&gt;
&lt;p&gt;此外，61% 的企业将云计算作为其数字化转型工作的一部分，其收入增长了 25% 或更多。云基础设施还使 IT 部门能够满足新的应用程序和系统的紧迫的上市时间表。然而，当云基础设施为应对不可预测的工作负载而扩大和缩小规模时，IT 怀疑论者变成了信徒，而之前的预测数据又无法依赖。&lt;/p&gt;
&lt;p&gt;Gartner 引述了疫情之后企业对云计算的加速采用，预计这将推动五年的复合年增长率（CAGR）达到 21.5%。因此，全球公有云服务预计将从 2021 年的 3877 亿美元增长到 2025 年的 8055 亿美元。到 2023 年，所有企业工作负载的 70% 将部署在云基础设施和平台服务中，而 2020 年为 40%。&lt;/p&gt;
&lt;h2 id=&#34;复杂度等同于风险&#34;&gt;复杂度等同于风险&lt;/h2&gt;
&lt;p&gt;企业的&lt;a href=&#34;https://venturebeat.com/2021/08/11/github-brings-cloud-based-codespaces-development-environment-to-the-enterprise/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云计算复杂性&lt;/a&gt;越大，网络安全风险也越大。云在企业中的主导地位带来了更复杂的网络安全风险和更多的潜在危险，需要相应的更高级别的安全技术。企业的云计算基础设施越复杂，其安全挑战就越大。Gartner 预测，到 2025 年，超过 99% 的云计算漏洞将被追溯到终端用户可预防的错误配置。Gartner 的最新云安全报告反映了企业在所有业务线和基础设施层面采用云优先战略的进展。&lt;/p&gt;
&lt;p&gt;最新的 Hype Cycle 介绍了 29 项技术，比去年的 33 项有所减少。Gartner 已经删除了云安全评估、云测试工具和服务、灾难恢复即服务（DRaaS）、以文件为中心的身份证明、OAuth 2.0 和 OpenID Connect。多云管理服务（MCMS）是今年炒作周期的一个新类别，以前被称为云服务代理（CSB）。Gartner 将 CSB 定义为一种 IT 角色和商业活动，其中公司或内部实体为一个或多个（公有或私有）云服务增加价值。&lt;/p&gt;
&lt;h2 id=&#34;主要启示&#34;&gt;主要启示&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;云原生应用保护平台（CNAPP）是今年炒作周期的新产品。CNAPP 通过整合多种云原生工具和数据源，包括基础设施即代码（IaC）扫描，帮助保护云原生应用。随着几乎所有的企业都在向多云战略迁移，公有云的部署速度继续加快，并将最终超过私有数据中心的工作负载。Gartner 创建新类别的逻辑是跟踪多云部署的主导地位如何迫使企业结合智能自动化，包括云安全态势管理（CSPM）和云工作负载保护平台（CWPP），以保护其 IaaS 部署的应用程序。&lt;/li&gt;
&lt;li&gt;安全服务边缘（SSE）也是今年炒作周期的新内容。虚拟劳动力、数字优先的销售、服务和客户体验正在推动安全服务边缘（SSE）技术的采用。事实证明，SSE 技术和解决方案能够有效降低保护端点的复杂性，同时在企业范围内提高云服务的安全性。SSE 通过访问控制、威胁保护、数据安全、安全监控和基于网络和 API 的集成执行可接受的使用控制来提供改进的端点安全，我们看到 SSE 正在快速增长，并作为基于云的服务提供，少数供应商也提供企业内部和基于代理的组件作为其架构的一部分。据 Gartner 称，基于身份和背景的零信任、最少特权的访问是领先的 SSE 产品的核心能力。今年，SSE 也出现在网络安全和应用安全的炒作周期中。&lt;/li&gt;
&lt;li&gt;支持虚拟工作团队的挑战正在推动云安全的创新。此外，企业对其虚拟工作团队的依赖性增加，为云网络安全供应商提高新产品开发的强度和速度创造了机会。Gartner 认为，这种态势推动了对 SaaS 安全态势管理（SSPM）、增强型身份保护工具（云交付的 IAM）和零信任网络访问（ZTNA）等领域的改进工具和创新需求，以取代传统的 VPN 技术。&lt;/li&gt;
&lt;li&gt;IT、安全和风险管理领导人今年优先考虑企业数字资产管理（EDRM）和能够消除错误配置的云工具。Gartner 认为，EDRM，也被称为信息权利管理（IRM），为敏感数据提供持久的保护，其中知识产权是公司高管的首要关注点。EDRM 还用于保留对通过伙伴关系在安全协作工作流程中传输的非结构化数据的控制。此外，IT 领导人正在寻找新的工具，以减少并可能消除云的错误配置，因为许多人在内部安全审计的基础上发现了新的改进领域。&lt;/li&gt;
&lt;li&gt;在过去的一年里，向 Gartner 提出的关于 CIEM 的询问增加了一倍多。据 Gartner 称，云基础设施权利管理（CIEM）工具帮助企业通过管理时间控制来管理混合和多云 IaaS 中的权利，从而管理云访问风险。CIEM 平台还依靠分析、机器学习和人工智能来识别账户定义和权限中的异常情况。CIEM 对于零信任网络访问（ZTNA）战略是不可或缺的，因为它提供了最小特权访问的执行和补救。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;Gartner 最新的云安全炒作周期反映了当前疫情对网络安全领域秩序重建是多么迅速。IT、风险和管理专业人员最关心的是如何保持他们的知识产权（IP）的安全，并减少错误配置云基础设施的情况。内部审计对错误配置如何导致云基础设施的安全漏洞提供了宝贵的见解，特别是在&lt;a href=&#34;https://venturebeat.com/2021/05/13/hybrid-multi-clouds-promise-easier-upgrades-but-threaten-data-risk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;混合云配置&lt;/a&gt;中。&lt;/p&gt;
&lt;p&gt;现在有很多机会来确保虚拟劳动力的安全，同时保护数字化转型战略取得成功所必需的混合和多云基础设施。这种压力给网络安全厂商带来了新的创新强度。这种强度体现在云原生应用保护平台（CNAPP）和安全服务边缘（SSE）在今年的云安全炒作周期中所起的关键作用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>微服务的未来——更多层抽象</title>
      <link>https://cloudnative.to/blog/the-future-of-microservices/</link>
      <pubDate>Fri, 13 Aug 2021 17:05:42 +0800</pubDate>
      <guid>https://cloudnative.to/blog/the-future-of-microservices/</guid>
      <description>&lt;p&gt;本文译自 &lt;a href=&#34;https://thenewstack.io/the-future-of-microservices-more-abstractions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Future of Microservices? More Abstractions&lt;/a&gt;，作者是 Container Solutions 的主编 Charles Humble。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://thenewstack.io/category/microservices/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微服务&lt;/a&gt;是在 10 年前出现的，是软件融合进化的例子之一。虽然这个词可以归功于软件咨询公司 &lt;a href=&#34;https://www.thoughtworks.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Thoughtworks&lt;/a&gt; 的 &lt;a href=&#34;https://twitter.com/boicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;James Lewis&lt;/a&gt; 和 Martin Fowler，&lt;a href=&#34;https://www.linkedin.com/in/adriancockcroft/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Adrian Cockcroft&lt;/a&gt; 也曾提出类似的想法。但当时在 Netflix 和许多硅谷的其他公司，如亚马逊、Google 和 eBay 等公司大致在相同的时间内独立搭建了或多或少相同的架构模式。&lt;/p&gt;
&lt;p&gt;在这个词诞生后的十年里，我们看到了 Kubernetes、服务网格和无服务器的兴起，我们也开始看到微服务被应用到了前端。除了可以横向扩展，微服务还可以让开发人员更快地部署代码，有利于组件的可替换性而不是可维护性。&lt;/p&gt;
&lt;p&gt;无论好坏，对许多人来说，微服务已经成为默认的架构选择。对于拥有自主团队和松散耦合系统的组织来说，微服务可以很好地工作，但它们带来了所有分布式系统都无法逃避的复杂性。&lt;/p&gt;
&lt;p&gt;“我坚决认为公共云比私有云和数据中心更好，这些好处是一目了然的。在许多情况下，是恐惧让人们畏缩不前。“独立技术顾问 &lt;a href=&#34;https://www.linkedin.com/in/samnewman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sam Newman&lt;/a&gt; 告诉 The New Stack，他的 &lt;a href=&#34;https://samnewman.io/books/building_microservices_2nd_edition/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Building Microservices&lt;/a&gt; 一书的第二版将在今年 8 月出版。“但是对于微服务，事情将比这复杂得多的多。”&lt;/p&gt;
&lt;p&gt;考虑到这一点，在进入微服务时代的十年里，思考一下我们已经走到了哪一步，以及我们还需要解决哪些问题是很有意思的。&lt;/p&gt;
&lt;h2 id=&#34;盘点部署和运行时间&#34;&gt;盘点：部署和运行时间&lt;/h2&gt;
&lt;p&gt;现在有各种各样成熟的、设计良好的微服务框架，涵盖了大多数语言的基础知识，在 JVM 上有大量的选择，包括 &lt;a href=&#34;https://spring.io/projects/spring-boot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spring Boot&lt;/a&gt;、&lt;a href=&#34;https://www.dropwizard.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dropwizard&lt;/a&gt;、&lt;a href=&#34;https://helidon.io/#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helidon&lt;/a&gt;、&lt;a href=&#34;https://www.lagomframework.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lagom&lt;/a&gt;、&lt;a href=&#34;https://micronaut.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Micronaut&lt;/a&gt; 和 &lt;a href=&#34;https://quarkus.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quarkus&lt;/a&gt;，同时还有 &lt;a href=&#34;https://github.com/go-kit/kit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go kit&lt;/a&gt;（Go）、&lt;a href=&#34;https://flask.palletsprojects.com/en/2.0.x/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flask&lt;/a&gt; 和 &lt;a href=&#34;https://falconframework.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Falcon&lt;/a&gt;（Python）、&lt;a href=&#34;https://nodejs.org/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Node.js&lt;/a&gt;（JavaScript）等选择。&lt;/p&gt;
&lt;p&gt;同样地，好的监控工具也比比皆是。&lt;a href=&#34;https://thenewstack.io/getting-started-with-opentelemetry-for-java/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenTelemetry&lt;/a&gt; 的出现尤其重要。它由 OpenTracing 和 OpenCensus 合并而成，拥有广泛的供应商和语言支持，为分布式遥测数据提供标准化。这意味着开发人员只需要对他们的代码进行一次检测，然后就可以交换和改变监控工具，比较相互竞争的解决方案，甚至在生产中为不同的需求运行多个不同的监控解决方案。&lt;/p&gt;
&lt;p&gt;然而，当我们看向部署和运行时，情况就变得有点模糊了。Kubernetes 已经或多或少地成为微服务的代名词，它的复杂性不断增加，促使云原生咨询公司 &lt;a href=&#34;https://www.container-solutions.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Container Solutions&lt;/a&gt; 的首席科学家 &lt;a href=&#34;https://twitter.com/adrianmouat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Adrian Mouat&lt;/a&gt; &lt;a href=&#34;https://blog.container-solutions.com/10-predictions-for-the-future-of-computing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;猜测&lt;/a&gt;我们将看到它的竞争对手出现。&lt;/p&gt;
&lt;p&gt;“值得注意的是，这种复杂性不仅仅是隐藏在引擎盖下。“Mouat 说：“它正在溢出到界面上，影响到用户。“黑进 kubectl 运行并得到一个演示并运行仍然相当容易。但是，运行生产应用程序并弄清楚如何安全地暴露它们需要了解大量不同的功能，这不可避免地导致 YAML 文件比大多数微服务源代码还要长。”&lt;/p&gt;
&lt;p&gt;Newman 总结了一个基本挑战：“Kubernetes 对开发者并不友好。我们仍然没有一个好的、可靠的、类似 &lt;a href=&#34;https://www.heroku.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Heroku&lt;/a&gt; 的抽象，在 Kubernetes 之上被广泛使用，这让我感到震惊。”&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.spotify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spotify&lt;/a&gt; 的工程总监 &lt;a href=&#34;https://www.linkedin.com/in/pia-nilsson-02b47b1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pia Nilsson&lt;/a&gt; 曾 &lt;a href=&#34;https://engineering.atspotify.com/2021/05/18/a-product-story-the-lessons-of-backstage-and-spotifys-autonomous-culture/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;谈到&lt;/a&gt;，这家快速扩张的公司的新工程师平均需要 60 天才能合并他们的第 10 个 pull request。作为回应，该公司建立了一个&lt;a href=&#34;https://thenewstack.io/design-a-better-kubernetes-experience-for-developers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开发者门户网站&lt;/a&gt; &lt;a href=&#34;https://engineering.atspotify.com/2020/09/24/cloud-native-computing-foundation-accepts-backstage-as-a-sandbox-project/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Backstage&lt;/a&gt;，现在是 &lt;a href=&#34;https://cncf.io/?utm_content=inline-mention&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生计算基金会&lt;/a&gt;的一个&lt;a href=&#34;https://backstage.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;沙盒项目&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://about.netflix.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netflix&lt;/a&gt; 非常重视 DevEx—— 该公司为开发者铺设的“道路”—— 利用它来帮助 &lt;a href=&#34;https://www.infoq.com/presentations/devex-netflix-graphql/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;加速&lt;/a&gt; &lt;a href=&#34;https://graphql.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GraphQL&lt;/a&gt; 等新技术的 &lt;a href=&#34;https://www.infoq.com/presentations/devex-netflix-graphql/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;采用&lt;/a&gt;。同样，我们已经看到了内部建设和通过 &lt;a href=&#34;https://humanitec.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Humanitec&lt;/a&gt; 等供应商建设的 &lt;a href=&#34;https://info.container-solutions.com/the-rise-of-the-internal-developer-platform&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开发者平台&lt;/a&gt;的崛起。 &lt;a href=&#34;https://www.getambassador.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ambassador Labs&lt;/a&gt; 有一个相关的 &lt;a href=&#34;https://www.getambassador.io/developer-control-plane/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开发者控制平面&lt;/a&gt;的概念 —— 它的网站声称，“使开发者能够控制和配置整个云开发循环，以便更快地发布软件”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Kubernetes 对开发者并不友好。我们仍然没有一个好的、可靠的、类似 &lt;a href=&#34;https://www.heroku.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Heroku&lt;/a&gt; 的抽象，在 Kubernetes 之上被广泛使用，这让我感到震惊。” ——Sam Newman，Building Microservices 作者&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ambassador Labs 的开发者关系总监 &lt;a href=&#34;https://www.linkedin.com/in/danielbryantuk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daniel Bryant&lt;/a&gt; 告诉 The New Stack：“如果你看看 &lt;a href=&#34;https://www.airbnb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Airbnb&lt;/a&gt;、&lt;a href=&#34;https://www.shopify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shopify&lt;/a&gt; 和 &lt;a href=&#34;https://tech.lunar.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lunar&lt;/a&gt; 等公司正在做什么，它们之间有一个明显的共同点。他们正在为他们的开发者创建一个类似于 Heroku 的 CLI，这样，像’创建新的微服务’这样的命令就会产生一些支架，插入 CI，插入管道，插入可观察性。问题是，你向开发者展示的抽象是什么，以便他们获得所需的可见性，同时也使他们所需的要求变得清晰？”&lt;/p&gt;
&lt;p&gt;Bryant 特继续说：“开发者需要指定某些操作特性：这是一个内存大的服务；这个服务需要低延迟；这个服务需要非常接近那个服务。目前，你通过启动 Kubernetes 和编写大量的 YAML 来做到这一点。那里的抽象并不完全正确，特别是当你引入其他部署机制时，如&lt;a href=&#34;https://thenewstack.io/category/serverless/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;无服务器&lt;/a&gt;和&lt;a href=&#34;https://thenewstack.io/how-low-code-can-help-enterprise-software-development/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;低代码 / 无代码&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;“我想知道谁能通过平台暴露出正确的抽象概念，然后让工程师决定如何打包他们的代码 —— 但他们打包的方式是一样的，而平台暴露出一些传统上属于运维的属性。”&lt;/p&gt;
&lt;h2 id=&#34;开放应用模型oam&#34;&gt;开放应用模型（OAM）&lt;/h2&gt;
&lt;p&gt;其他几个关于 Kubernetes 的倡议也值得跟踪。由&lt;a href=&#34;https://thenewstack.io/open-application-model-build-the-next-generation-of-cloud-native-applications/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微软和阿里云&lt;/a&gt;联合创建的&lt;a href=&#34;https://oam.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开放应用模型&lt;/a&gt;（OAM）是一个描述应用的规范，将应用定义与集群的操作细节分开。因此，它使应用程序开发人员能够专注于其应用程序的关键要素，而不是其部署地点的操作细节。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://crossplane.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crossplane&lt;/a&gt; 是 &lt;a href=&#34;https://thenewstack.io/oam-the-kubernetes-application-model-bridging-development-and-deployment/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OAM&lt;/a&gt; 的 Kubernetes 特定实现。它可以被企业用来在各种基础设施和云供应商之间建立和运维一个内部平台即服务（PaaS），这使得它在多云环境中特别有用，比如在那些兼并和收购越来越常见的大型企业中。&lt;/p&gt;
&lt;p&gt;虽然 OAM 试图将部署细节的责任从编写服务代码中分离出来，但服务网格旨在通过一个专门的基础设施层将服务间通信的责任从个人开发者那里转移出来，该层侧重于使用代理管理服务间的通信。不幸的是，它们也有复杂性的问题，而且还可能引入相当大的性能开销。&lt;/p&gt;
&lt;p&gt;因此，到目前为止，许多在生产中成功实施服务网格的案例都是在那些非常精通技术的初创公司。在 &lt;a href=&#34;https://www.infoq.com/podcasts/monolith-microservices/?&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020 年与 InfoQ 的 Wes Reisz 的播客中&lt;/a&gt;，Newman 建议在选择之前等待 6 个月，他告诉 The New Stack，他仍然给出同样的建议。&lt;/p&gt;
&lt;p&gt;“就该技术栈的权重、管理、影响以及性能带来的影响而言，它们的现实情况是非常可怕的，“Newman 说。“对有一些组织说，如果没有它们，有些事情是不可能完成的，&lt;a href=&#34;https://monzo.com/blog/2019/04/03/deploying-envoy-proxy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Monzo 就是一个很好的例子&lt;/a&gt; —— 在一个组织中，你有一个异构的技术栈，你需要做大规模的双向 TLS，我可以看到它的价值。但在我看来，它仍然是“概念很好，执行不力”。我想，我们可能会在很长时间内仍这样说。”&lt;/p&gt;
&lt;h2 id=&#34;隐藏服务网格&#34;&gt;隐藏服务网格&lt;/h2&gt;
&lt;p&gt;有一件事可能会发生，至少对企业客户来说，性能问题往往不是那么尖锐，那就是服务网格被推到平台的更深处，并在很大程度上对开发者隐藏。例如，&lt;a href=&#34;https://www.openshift.com/try?utm_content=inline-mention&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;红帽 OpenShift&lt;/a&gt; &lt;a href=&#34;https://www.openshift.com/blog/istio-on-openshift-in-2020&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;将 Istio 整合到平台层&lt;/a&gt;，还有多个类似的计划，将服务网格与公有云平台更紧密地整合在一起，如 &lt;a href=&#34;https://aws.amazon.com/app-mesh/?aws-app-mesh-blogs.sort-by=item.additionalFields.createdDate&amp;amp;aws-app-mesh-blogs.sort-order=desc&amp;amp;whats-new-cards.sort-by=item.additionalFields.postDateTime&amp;amp;whats-new-cards.sort-order=desc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS App Mesh&lt;/a&gt; 和 &lt;a href=&#34;https://cloud.google.com/traffic-director&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Cloud Platform Traffic Director&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;关于服务网格的工作还在继续，以减少其所带来的网络开销。&lt;a href=&#34;https://cilium.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium&lt;/a&gt; 团队的工作很有希望，它利用 Linux 内核中的 &lt;a href=&#34;https://ebpf.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBPF&lt;/a&gt; 功能来实现它所说的“非常有效的网络、策略执行和负载均衡功能”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我认为现在我们需要为其他人提供领域驱动设计（DDD）。因为即使是普通的开发者而不是架构师，也需要对如何确定实体的范围和边界有一定的了解，这其中有很多是回到了良好的 API 设计上。——Daniel Bryant，开发者关系总监，Ambassador Labs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但另一种可能性是，我们可能完全转向不同的运行时。&lt;a href=&#34;https://leadingedgeforum.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Leading Edge Forum&lt;/a&gt; 的顾问 &lt;a href=&#34;https://www.linkedin.com/in/simonwardley/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simon Wardley&lt;/a&gt; &lt;a href=&#34;https://acloudguru.com/blog/engineering/simon-wardley-is-a-big-fan-of-containers-despite-what-you-might-think&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;认为&lt;/a&gt;，函数即服务（Faas）/ 无服务器将最终取代 Kubernetes，成为分布式应用事实上的标准运行时，我们也看到了一些真实的生产实例，比如 &lt;a href=&#34;https://www.bbc.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BBC&lt;/a&gt;，它的大部分在线架构已经从之前的 LAMP 堆栈 &lt;a href=&#34;https://www.infoq.com/podcasts/bbc-aws-lambda-react-cicd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;直接转向了 AWS 上的 Lambda&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;“我认为 FaaS 是一个管理部署的伟大抽象，“Newman 说。“作为一个对开发者友好的部署软件的抽象，它是自 Heroku 以来我们拥有的最好的东西。我确实认为目前的实现方式很差，但他们会改进。但他们只处理了在一次在一个地方执行一件任务。这并没有解决更大的网络系统的抽象问题”。&lt;/p&gt;
&lt;p&gt;作为一个例子，Newman 引用了&lt;a href=&#34;https://azure.microsoft.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微软 Azure&lt;/a&gt; 的 &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Durable Functions&lt;/a&gt;，它通过响应式扩展提供了类似于连续性的东西，允许开发者在无服务器环境中建立有状态的工作流和函数。但是，虽然部署抽象可能会有所改善，但如果想象你可以完全抽象出编写分布式系统的复杂性，那就太天真了。&lt;/p&gt;
&lt;p&gt;“你不能假设你说的东西就在那里，“Newman 说。“你不能假设数据会神奇地从一个时间点瞬时传送到另一个时间点。因为它不是这样的。而且，再多的抽象也无法解决这个基本问题。”&lt;/p&gt;
&lt;h2 id=&#34;自主团队的架构&#34;&gt;自主团队的架构&lt;/h2&gt;
&lt;p&gt;另一个仍然具有挑战性的领域与整个系统架构有关，以及围绕团队组织和结构的相关问题。正如 &lt;a href=&#34;https://www.ibm.com/cloud?utm_content=logo-sponsorpage&amp;amp;utm_source=thenewstack&amp;amp;utm_medium=website&amp;amp;utm_campaign=platform&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IBM&lt;/a&gt; 的全球开发者 leader &lt;a href=&#34;https://www.linkedin.com/in/holly-k-cummins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holly Cummins&lt;/a&gt; 在 &lt;a href=&#34;https://cloudnative.to/cloud-native-culture-not-container/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生是关于文化而不是容器&lt;/a&gt; 一文中指出的，“即使有适当的自主团队，系统级的考虑也不会消失”。&lt;/p&gt;
&lt;p&gt;Eric Evans 的《&lt;a href=&#34;https://www.amazon.com/gp/product/0321125215/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0321125215&amp;amp;linkCode=as2&amp;amp;tag=martinfowlerc-20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;领域驱动设计》&lt;/a&gt;是微服务运动的基石，任何软件架构师都应该阅读，Bryant 说。但他更进一步说：&lt;/p&gt;
&lt;p&gt;“我认为现在我们需要为我们其他人提供 DDD，“他告诉 The New Stack。“因为即使是普通的开发者而不是架构师，也需要对如何确定实体和边界的范围有一定的了解，其中很多都要回到良好的 API 设计。一旦你理解了耦合和内聚的重要性，关注点和边界的分离，无论你处理的是什么抽象（模块、类、服务、应用），你都会自然而然地跳到这个齿轮上。”&lt;/p&gt;
&lt;p&gt;Newman 的 Building Microservices 一书的第二版即将推出，该书介绍了很多这些概念，并考虑到了下一代服务。&lt;/p&gt;
&lt;p&gt;在更新这本书时，Newman 告诉 The New Stack，“我想多谈一点耦合性。我想多谈一点内聚力。我想更多地谈论信息隐藏，这对我来说是现在最重要的事情。&lt;/p&gt;
&lt;p&gt;“我认为，即使人们掌握了分布式系统方面的知识，他们也没有掌握一个事实，即从根本上说，微服务只是模块化架构的一种形式。然而，很多创建微服务的人对什么是模块化架构或如何进行模块化毫无概念。”&lt;/p&gt;
&lt;p&gt;Newman 在新书中还引入了自 2014 年第一版出版以来出现的一些组织思维的变化。他特别引用了马修・斯凯尔顿（Matthew Skelton）和曼努埃尔・派斯（Manuel Pais）关于如何组织业务和技术团队以实现快速流动的极具影响力的作品&lt;a href=&#34;https://teamtopologies.com/book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《团队拓扑（Team Topologies）》&lt;/a&gt;，以及尼科尔・福斯格伦（Nicole Forsgren）、杰兹・汉伯（Jez Humble）和吉恩・金（Gene Kim）的&lt;a href=&#34;https://itrevolution.com/accelerate-book/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《加速（Accelerate）》&lt;/a&gt;一书，该书探讨了精益管理和 DevOps 原则背后的科学。&lt;/p&gt;
&lt;p&gt;修订过程不仅揭示了有多少关于微服务的新知识可以分享，而且这些知识是如何不断积累的。&lt;/p&gt;
&lt;p&gt;“这本书可以让你广泛了解什么是微服务以及它对软件开发的影响，“Newman 说。“我发现我在向人们推荐，哦，你应该读那本书的第四章。现在我会说这个，而不是那个。我不想在推荐自己的书上一直含糊其辞。这就是为什么我写了第二版：因为我希望它是好的、准确的。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rego 不好用？用 Pipy 实现 OPA</title>
      <link>https://cloudnative.to/blog/pipy-implement-kubernetes-admission-control/</link>
      <pubDate>Sun, 08 Aug 2021 11:00:42 +0800</pubDate>
      <guid>https://cloudnative.to/blog/pipy-implement-kubernetes-admission-control/</guid>
      <description>&lt;p&gt;还不知道 Pipy 是什么的同学可以看下 &lt;a href=&#34;https://github.com/flomesh-io/pipy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pipy 是一个轻量级、高性能、高稳定、可编程的网络代理。Pipy 核心框架使用 C++ 开发，网络 IO 采用 ASIO 库。Pipy 的可执行文件仅有 5M 左右，运行期的内存占用 10M 左右，因此 Pipy 非常适合做 Sidecar proxy。&lt;/p&gt;
&lt;p&gt;Pipy 内置了自研的 pjs 作为脚本扩展，使得 Pipy 可以用 JS 脚本根据特定需求快速定制逻辑与功能。&lt;/p&gt;
&lt;p&gt;Pipy 采用了模块化、链式的处理架构，用顺序执行的模块来对网络数据块进行处理。这种简单的架构使得 Pipy 底层简单可靠，同时具备了动态编排流量的能力，兼顾了简单和灵活。通过使用 REUSE_PORT 的机制（主流 Linux 和 BSD 版本都支持该功能），Pipy 可以以多进程模式运行，使得 Pipy 不仅适用于 Sidecar 模式，也适用于大规模的流量处理场景。在实践中，Pipy 独立部署的时候用作“软负载”，可以在低延迟的情况下，实现媲美硬件的负载均衡吞吐能力，同时具有灵活的扩展性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在玩过几次 Pipy 并探究其工作原理后，又有了更多的想法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudnative.to/blog/glance-at-programmable-gateway-pipy/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;初探可编程网关 Pipy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/_IeRXp9EJnVsvDfg8tUr1A&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;可编程网关 Pipy 第二弹：编程实现 Metrics 及源码解读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/iQWunpazsw86X3kEkB1rJw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;可编程网关 Pipy 第三弹：事件模型设计&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在使用 OPA 的时候，一直觉得 Rego 不是那么顺手，使用 pipy js 来写规则的想法油然而生。今天就一起试试这个思路。果然，不试不知道，一试发现太多的惊喜～ Pipy 不止于“代理”，更有很多可以适用的场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;极小的单一可执行文件（single binary）使得 pipy 可能是最好的“云原生 sidecar”&lt;/li&gt;
&lt;li&gt;sidecar 不仅仅是代理，还可以做控制器，做运算单元&lt;/li&gt;
&lt;li&gt;proxy 的串路结构适合各种管控类的操作，比如访问控制&lt;/li&gt;
&lt;li&gt;Pipy js 的扩展能力和快速编程能力，很适合做“规则引擎”，或者用最近流行的说法“云原生的规则引擎”。对比 OPA 我认为它完全够格做一个“羽量级规则执行引擎”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在我更倾向于定义 pipy 是一个“云原生的流量编程框架”，代理只是其底层的核心能力，叠加了 pipy js 以后，上层可以做的事情很多，“流量滋养万物”。&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&#34;https://cloudnative.to/blog/image-trusted-repository-with-open-policy-agent/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用 Open Policy Agent 实现可信镜像仓库检查&lt;/a&gt; 之后，就在想 Pipy 是否一样可以做到，将内核替换成 Pipy + 规则。所以今天大部分内容和上面这篇是相似的。&lt;/p&gt;
&lt;p&gt;来，一起看看这个“不务正业”的 Pipy 如何实现 Kubernetes 的准入控制器 来做镜像的检查。&lt;/p&gt;
&lt;h2 id=&#34;环境&#34;&gt;环境&lt;/h2&gt;
&lt;p&gt;继续使用 minikube&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;minikube start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建部署-pipy-的命名空间&#34;&gt;创建部署 Pipy 的命名空间&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create namespace pipy 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubens pipy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl label ns pipy pipy/webhook&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ignore &lt;span class=&#34;c1&#34;&gt;#后面解释&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;规则&#34;&gt;规则&lt;/h2&gt;
&lt;p&gt;在 OPA 中，通过 &lt;code&gt;kube-mgmt&lt;/code&gt; 容器监控 &lt;code&gt;configmap&lt;/code&gt; 的改动，将 Policy 推送到同 pod 的 opa 容器中。&lt;/p&gt;
&lt;p&gt;对于 Pipy 为了渐变，直接使用挂载的方式将保存了规则的 &lt;code&gt;configmap&lt;/code&gt; 挂载到 Pipy
的容器中。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;实际的使用中，Pipy 支持轮训的方式检查控制平面中规则的变更，并实时加载；也可以实现与 OPA 的 kube-mgmt 同样的逻辑。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;实现了&lt;a href=&#34;https://atbug.com/image-trusted-repository-with-open-policy-agent/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;上一讲功能&lt;/a&gt;的 pipy 规则如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt; pipy-rule.js &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;pipy({
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  _repoPrefix: &amp;#39;192.168.64.1&amp;#39;, //192.168.64.1:5000 是笔者本地容器运行的一个私有仓库。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  _tagSuffix: &amp;#39;:latest&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;.listen(6443, {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  tls: {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    cert: os.readFile(&amp;#39;/certs/tls.crt&amp;#39;).toString(),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    key: os.readFile(&amp;#39;/certs/tls.key&amp;#39;).toString(),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  .decodeHttpRequest()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  .replaceMessage(
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    msg =&amp;gt; (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        ((req, result, invalids, reason) =&amp;gt; (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            req = JSON.decode(msg.body),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            invalids = req.request.object.spec.containers.find(container =&amp;gt; (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              (!container.image.startsWith(_repoPrefix) ? (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                reason = `${container.image} repo not start with ${_repoPrefix}`,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                console.log(reason),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              ) : (false))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              (container.image.endsWith(_tagSuffix) ? (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                reason = `${container.image} tag end with ${_tagSuffix}`,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                console.log(reason),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              ) : (false)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            ))),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            invalids != undefined ? (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              result = {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                &amp;#34;apiVersion&amp;#34;: &amp;#34;admission.k8s.io/v1beta1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                &amp;#34;kind&amp;#34;: &amp;#34;AdmissionReview&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                &amp;#34;response&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                    &amp;#34;allowed&amp;#34;: false,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                    &amp;#34;uid&amp;#34;: req.request.uid,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                    &amp;#34;status&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                        &amp;#34;reason&amp;#34;: reason,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                    },
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                },
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            ) : (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              result = {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                &amp;#34;apiVersion&amp;#34;: &amp;#34;admission.k8s.io/v1beta1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                &amp;#34;kind&amp;#34;: &amp;#34;AdmissionReview&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                &amp;#34;response&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                    &amp;#34;allowed&amp;#34;: true,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                    &amp;#34;uid&amp;#34;: req.request.uid
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                },
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            ),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            console.log(JSON.encode(result)),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            new Message({
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              &amp;#39;status&amp;#39; : 200,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              &amp;#39;headers&amp;#39;: {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;                &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              }, JSON.encode(result))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        ))()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  )
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  .encodeHttpResponse()  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将规则保存在 configmap 中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create configmap pipy-rule --from-file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;pipy-rule.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在-kubernetes-上部署-pipy&#34;&gt;在 Kubernetes 上部署 Pipy&lt;/h2&gt;
&lt;p&gt;Kubernetes 与准入控制器（&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Admission Controller&lt;/a&gt;）的通信需要使用 TLS。配置 TLS，使用 &lt;code&gt;openssl&lt;/code&gt; 创建证书颁发机构（certificate authority CA）和 OPA 的证书/秘钥对。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl genrsa -out ca.key &lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl req -x509 -new -nodes -key ca.key -days &lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt; -out ca.crt -subj &lt;span class=&#34;s2&#34;&gt;&amp;#34;/CN=admission_ca&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为 OPA 创建 TLS 秘钥和证书：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt;server.conf &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[req]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;req_extensions = v3_req
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;distinguished_name = req_distinguished_name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;prompt = no
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[req_distinguished_name]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;CN = pipy.pipy.svc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[ v3_req ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;basicConstraints = CA:FALSE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;keyUsage = nonRepudiation, digitalSignature, keyEncipherment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;extendedKeyUsage = clientAuth, serverAuth
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;subjectAltName = @alt_names
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[alt_names]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;DNS.1 = pipy.pipy.svc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意 &lt;code&gt;CN&lt;/code&gt; 和 &lt;code&gt;alt_names&lt;/code&gt; 必须与后面创建 Pipy service 的匹配。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl genrsa -out server.key &lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl req -new -key server.key -out server.csr -config server.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days &lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt; -extensions v3_req -extfile server.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为 OPA 创建保存 TLS 凭证的 Secret：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create secret tls pipy-server --cert&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;server.crt --key&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;server.key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将 Pipy 部署为准入控制器（admission controller）。为了方便调试，我们使用启动 Pipy 的时候打开了控制台。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Service&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;targetPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;gui&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 方便调试&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6060&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;targetPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6060&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;targetPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;replicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy:latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;IfNotPresent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;pipy&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;/opt/data/pipy-rule.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--gui-port=6060&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 方便调试&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# - &amp;#34;--log-level=debug&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;gui&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6060&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP  &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumeMounts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;readOnly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mountPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/certs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;readOnly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mountPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/opt/data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy-rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy-rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;configMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pipy-rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;暴露控制台的访问：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl expose deploy pipy --name pipy-node --type NodePort
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get svc pipy-port
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;minikube service --url pipy-node -n pipy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 找到控制台端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，生成将用于将 Pipy 注册为准入控制器的 manifest。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt; webhook-configuration.yaml &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;kind: ValidatingWebhookConfiguration
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;apiVersion: admissionregistration.k8s.io/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  name: pipy-validating-webhook
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;webhooks:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  - name: validating-webhook.pipy.flomesh-io.cn
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    namespaceSelector:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;      matchExpressions:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;      - key: pipy/webhook
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        operator: NotIn
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        values:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        - ignore
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    rules:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;      - operations: [&amp;#34;CREATE&amp;#34;, &amp;#34;UPDATE&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        apiGroups: [&amp;#34;*&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        apiVersions: [&amp;#34;*&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        resources: [&amp;#34;pods&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    clientConfig:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;      caBundle: $(cat ca.crt | base64 | tr -d &amp;#39;\n&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;      service:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        namespace: pipy
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        name: pipy
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生成的配置文件包含 CA 证书的 base64 编码，以便可以在 Kubernetes API 服务器和 OPA 之间建立 TLS 连接。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f webhook-configuration.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pod-bad-repo.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creationTimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;nginx:1.21.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterFirst&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restartPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f pod-bad-repo.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error from server &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;nginx:1.21.1 repo not start with 192.168.64.1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: error when creating &lt;span class=&#34;s2&#34;&gt;&amp;#34;pod-bad-repo.yaml&amp;#34;&lt;/span&gt;: admission webhook &lt;span class=&#34;s2&#34;&gt;&amp;#34;validating-webhook.pipy.flomesh-io.cn&amp;#34;&lt;/span&gt; denied the request: nginx:1.21.1 repo not start with 192.168.64.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pod-bad-tag.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creationTimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;192.168.64.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/nginx:latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterFirst&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restartPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f pod-bad-tag.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error from server &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;192.168.64.1:5000/nginx:latest tag end with :latest&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: error when creating &lt;span class=&#34;s2&#34;&gt;&amp;#34;pod-bad-tag.yaml&amp;#34;&lt;/span&gt;: admission webhook &lt;span class=&#34;s2&#34;&gt;&amp;#34;validating-webhook.pipy.flomesh-io.cn&amp;#34;&lt;/span&gt; denied the request: 192.168.64.1:5000/nginx:latest tag end with :latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pod-ok.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creationTimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;192.168.64.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/nginx:1.21.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterFirst&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restartPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f pod-ok.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pod/web-server created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;OPA 哪哪都好，唯一缺点就是其引进的 &lt;code&gt;Rego&lt;/code&gt; 语言抬高了使用的门槛。而 Pipy 的规则是通过 JavaScrip 来编写的，前端的同学一样可以完成规则的编写。完全替代可能夸张了一些，但确实在部分场景下可以替代 OPA。&lt;/p&gt;
&lt;p&gt;玩到这里，你会发现有了规则，加上功能强大的过滤器（现在我喜欢叫他们 Hook 了），Pipy 的可玩性非常强。&lt;/p&gt;
&lt;p&gt;比如&lt;a href=&#34;https://mp.weixin.qq.com/s/lfU3XKP2oAPOLNkxdR2KVg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OPA: Kubernetes 准入控制策略 Top 5&lt;/a&gt;，比如&amp;hellip;。大胆的想象吧。&lt;/p&gt;
&lt;p&gt;想写一个系列，就叫“如何把 Pipy 玩坏”？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用 Open Policy Agent 实现可信镜像仓库检查</title>
      <link>https://cloudnative.to/blog/image-trusted-repository-with-open-policy-agent/</link>
      <pubDate>Wed, 04 Aug 2021 10:00:42 +0800</pubDate>
      <guid>https://cloudnative.to/blog/image-trusted-repository-with-open-policy-agent/</guid>
      <description>&lt;p&gt;从互联网（或可信镜像仓库库以外的任何地方）拉取未知镜像会带来风险——例如恶意软件。但是还有其他很好的理由来维护单一的可信来源，例如在企业中实现可支持性。通过确保镜像仅来自受信任的镜像仓库，可以密切控制镜像库存，降低软件熵和蔓延的风险，并提高集群的整体安全性。除此以外，有时还会需要检查镜像的 tag，比如禁止使用 latest 镜像。&lt;/p&gt;
&lt;p&gt;这今天我们尝试用“策略即代码”的实现 OPA 来实现功能。&lt;/p&gt;
&lt;p&gt;还没开始之前可能有人会问：明明可以实现个 &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Admission Webhook&lt;/a&gt; 就行，为什么还要加上 OPA？&lt;/p&gt;
&lt;p&gt;确实可以，但是这样策略和逻辑都会耦合在一起，当策略需要调整的时候需要修改代码重新发布。而 OPA 就是用来做解耦的，其更像是一个策略的执行引擎。&lt;/p&gt;
&lt;h2 id=&#34;什么是-opa&#34;&gt;什么是 OPA&lt;/h2&gt;
&lt;p&gt;Open Policy Agent（以下简称 OPA，发音“oh-pa”）一个开源的通用策略引擎，可以统一整个堆栈的策略执行。OPA 提供了一种高级声明性语言（Rego），可让你将策略指定为代码和简单的 API，以从你的软件中卸载策略决策。你可以使用 OPA 在微服务、Kubernetes、CI/CD 管道、API 网关等中实施策略。&lt;/p&gt;
&lt;p&gt;Rego 是一种高级的声明性语言，是专门为 OPA 建立的。更多 OPA 的介绍可以看 &lt;a href=&#34;https://www.openpolicyagent.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Policy Agent 官网&lt;/a&gt;，不想看英文直接看&lt;a href=&#34;https://cloudnative.to/blog/introducing-policy-as-code-the-open-policy-agent-opa/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-2021-07-09-18-26-25&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://atbug.oss-cn-hangzhou.aliyuncs.com/2021/07/09/20210709182625.png&#34; alt=&#34;2021-07-09-18-26-25&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      2021-07-09-18-26-25
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现在进入正题。&lt;/p&gt;
&lt;h2 id=&#34;启动集群&#34;&gt;启动集群&lt;/h2&gt;
&lt;p&gt;启动 minikube&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;minikube start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建用于部署-opa-的命名空间&#34;&gt;创建用于部署 OPA 的命名空间&lt;/h2&gt;
&lt;p&gt;创建并切换到命名空间 &lt;code&gt;opa&lt;/code&gt; （命名空间的切换使用 kubens，更多工具介绍见&lt;a href=&#34;https://mp.weixin.qq.com/s/uU2zmT5yyVcKZ5XmLSRqtg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create namespace opa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubens opa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在-kubernetes-上部署-opa&#34;&gt;在 Kubernetes 上部署 OPA&lt;/h2&gt;
&lt;p&gt;Kubernetes 和 OPA 间的通信必须使用 TLS 进行保护。配置 TLS，使用 &lt;code&gt;openssl&lt;/code&gt; 创建证书颁发机构（certificate authority CA）和 OPA 的证书/秘钥对。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl genrsa -out ca.key &lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl req -x509 -new -nodes -key ca.key -days &lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt; -out ca.crt -subj &lt;span class=&#34;s2&#34;&gt;&amp;#34;/CN=admission_ca&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为 OPA 创建 TLS 秘钥和证书：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt;server.conf &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[req]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;req_extensions = v3_req
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;distinguished_name = req_distinguished_name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;prompt = no
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[req_distinguished_name]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;CN = opa.opa.svc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[ v3_req ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;basicConstraints = CA:FALSE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;keyUsage = nonRepudiation, digitalSignature, keyEncipherment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;extendedKeyUsage = clientAuth, serverAuth
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;subjectAltName = @alt_names
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;[alt_names]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;DNS.1 = opa.opa.svc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意 &lt;code&gt;CN&lt;/code&gt; 和 &lt;code&gt;alt_names&lt;/code&gt; 必须与后面创建 OPA service 的匹配。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl genrsa -out server.key &lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl req -new -key server.key -out server.csr -config server.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days &lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt; -extensions v3_req -extfile server.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为 OPA 创建保存 TLS 凭证的 Secret：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create secret tls opa-server --cert&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;server.crt --key&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;server.key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将 OPA 部署为准入控制器（admission controller）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;admission-controller.yaml&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 授权 OPA/kube-mgmt 对资源的只读权限&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# kube-mgmt 会同步资源信息给 OPA，以便在策略中使用&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRoleBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa-viewer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;roleRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subjects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;system:serviceaccounts:opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 为 OPA/kube-mgmt 定义角色来在 configmaps 中更新策略状态&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Role&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;configmap-modifier&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiGroups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;configmaps&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;patch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 为 OPA/kube-mgmt 授予角色&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;RoleBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa-configmap-modifier&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;roleRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Role&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;configmap-modifier&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subjects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;system:serviceaccounts:opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Service&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;targetPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;replicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# WARNING: OPA is NOT running with an authorization policy configured. This&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# means that clients can read and write policies in OPA. If you are&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# deploying OPA in an insecure environment, be sure to configure&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# authentication and authorization on the daemon. See the Security page for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# details: https://www.openpolicyagent.org/docs/security.html.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;openpolicyagent/opa:0.30.1-rootless&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;run&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--server&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--tls-cert-file=/certs/tls.crt&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--tls-private-key-file=/certs/tls.key&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--addr=0.0.0.0:8443&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--addr=http://127.0.0.1:8181&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--log-format=json-pretty&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--set=decision_logs.console=true&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumeMounts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;readOnly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mountPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/certs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;readinessProbe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;httpGet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/health?plugins&amp;amp;bundle&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HTTPS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;initialDelaySeconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;periodSeconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;livenessProbe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;httpGet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/health&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HTTPS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;initialDelaySeconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;periodSeconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-mgmt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;openpolicyagent/kube-mgmt:0.11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;--replicate=v1/pods&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ConfigMap&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa-default-system-main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;opa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    package system
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    import data.kubernetes.validating.images
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    main = {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;apiVersion&amp;#34;: &amp;#34;admission.k8s.io/v1beta1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;kind&amp;#34;: &amp;#34;AdmissionReview&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;response&amp;#34;: response,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    default uid = &amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    uid = input.request.uid
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    response = {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        &amp;#34;allowed&amp;#34;: false,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        &amp;#34;uid&amp;#34;: uid,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        &amp;#34;status&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;            &amp;#34;reason&amp;#34;: reason,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        },
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    } {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        reason = concat(&amp;#34;, &amp;#34;, images.deny)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        reason != &amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    else = {&amp;#34;allowed&amp;#34;: true, &amp;#34;uid&amp;#34;: uid}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f admission-controller.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，生成将用于将 OPA 注册为准入控制器的 manifest。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat &amp;gt; webhook-configuration.yaml &amp;lt;&amp;lt;EOF
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1beta1
metadata:
  name: opa-validating-webhook
webhooks:
  - name: validating-webhook.openpolicyagent.org
    rules:
      - operations: [&amp;#34;CREATE&amp;#34;, &amp;#34;UPDATE&amp;#34;]
        apiGroups: [&amp;#34;*&amp;#34;]
        apiVersions: [&amp;#34;*&amp;#34;]
        resources: [&amp;#34;pods&amp;#34;]
    clientConfig:
      caBundle: $(cat ca.crt | base64 | tr -d &amp;#39;\n&amp;#39;)
      service:
        namespace: opa
        name: opa
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成的配置文件包含 CA 证书的 base64 编码，以便可以在 Kubernetes API 服务器和 OPA 之间建立 TLS 连接。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f webhook-configuration.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看 OPA 日志：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl logs -l &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;opa -c opa -f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;定义策略并通过-kubernetes-将其加载到-opa&#34;&gt;定义策略并通过 Kubernetes 将其加载到 OPA&lt;/h2&gt;
&lt;p&gt;这里我们定义了对容器镜像的检查：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否来自受信任的仓库&lt;/li&gt;
&lt;li&gt;是否使用了 latest tag 的镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;image-policy.rego&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;package kubernetes.validating.images
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deny&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;msg&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    some i
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    input.request.kind.kind &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Pod&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    image :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; input.request.object.spec.containers&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.image
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    endswith&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;image, &lt;span class=&#34;s2&#34;&gt;&amp;#34;:latest&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    msg :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; sprintf&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Image &amp;#39;%v&amp;#39; used latest image&amp;#34;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;image&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    some i
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    input.request.kind.kind &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Pod&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    image :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; input.request.object.spec.containers&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.image
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    not startswith&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;image, &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.64.1:5000&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    msg :&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; sprintf&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Image &amp;#39;%v&amp;#39; comes from untrusted registry&amp;#34;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;image&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create configmap image-policy --from-file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;image-policy.rego
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查 configmap 的 annotation &lt;code&gt;openpolicyagent.org/policy-status&lt;/code&gt; 值是否 为 &lt;code&gt;&#39;{&amp;quot;status&amp;quot;:&amp;quot;ok&amp;quot;}&#39;&lt;/code&gt;。否则，就要根据报错信息处理问题。&lt;/p&gt;
&lt;p&gt;注：&lt;code&gt;192.168.64.1:5000&lt;/code&gt; 是笔者本地容器运行的一个私有仓库。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3.6&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;registry:2.7.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;REGISTRY_HTTP_ADDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.0.0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;REGISTRY_STORAGE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;filesystem&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;REGISTRY_STORAGE_DELETE_ENABLED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/var/lib/registry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;5000:5000&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;/Users/addo/Downloads/tmp/registry:/var/lib/registry&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;h3 id=&#34;pod-bad-repoyaml&#34;&gt;pod-bad-repo.yaml&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creationTimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;nginx:1.21.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterFirst&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restartPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f pod-bad-repo.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error from server &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Image &lt;span class=&#34;s1&#34;&gt;&amp;#39;nginx:1.21.1&amp;#39;&lt;/span&gt; comes from untrusted registry&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: error when creating &lt;span class=&#34;s2&#34;&gt;&amp;#34;pod-bad-repo.yaml&amp;#34;&lt;/span&gt;: admission webhook &lt;span class=&#34;s2&#34;&gt;&amp;#34;validating-webhook.openpolicyagent.org&amp;#34;&lt;/span&gt; denied the request: Image &lt;span class=&#34;s1&#34;&gt;&amp;#39;nginx:1.21.1&amp;#39;&lt;/span&gt; comes from untrusted registry
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pod-bad-tagyaml&#34;&gt;pod-bad-tag.yaml&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creationTimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;192.168.64.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/nginx:latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterFirst&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restartPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f pod-bad-tag.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Error from server &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Image &lt;span class=&#34;s1&#34;&gt;&amp;#39;192.168.64.1:5000/nginx:latest&amp;#39;&lt;/span&gt; used latest image&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: error when creating &lt;span class=&#34;s2&#34;&gt;&amp;#34;pod-bad-tag.yaml&amp;#34;&lt;/span&gt;: admission webhook &lt;span class=&#34;s2&#34;&gt;&amp;#34;validating-webhook.openpolicyagent.org&amp;#34;&lt;/span&gt; denied the request: Image &lt;span class=&#34;s1&#34;&gt;&amp;#39;192.168.64.1:5000/nginx:latest&amp;#39;&lt;/span&gt; used latest image
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pod-okyaml&#34;&gt;pod-ok.yaml&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creationTimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;192.168.64.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/nginx:1.21.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;web-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dnsPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterFirst&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restartPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f pod-ok.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pod/web-server created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;策略即代码，以代码的实现表达策略；在通过策略与执行引擎的解耦分离，让策略更加的灵活。&lt;/p&gt;
&lt;p&gt;后面我们再探索 OPA 的更多场景。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>策略即代码——Open Policy Agent（开放策略代理 OPA）简介</title>
      <link>https://cloudnative.to/blog/introducing-policy-as-code-the-open-policy-agent-opa/</link>
      <pubDate>Tue, 29 Jun 2021 10:10:46 +0800</pubDate>
      <guid>https://cloudnative.to/blog/introducing-policy-as-code-the-open-policy-agent-opa/</guid>
      <description>&lt;h2 id=&#34;什么是-opa&#34;&gt;什么是 OPA？&lt;/h2&gt;
&lt;p&gt;这是一个始于 2016 年的项目，旨在统一不同技术和系统的策略执行。今天，OPA 被科技行业内的巨头们所使用。例如，Netflix 使用 OPA 来控制对其内部 API 资源的访问。Chef 用它来为他们的终端用户产品提供 IAM 功能。此外，许多其他公司，如 Cloudflare、Pinterest 等，都使用 OPA 在他们的平台上执行策略（如 Kubernetes 集群）。目前，OPA 已从 CNCF 中毕业。&lt;/p&gt;
&lt;h2 id=&#34;opa-有什么用&#34;&gt;OPA 有什么用？&lt;/h2&gt;
&lt;p&gt;你可能想知道 OPA 是怎样诞生的？它试图解决什么问题？事实上，API 和微服务的策略执行就如同微服务本身一样古老。没有一个生产级别的应用程序不执行访问控制、授权和策略。为了理解 OPA 的作用，考虑以下用例：你的公司通过一个在线门户销售笔记本电脑。像所有其他类似的应用程序一样，该门户由一个首页组成，客户在这里看到最新的产品，也许还有一些限时促销活动。如果客户想买东西，他们需要登录或创建一个账户。接下来，使用信用卡或其他方法付款。为了确保客户会反复访问，需要支持客户订阅，其中可能包含特别折扣信息。另外，他们可以选择在新产品公布后立即接收浏览器通知。一个非常典型的网上购物应用程序，对吗？现在，让我们用一张图来描述一下这个工作流程是什么样子的，以使这个过程可视化。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryvk70h04j30wm0u0x2v_hu9813249841911883313.webp 400w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryvk70h04j30wm0u0x2v_hu12170321281918124048.webp 760w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryvk70h04j30wm0u0x2v_hu14803666045068243853.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryvk70h04j30wm0u0x2v_hu9813249841911883313.webp&#34;
               width=&#34;760&#34;
               height=&#34;699&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;上图显示了我们系统内部可能的样子。我们有一些微服务，它们相互沟通，为我们的客户提供服务。现在，显然，Bob 不应该看到系统的任何内部运作。例如，他不能查看（或甚至不知道）归档付款的 S3 Bucket，或通知 API 可以与哪些服务联络。但是，John 呢？他是应用开发者，他需要访问所有的微服务，以便在问题发生时能够进行故障排除和调试。要是他不小心（或故意）对数据库服务进行了一个 API 调用，把客户的送货地址改到了别的地方，怎么办？更糟糕的是，如果他对客户的信用卡号码有读取权限怎么办？为了解决这些风险，我们在每个微服务的之前放置了一个授权控制。该控件检查认证用户是否有必要的权限来执行请求的操作。这样的授权系统可以是内部的、自制的程序，也可以是 AWS IAM 提供的外部程序。这就是一个典型的微服务应用程序的构建和安全。但是，看看使用几种不同的授权系统的缺点，特别是随着应用程序的增长而带来的麻烦。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改现有的策略，或引入新的策略，是一场噩梦。试想一下，你需要访问多少地方才能让 Alice 拥有对所有存储相关系统的读取权限。这意味着 S3、MySQL、MongoDB，也许还有一个外部 API，仅此而已。&lt;/li&gt;
&lt;li&gt;开发者没有办法在他们自己的系统上执行策略。他们显然可以在应用程序中硬编码他们的授权逻辑，但这使事情变得错综复杂：试图在不同的微服务中统一策略是非常复杂的。&lt;/li&gt;
&lt;li&gt;补充前一点，为本地服务引入一个新的策略可能需要改变代码，从而引入所有微服务的新版本。&lt;/li&gt;
&lt;li&gt;如果你想将策略与现有的用户数据库集成，该怎么办？例如，与人力资源数据库整合。&lt;/li&gt;
&lt;li&gt;我们需要将策略可视化，以确保它正在做它应该做的事情。随着你的策略变得越来越复杂，这一点变得越来越重要。&lt;/li&gt;
&lt;li&gt;现代系统由多种技术和服务组成，这些技术和服务是用不同的语言编写的。例如，你可能有运行在 Kubernetes 上的系统核心，以及一堆不属于集群的用 Java、Ruby 和 PHP 编写的传统 API。每个平台都有自己的授权机制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我们以 Kubernetes 为例来看看。如果所有用户都被授权访问整个集群，很多讨厌的事情就会发生，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给所有的 pod 提供无限的请求和限制，可能会导致随机的 pod 被从节点上驱逐。&lt;/li&gt;
&lt;li&gt;拉取和使用未经测试的、杂乱无章的镜像，可能包含安全漏洞或恶意内容。&lt;/li&gt;
&lt;li&gt;使用没有 TLS 的 Ingress 控制器，允许未加密的、不安全的流量进入应用程序。&lt;/li&gt;
&lt;li&gt;由于整体的复杂性，还有许多其他不可预见的风险。&lt;/li&gt;
&lt;li&gt;你肯定可以使用 RBAC 和 Pod 安全策略来对集群进行细粒度的控制。但同样，这只适用于集群。在 Kubernetes 集群之外，Kubernetes RBAC 是没有用的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这就是开放策略代理（OPA）发挥作用的地方。引入 OPA 是为了创建一个统一的方法来执行堆栈中的安全策略。&lt;/p&gt;
&lt;h2 id=&#34;opa-如何工作&#34;&gt;OPA 如何工作？&lt;/h2&gt;
&lt;p&gt;上文中，我们探讨了策略执行和 OPA 试图解决的问题，现在，让我们来看看它是如何工作的。&lt;/p&gt;
&lt;p&gt;假设你正在实现我们示例应用程序的支付服务。这个服务负责处理客户的付款。它暴露了一个 API，接受客户的付款。它还允许用户查询特定客户的付款情况。因此，为了获得一个包含 Jane 所做购买的数组，她是公司的一个客户，你向 API 发送一个 GET 请求，路径为 &lt;code&gt;/payment/jane&lt;/code&gt;。你在授权头中提供你的证书信息并发送请求。响应将是一个 JSON 数组，包含你所要求的数据。然而，由于你不希望所有有网络访问权限的人都能够访问支付 API，看到这样的敏感数据，你需要执行一个授权策略。OPA 以如下方式解决这个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;支付 API 向 OPA 查询一个 decision。它伴随着这个查询的一些属性，如请求中使用的 HTTP 方法，路径，用户，等等。&lt;/li&gt;
&lt;li&gt;OPA 根据已经提供给它的数据来验证这些属性。&lt;/li&gt;
&lt;li&gt;在验证之后，OPA 向请求的 API 发送一个 decision，要么允许，要么拒绝。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里需要注意的是，OPA 将我们的策略决策与执行解耦。OPA 的工作流程可以用下面的图来描述。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-opad-的工作流程&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;OPAd 的工作流程&#34; srcset=&#34;
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryw7x0q6gj30u00xt7td_hu8863188900386366131.webp 400w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryw7x0q6gj30u00xt7td_hu4747672610596789458.webp 760w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryw7x0q6gj30u00xt7td_hu10337759905175568173.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryw7x0q6gj30u00xt7td_hu8863188900386366131.webp&#34;
               width=&#34;674&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      OPAd 的工作流程
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;OPA 是一个通用的、与领域无关的策略执行工具。它可以与 API、Linux SSH 守护程序、像 CEPH 这样的对象存储等集成。OPA 的设计者有意避免将其建立在任何其他项目的基础上。因此，策略查询和决定不遵循特定的格式。也就是说，你可以使用任何有效的 JSON 数据作为请求属性，只要它提供所需的数据。同样地，来自 OPA 的策略决策也可以是任何有效的 JSON 数据。你选择什么被输入，什么被输出。例如，你可以选择让 OPA 返回一个 TRUE 或 FALSE 的 JSON 对象，一个数字，一个字符串，甚至是一个复杂的数据对象。&lt;/p&gt;
&lt;h2 id=&#34;opa-内部&#34;&gt;OPA 内部&lt;/h2&gt;
&lt;p&gt;为了充分理解 OPA 并开始在自己的项目中实施它，你必须熟悉它的功能和组件。让我们从如何定义你的策略开始。&lt;/p&gt;
&lt;h3 id=&#34;策略语言-rego&#34;&gt;策略语言 Rego&lt;/h3&gt;
&lt;p&gt;Rego 是一种高级的声明性语言，是专门为 OPA 建立的。它使定义策略和解决以下问题变得非常容易：Bob 是否被允许对 &lt;code&gt;/api/v1/products&lt;/code&gt; 执行 GET 请求？他实际上被允许查看哪些记录？&lt;/p&gt;
&lt;h3 id=&#34;部署&#34;&gt;部署&lt;/h3&gt;
&lt;p&gt;当涉及到部署 OPA 时，你有多个选择，这取决于你的具体场景。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;作为 Go 库&lt;/strong&gt;：如果你的应用程序是用 Golang 写的，你可以把 OPA 作为应用程序中的第三方库来实现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作为守护程序&lt;/strong&gt;：如果你不使用 Go，那么你可以像其他服务一样，把 OPA 作为一个守护程序来部署。在这种情况下，建议你使用一个 sidecar 容器或在主机上运行。原因是，这种设计可以提高性能和可用性。想象一下，你把 OPA 部署在 Kubernetes 的一个单独的 pod 中，而这个 pod 恰好位于一个单独的节点上，而你的应用 pod 正在那里运行。现在，每当你的服务需要咨询 OPA 的策略决策时，它必须通过网络进行调用，以达到 OPA 运行的 pod。这引入了不必要的延迟，并可能在高峰期导致应用程序的迟滞。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1grywfo32k9j30u01drtl3_hu1157828851325072296.webp 400w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1grywfo32k9j30u01drtl3_hu10825578109663528775.webp 760w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1grywfo32k9j30u01drtl3_hu4870584948069251154.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1grywfo32k9j30u01drtl3_hu1157828851325072296.webp&#34;
               width=&#34;458&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;如何管理和控制-opa&#34;&gt;如何管理和控制 OPA？&lt;/h3&gt;
&lt;p&gt;为了进一步减少延迟，设计者决定 OPA 应该把所有的策略数据保存在内存中。这确保了 OPA 不会去查询另一个服务来请求数据。为了处理 OPA，你有一组 API，用于不同的目的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;捆绑服务 API&lt;/strong&gt;：用于向 OPA 发送策略数据。OPA 不断轮询 Bundle 服务 API，搜索新版本的策略。一旦发现，它就拉取并应用新的版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;状态服务 API&lt;/strong&gt;：用于确定服务的状态。它告诉你当前在 OPA 上激活的策略版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;决策日志服务 API&lt;/strong&gt;：每当 OPA 做出一个策略决策，它都会记录下来。后来，它把这些日志的批次发送到日志服务 API。这对于审计和故障排除特别有用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建、测试和调试策略的工具&lt;/strong&gt; ：一组命令行工具，你可以使用，如 opa test、opa run、opa check 等。还有一个 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=tsandall.opa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VS Code 插件&lt;/a&gt;，可以方便开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;初试-opa-策略&#34;&gt;初试 OPA 策略&lt;/h2&gt;
&lt;p&gt;到现在为止，你应该对 OPA 诞生的原因，它试图解决的问题，以及它的设计和管理方式有了相当清晰的认识。现在是试水的时候了，看看用 Rego 语言创建一个策略是什么样子。第一步是用简单的英语定义你的策略。比如说：“客户应该能够查看自己的付款。财务部门的工作人员应该能够查看任何客户的付款。”&lt;/p&gt;
&lt;p&gt;下一步是将策略转换为 Rego 代码。我们可以使用 &lt;a href=&#34;https://play.openpolicyagent.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rego playground&lt;/a&gt; 来做这件事。因此，在主面板中，清除那里已经添加的代码，并添加以下内容。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package play

# Customers should be able to view their own payments
allow = true {
	input.method = &amp;#34;GET&amp;#34;
      input.path = [&amp;#34;payments&amp;#34;, customer_id]
      input.user = customer_id
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;让我们逐行回顾这个片段。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;任何以哈希符号（#）开头的行都是注释。把你的策略应该做的事情写成连贯的、可供人类阅读的注释，总是一个好的做法。&lt;/li&gt;
&lt;li&gt;allow = true 意味着如果以下的“评估“为真，决策将被允许。&lt;/li&gt;
&lt;li&gt;输入方法是 GET。任何其他 HTTP 方法（POST、PUT 等）都会违反策略。&lt;/li&gt;
&lt;li&gt;路径是 &lt;code&gt;/payments/customer_id&lt;/code&gt;。注意，customer_id 没有加引号，这意味着它是一个变量，需要在调用时被替换。&lt;/li&gt;
&lt;li&gt;用户也应该是 customer_id。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果我们把这段代码翻译成普通英语，它看起来就像这样。&lt;/p&gt;
&lt;p&gt;“如果请求使用的方法是 GET，路径是 &lt;code&gt;/payments/customer_id&lt;/code&gt;，并且用户是同一个 customer_id，则允许该请求。这实际上允许客户查看自己的支付数据。”&lt;/p&gt;
&lt;p&gt;Rego playground 还允许你评估你的代码，并确保该策略将按预期工作。在 INPUT 面板中，我们可以通过添加以下代码来伪造一个合法请求。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;payments&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bob&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;bob&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，INPUT 使用的是任意的 JSON。在提供请求时，没有特定的规则可以遵循。现在，让我们看看 OPA 将如何通过按下 Evaluate 按钮来响应这个决策请求。OUTPUT 面板应该显示如下内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面是执行上述步骤后的 playground 截图。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryelon0ufj318g0epabz_hu1923931248965786276.webp 400w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryelon0ufj318g0epabz_hu9594442963911677354.webp 760w,
               /blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryelon0ufj318g0epabz_hu612602815126269852.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/introducing-policy-as-code-the-open-policy-agent-opa/008i3skNly1gryelon0ufj318g0epabz_hu1923931248965786276.webp&#34;
               width=&#34;760&#34;
               height=&#34;252&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现在，让我们试着把请求中的用户改为 alice，这意味着一个客户正试图查看另一个客户的付款。如果我们按 Evaluate 键，你会发现输出显示一个空的 JSON 对象 {}。原因是，OPA 不知道当策略不匹配时应该发送什么。要改变这种行为，在策略的主体前添加以下语句。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;default allow = false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因此，整个策略应该是这样的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package play

# Customers should be able to view their own payments
default allow = false
allow = true {
	input.method = &amp;#34;GET&amp;#34;
      input.path = [&amp;#34;payments&amp;#34;, customer_id]
      input.user = customer_id
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在，如果你按下 Evaluate，你会看到预期的输出。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，这个 playground 非常强大，你可以选择策略的一部分，并独立于策略的其他部分进行评估。当你有一个复杂的策略，当它不应该被评估为假时，这可能是超级有用的。在这种情况下，你可以选择策略的部分内容，看看到底哪里出现了缺陷。&lt;/p&gt;
&lt;p&gt;好了，现在我们已经执行了策略的第一部分，让我们继续第二部分：财务部门的工作人员应该能够查看任何客户的付款。&lt;/p&gt;
&lt;p&gt;在我们之前定义的策略后面添加以下几行。&lt;/p&gt;
&lt;p&gt;财务部门的工作人员可以查看任何客户的付款。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;allow = true {
    input.method = &amp;#34;GET&amp;#34;
    input.path = [&amp;#34;payments&amp;#34;, customer_id]
    finance[input.user]
}

finance = {&amp;#34;john&amp;#34;,&amp;#34;mary&amp;#34;,&amp;#34;peter&amp;#34;,&amp;#34;vivian&amp;#34;}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个策略的大部分内容与之前的相似，除了第 4 行。我们不是评估用户 ID 是否与客户 ID 相同，而是评估用户是否是财务 JSON 对象的一部分。Rego 有很多内置结构，允许你做很多有用的事情，包括查找。最后，我们定义财务对象并添加在该组中工作的员工的用户名。在现实世界中，这个 JSON 对象将作为 INPUT 请求的一部分或作为一个标记传递。现在，让我们通过将用户和客户设置为相同的名字（例如，Bob）来测试该策略。该策略应该返回 true。将用户改为 john（他是财务部门的一部分），并测试该策略。同样，它应该返回真。最后，将用户改为不在财务部门工作的任何名字（比方说，jane），该策略应该返回错误。&lt;/p&gt;
&lt;p&gt;你可以参考&lt;a href=&#34;https://www.openpolicyagent.org/docs/latest/policy-language/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档&lt;/a&gt;，阅读更多关于 Rego 语言和你能用它做什么。&lt;/p&gt;
&lt;h2 id=&#34;将-opa-与其他系统集成&#34;&gt;将 OPA 与其他系统集成&lt;/h2&gt;
&lt;p&gt;如前所述，OPA 可以与当今的许多平台集成。让我们来看看 OPA 可以为你做什么的几个例子。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确保入口主机名只由前端团队改变。&lt;/li&gt;
&lt;li&gt;拒绝拉取任何镜像，除了来自企业 Docker 注册中心的镜像。&lt;/li&gt;
&lt;li&gt;对集群上创建的任何 pod 强制使用请求和限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;API 授权&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可以将 OPA 与 Envoy、Istio 和其他平台一起使用，强制执行 IAM 控制。例如，你可以轻松控制安全人员对敏感数据的访问。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux PAM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可插拔认证模块（PAM）长期以来一直被用于 Linux，为包括 SSH 和 sudo 在内的多种服务提供细粒度的控制。OPA 有一个 PAM 插件，使其能够与 PAM 集成并执行策略。例如，你可以限制 SSH 对你的生产机器的访问，除非在非工作时间，或者除非用户有一个支持工单。&lt;/p&gt;
&lt;p&gt;还有许多其他产品可以与 OPA 集成，提供无穷的可能性。例如，Kafka、ElasticSearch、SQLite 和 CEPH，仅举几例。&lt;/p&gt;
&lt;h2 id=&#34;概要总结&#34;&gt;概要总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;对授权的需求和软件本身一样古老。&lt;/li&gt;
&lt;li&gt;由于缺乏一个可以在不同系统和平台之间使用的中央授权系统，导致了许多问题。例如，API 可能有自己的授权逻辑内置于代码中，其他微服务可能依赖于一个或多个外部授权系统。这使得推出新的策略，检查现有策略的版本，甚至引入小的变化都是非常具有挑战性的操作。&lt;/li&gt;
&lt;li&gt;OPA 就像一个服务顾问，为需要的服务做出授权决策。服务向 OPA 提出决策查询，然后 OPA 根据已经存储在其中的策略审查查询，并作出决策回应。&lt;/li&gt;
&lt;li&gt;OPA 的设计是通用的，与平台无关。因此，在发送查询或定义输出的样子时，你不需要遵循任何规则。请求和响应是以 JSON 格式发送的。&lt;/li&gt;
&lt;li&gt;策略可以用 Rego 编写，这是一种专门为 OPA 设计的语言。类似于 JavaScript，OPA 使其非常容易将纯英语规则转换为有效的 OPA 策略。&lt;/li&gt;
&lt;li&gt;Rego playground 工具是一个很好的方法，可以在实施策略之前尝试你的策略。&lt;/li&gt;
&lt;li&gt;OPA 可以作为 Go 库部署，成为应用程序二进制的一部分，也可以作为独立的守护程序。&lt;/li&gt;
&lt;li&gt;由于策略决策发生在每个 API 请求中，强烈建议将 OPA 守护程序尽可能紧密地放在应用程序中。例如，作为 Kubernetes pod 中的一个 sidecar 容器，或者作为一个运行在节点上的守护程序。这种做法有助于减少延迟和减少网络流量。&lt;/li&gt;
&lt;li&gt;OPA 使用了许多 API，可以很容易地注入新策略，检查现有策略的版本和状态，或收集审计和日志数据。&lt;/li&gt;
&lt;li&gt;在这篇文章中，我们看了一个简单的演示，即如何使用 Rego 语言来执行一个策略。在这个例子中，我们展示了通过 Rego 语言和 playground 工具来执行一个复杂的策略并对其进行测试是多么容易。&lt;/li&gt;
&lt;li&gt;OPA 可以与许多现代的系统和平台集成，如 Kubernetes、Kafka、SQLite、CEPH 和 Terraform。通过 PAM 插件，它还可以与 Linux PAM 集成，对使用 PAM 的 Linux 守护进程（如 sshd 和 sudo）实施高级策略控制。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hadoop 时代或将落幕，Cloudera 将被私有化</title>
      <link>https://cloudnative.to/blog/cloudera-to-go-private-as-kkr-cdr-grab-it-for-5-3b/</link>
      <pubDate>Tue, 01 Jun 2021 11:50:46 +0800</pubDate>
      <guid>https://cloudnative.to/blog/cloudera-to-go-private-as-kkr-cdr-grab-it-for-5-3b/</guid>
      <description>&lt;p&gt;北京时间 6 月 1 日晚，据 &lt;a href=&#34;https://techcrunch.com/2021/06/01/cloudera-to-go-private-as-kkr-cdr-grab-it-for-5-3b/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TechCrunch 报道&lt;/a&gt;，KKR 和 CD&amp;amp;R 将以 53 亿美元收购 Cloudera，Cloudera 将被私有化。截止到本文发稿，11 点 49 分，Cloudera 股票报价 15.94 美元，涨幅 23.95%。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cloudera-股价&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Cloudera 股价&#34; srcset=&#34;
               /blog/cloudera-to-go-private-as-kkr-cdr-grab-it-for-5-3b/008i3skNly1gr379cnii9j30u01fh1ee_hu1625581439052198458.webp 400w,
               /blog/cloudera-to-go-private-as-kkr-cdr-grab-it-for-5-3b/008i3skNly1gr379cnii9j30u01fh1ee_hu14390663675126227829.webp 760w,
               /blog/cloudera-to-go-private-as-kkr-cdr-grab-it-for-5-3b/008i3skNly1gr379cnii9j30u01fh1ee_hu11543017031436369117.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cloudera-to-go-private-as-kkr-cdr-grab-it-for-5-3b/008i3skNly1gr379cnii9j30u01fh1ee_hu1625581439052198458.webp&#34;
               width=&#34;443&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Cloudera 股价
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cloudera.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloudera&lt;/a&gt;曾经是最热门的 Hadoop 初创公司之一，但是随着时间的推移，这个市场的光芒不再，今天它将被私有化，因为 KKR 和 Clayton Dubilier &amp;amp; Rice 这两家私募股权公司宣布他们打算以 53 亿美元收购 Cloudera。目前该公司的市值约为 37 亿美元。&lt;/p&gt;
&lt;p&gt;Cloudera 和 Hortonworks 是 Hadoop 领域的两家重要初创公司，于&lt;a href=&#34;https://techcrunch.com/2018/10/03/cloudera-and-hortonworks-announce-5-2-billion-merger/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018 年以 52 亿美元的价格合并&lt;/a&gt;。Cloudera 可能受到激进投资者 Carl Icahn 的压力，他在 2019 年持有该公司&lt;a href=&#34;https://siliconangle.com/2019/08/12/activist-investor-carl-icahn-shakes-cloudera/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;18% 的股份&lt;/a&gt;，现在可以从这次出售中获益，该公司表示，每股 16 美元的价格对股东有 24% 的溢价。今早开市前，该公司的股价为 12.86 美元。&lt;/p&gt;
&lt;p&gt;早在十年前，当 Hadoop 成为处理大数据的方式时，风险资金就涌入了这个领域。随着时间的推移，它失去了一些光辉。因为它是高度劳动密集型的，公司开始转移到云端，并寻找能为他们做更多工作的软件服务。像数据湖这样的更现代的技术开始取代它，该公司认识到它必须改变其方法以在现代数据处理市场中生存。&lt;/p&gt;
&lt;p&gt;Cloudera 首席执行官 Rob Bearden 认为这项交易正是实现这一目标的一种方式。&amp;ldquo;Bearden 在一份声明中说：&amp;ldquo;我们相信，作为一家拥有 CD&amp;amp;R 和 KKR 等经验丰富的投资者的专业知识和支持的私营公司，Cloudera 将拥有资源和灵活性来推动以产品为主导的增长，并扩大我们的市场机会。&lt;/p&gt;
&lt;p&gt;虽然该声明中有很多行政术语，但它基本上意味着该公司希望这些私募股权公司能够给它一些额外的财政资源，以便向处理大量数据的更现代的方法前进。&lt;/p&gt;
&lt;p&gt;在此过程中，Cloudera 还宣布了自己的几项收购，以帮助其实现现代化的目标。首先，Cloudera 收购了&lt;a href=&#34;https://techcrunch.com/2018/11/08/datacoral-raises-10m-series-a-for-its-data-infrastructure-service/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Datacoral&lt;/a&gt;，这家初创公司将构建数据管道所需的基础设施抽象化，而无需使用代码。它还收购了&lt;a href=&#34;https://techcrunch.com/tag/cazena/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cazena&lt;/a&gt;，一家帮助客户建立云数据湖的初创公司，为公司提供了处理大数据的更现代的方法。Bearden 认为这两项服务有助于 Cloudera 在大数据自助服务市场上重新定位。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;这两项业务将使我们合并后的客户享受到复杂性的降低和更快的数据计划价值实现时间，从而提高洞察力，加快创新，并与客户和合作伙伴进行更有力的合作，&amp;ldquo;Bearden 在一份声明中说。&lt;/p&gt;
&lt;p&gt;Cloudera 在&lt;a href=&#34;https://techcrunch.com/2017/04/28/cloudera-finishes-up-20-in-stock-market-debut/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2018 年上市&lt;/a&gt;，在筹集了 10 亿美元后以每股 18.09 美元的价格收盘。其中绝大部分是英特尔资本在 2014 年的&lt;a href=&#34;https://techcrunch.com/2014/03/31/intel-pours-740m-into-cloudera-in-exchange-for-an-18-stake/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;7.4 亿美元的投资&lt;/a&gt;。值得注意的是，Cloudera 在去年年底以 3.14 亿美元&lt;a href=&#34;https://www.marketwatch.com/story/cloudera-buys-back-intels-stake-11608759285&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;收购了英特尔在该公司的股份&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Hortonworks 又筹集了 2.48 亿美元。第三家 Hadoop 创业公司，MapR 筹集了 2.8 亿美元。该公司的资产在 2019 年以低于 5000 万美元的价格相当惨淡地&lt;a href=&#34;https://www.barrons.com/articles/hp-enterprise-buys-assets-of-ai-startup-mapr-51565028280&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;卖给了 HPE&lt;/a&gt;，这表明 Hadoop 市场&lt;a href=&#34;https://techcrunch.com/2019/08/07/with-mapr-fire-sale-hadoops-promise-has-fallen-on-hard-times/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;早已落幕&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Cloudera 的交易包括一个简短的 &amp;ldquo;go shop&amp;quot;条款，允许它继续寻找一个更好的交易。它是否能找到这样的交易值得怀疑，如果找不到，与 KKR 和 CD&amp;amp;R 的交易预计将在今年下半年完成，但需要经过监管审查。该公司将在今天晚些时候公布收益。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>蚂蚁开源 OceanBase，开源分布式数据库领域又迎新玩家</title>
      <link>https://cloudnative.to/blog/ant-oceanbase-open-source/</link>
      <pubDate>Tue, 01 Jun 2021 11:50:46 +0800</pubDate>
      <guid>https://cloudnative.to/blog/ant-oceanbase-open-source/</guid>
      <description>&lt;p&gt;今天是六一儿童节，蚂蚁选择在今天开源 &lt;a href=&#34;https://open.oceanbase.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OceanBase&lt;/a&gt;，想必是给各位分布式数据库用户送上的儿童节礼物吧！昨日凌晨蚂蚁已将代码推送到 GitHub：&lt;a href=&#34;https://github.com/oceanbase/oceanbase&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/oceanbase/oceanbase&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本次开源的是 OceanBase 社区版，这是一款开源分布式 HTAP（Hybrid Transactional/Analytical Processing）数据库管理系统，具有原生分布式架构，支持金融级高可用、透明水平扩展、分布式事务、多租户和语法兼容等企业级特性。OceanBase 内核通过大规模商用场景的考验，已服务众多行业客户，现面向未来持续构建内核技术竞争力。&lt;/p&gt;
&lt;p&gt;OceanBase 社区版具有以下特点。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-oceanbase-社区版本特点&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;OceanBase 社区版本特点&#34; srcset=&#34;
               /blog/ant-oceanbase-open-source/008i3skNly1gr2iyaekxpj31re0u0woc_hu14363582392042946587.webp 400w,
               /blog/ant-oceanbase-open-source/008i3skNly1gr2iyaekxpj31re0u0woc_hu7976160361243192727.webp 760w,
               /blog/ant-oceanbase-open-source/008i3skNly1gr2iyaekxpj31re0u0woc_hu13274621978103066725.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/ant-oceanbase-open-source/008i3skNly1gr2iyaekxpj31re0u0woc_hu14363582392042946587.webp&#34;
               width=&#34;760&#34;
               height=&#34;359&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      OceanBase 社区版本特点
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;不同版本对比。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-oceanbase-版本对比&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;OceanBase 版本对比&#34; srcset=&#34;
               /blog/ant-oceanbase-open-source/008i3skNly1gr2iyt3j55j31qh0u0q94_hu16482877353794937878.webp 400w,
               /blog/ant-oceanbase-open-source/008i3skNly1gr2iyt3j55j31qh0u0q94_hu2313580607729846844.webp 760w,
               /blog/ant-oceanbase-open-source/008i3skNly1gr2iyt3j55j31qh0u0q94_hu6324588071095498664.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/ant-oceanbase-open-source/008i3skNly1gr2iyt3j55j31qh0u0q94_hu16482877353794937878.webp&#34;
               width=&#34;760&#34;
               height=&#34;365&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      OceanBase 版本对比
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;oceanbase-社区组织架构&#34;&gt;OceanBase 社区组织架构&lt;/h3&gt;
&lt;p&gt;OceanBase 社区治理架构借鉴 Apache 基金会的运作模式，角色分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;技术委员会（Technical Oversight Committee）：是 OceanBase 社区的技术管理机构，负责 OceanBase 社区相关的技术类重大事件决议。&lt;/li&gt;
&lt;li&gt;PMC（Project Management Committee）：单个项目的项目管理委员会，为项目核心管理团队，参与 Roadmap 和本项目重大决议决策。&lt;/li&gt;
&lt;li&gt;Committer：具有代码提交能力的开发者。&lt;/li&gt;
&lt;li&gt;Contributor：曾做过代码贡献的开发者。&lt;/li&gt;
&lt;li&gt;Community Leader：社区用户布道师。&lt;/li&gt;
&lt;li&gt;Ambassador：帮助推广，使用，答疑 OceanBase 的用户&lt;/li&gt;
&lt;li&gt;城市站社区管理者：帮助推广的城市线下的热心用户&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;未来分布式数据库领域是否还会有更多的开源项目出现，这个领域的竞争也许会变得更加白热化吧，我们拭目以待。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KrakenD API 网关更名为 Lura 项目并宣布加入了 Linux 基金会</title>
      <link>https://cloudnative.to/blog/krakend-api-gateway-joins-the-linux-foundation-as-the-lura-project/</link>
      <pubDate>Tue, 18 May 2021 12:03:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/krakend-api-gateway-joins-the-linux-foundation-as-the-lura-project/</guid>
      <description>&lt;h2 id=&#34;关于-lura-项目&#34;&gt;关于 Lura 项目&lt;/h2&gt;
&lt;p&gt;近日，&lt;a href=&#34;https://www.luraproject.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lura 项目&lt;/a&gt;，原名为 KrakenD 的开源框架，加入了 &lt;a href=&#34;https://training.linuxfoundation.org/training/course-catalog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux 基金会&lt;/a&gt;，根据一份新闻声明，“它将是唯一一个在中立、开放论坛中托管的企业级 API 网关”。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.krakend.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KrakenD API 网关&lt;/a&gt;的联合创始人兼首席执行官 &lt;a href=&#34;https://www.linkedin.com/in/alombarte/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Albert Lombarte&lt;/a&gt; 说，该项目现在每月活跃在 100 多万台服务器上。转到 Linux 基金会后，将技术放在了第一位，而不是企业公司的需求。&lt;/p&gt;
&lt;p&gt;“我们是真正的开源信徒，我们相信开源是这个项目的归宿，“Lombarte 说。“我们已经看到，技术与 API 网关玩得不好，所采取的做法不是技术的最佳做法，“而是为了营销或销售产品的需要，为了锁定客户。“而我们希望能解放这一点，“他指出。&lt;/p&gt;
&lt;p&gt;KrakenD API 网关建立在现在被称为 Lura 项目的基础上，Lombarte 解释说，KrakenD 是一个有主见的实现，即它注重速度而不是其他功能。Lura 是一个构建 API 网关的框架，可以根据企业的需求进行定制。它是为速度和可扩展性而设计的。Lombarte 说，Lura 用 Go 语言构建，是一个无状态、高性能的 API 网关框架，为云原生和内部设置而设计，无状态是一个区别点。&lt;/p&gt;
&lt;p&gt;“如果你采取传统的 API 网关，你会发现配置是存储在数据库上的。我们没有任何形式的数据库，所以所有的配置都在一个静态的配置文件中，“Lombarte 说。&amp;quot; &lt;strong&gt;如果你想改变网关的状态，你必须重新部署另一个版本的网关。它就像今天任何公司的任何微服务一样工作。这就是我们和有状态网关的主要区别。&lt;/strong&gt;”&lt;/p&gt;
&lt;p&gt;此外，有状态网关的问题是可扩展性，Lombarte 说。“因为它们通常连接到一个数据库，而这个数据库是唯一的真实数据来源，所有的节点都需要协调。因此，如果你去找大客户，他们无法正常扩展，因为他们有一个瓶颈，那就是数据库。我们节点甚至不互相通信，所以它们可以线性地扩展到无限大。”&lt;/p&gt;
&lt;p&gt;Lura 的另一个区别点是，其 API 网关超越了传统的 API 网关，&lt;strong&gt;作为多个微服务的聚合器发挥作用，而不是简单地作为一个扩展的代理&lt;/strong&gt;。Lombarte 说，市场上的所有 API 网关都只是“中间有共享关注点的代理”，API 调用到达一个单一的后端服务。相反，Lura 允许聚集许多后端服务，可以通过调用它创建的单一 API 端点到达，而且这些后端服务中的每一个实际上也可以提供不同的 API 类型。&lt;/p&gt;
&lt;p&gt;“当你广泛地谈论 API 网关时，人们通常会想到 API 网关将授权请求，也许还有速率限制。这是每个人对 API 网关的理解，但这只是用其他东西进行代理，“Lombarte 说。“我们所做的是，我们创建一个新的 API，所以你不再消费你的后台，你在消费我们的 API 网关。这就像前端的一个后端。&lt;strong&gt;我们比市场上任何其他 API 网关更接近 GraphQL&lt;/strong&gt;&amp;quot;。&lt;/p&gt;
&lt;p&gt;Lombarte 说，如果你正在寻找这些强调速度的功能，那么 KrakenD 可能是正确的选择，但如果你需要专注于其他功能，那么 Lura 就可以帮助建立你需要的功能。他说，只需 20 到 30 行代码，你就可以使用 Lura 建立并运行一个 API 网关。eBay 和 Mail.ru 是目前使用 Lura 的两个大机构的例子。他说，这项技术提供了速度和无限的线性可扩展性，但也允许他们根据自己的需要定制 API 网关。&lt;/p&gt;
&lt;h2 id=&#34;未来计划&#34;&gt;未来计划&lt;/h2&gt;
&lt;p&gt;在 Lura 捐赠给 Linux 基金会之后，Lombarte 说，Lura 2.0 预计将在不久的将来发布，路线图中的新功能是支持 GraphQL 和能够用自定义插件进一步扩展该项目。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RBAC vs ABAC，两者有何异同？</title>
      <link>https://cloudnative.to/blog/rbac-vs-abac/</link>
      <pubDate>Fri, 25 Dec 2020 10:03:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/rbac-vs-abac/</guid>
      <description>&lt;p&gt;在任何公司，网络用户必须经过认证和授权，才能访问系统中可能导致安全漏洞的部分。获得授权的过程称为访问控制。在本指南中，我将讨论管理系统访问控制的两种主要方法 —— 基于角色的访问控制（RBAC）和基于属性的存取控制（ABAC）它们的差异，以及使用访问权限管理工具的重要性。&lt;/p&gt;
&lt;h2 id=&#34;认证和授权&#34;&gt;认证和授权&lt;/h2&gt;
&lt;p&gt;安全的两个基本方面是认证和授权。在您输入凭证登录电脑或登录应用程序或软件后，设备或应用程序会进行身份验证，以确定您的授权级别。授权可能包括您可以使用哪些账户，您可以访问哪些资源，以及允许您执行哪些功能。&lt;/p&gt;
&lt;h2 id=&#34;基于角色的访问控制rbac与基于属性的访问控制abac&#34;&gt;基于角色的访问控制（RBAC）与基于属性的访问控制（ABAC）&lt;/h2&gt;
&lt;p&gt;基于角色的访问控制（RBAC）和基于属性的访问控制（ABAC）是控制认证过程和授权用户的两种方法。RBAC 和 ABAC 之间的主要区别是 RBAC 基于用户角色提供对资源或信息的访问，而 ABAC 基于用户、环境或资源属性提供访问权限。从本质上讲，当考虑 RBAC 与 ABAC 时，RBAC 控制整个组织的广泛访问，而 ABAC 则采取细粒度的方法。&lt;/p&gt;
&lt;h3 id=&#34;什么是-rbac&#34;&gt;什么是 RBAC？&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/rbac-vs-abac/0081Kckwly1gm04pyv4mtj30sg0ewgmd_hu18308434847024456798.webp 400w,
               /blog/rbac-vs-abac/0081Kckwly1gm04pyv4mtj30sg0ewgmd_hu2934746592193090462.webp 760w,
               /blog/rbac-vs-abac/0081Kckwly1gm04pyv4mtj30sg0ewgmd_hu13313991206307480448.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/rbac-vs-abac/0081Kckwly1gm04pyv4mtj30sg0ewgmd_hu18308434847024456798.webp&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;RBAC 是基于角色的，所以根据你在组织中的角色而拥有不同的访问权限。这是由管理员决定的，管理员会设置一个角色应该拥有的访问权限，以及用户与角色的对应关系。例如，有的用户可能被分配到一个角色，可以编辑特定的文件，而其他用户可能被限制在一个角色中，只能读取该文件而不能编辑。&lt;/p&gt;
&lt;p&gt;用户与角色是一对多的关系，这使得用户拥有可以访问许多不同的文件或能力。比如说有一个团队在做一个大型项目。项目经理可以访问和编辑所有的文件，而开发团队可能只被允许访问代码文件，而无法看到或编辑项目的财务和员工信息。人力资源或管理团队可以访问所有的员工和财务信息，而不能访问编程文件。&lt;/p&gt;
&lt;p&gt;组织可能会将 RBAC 用于这样的项目，因为有了 RBAC，不需要在每次一有人离职或更换岗位时都进行更改：他们可以简单地从角色组中删除或分配一个新的角色。这也意味着新员工可以根据他们所履行的组织角色，相对快速地被授予访问权限。&lt;/p&gt;
&lt;h3 id=&#34;什么是-abac&#34;&gt;什么是 ABAC？&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/rbac-vs-abac/0081Kckwly1gm04qu9t1ej30sg0ewq3m_hu2246407410152402154.webp 400w,
               /blog/rbac-vs-abac/0081Kckwly1gm04qu9t1ej30sg0ewq3m_hu10629301800008416729.webp 760w,
               /blog/rbac-vs-abac/0081Kckwly1gm04qu9t1ej30sg0ewq3m_hu1270047344613832323.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/rbac-vs-abac/0081Kckwly1gm04qu9t1ej30sg0ewq3m_hu2246407410152402154.webp&#34;
               width=&#34;760&#34;
               height=&#34;397&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;基于属性的访问控制利用了一组称为“属性“的特征。这包括&lt;strong&gt;用户属性&lt;/strong&gt;、&lt;strong&gt;环境属性&lt;/strong&gt;和&lt;strong&gt;资源属性&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户属性包括用户的姓名、角色、组织、ID 和安全许可等内容。&lt;/li&gt;
&lt;li&gt;环境属性包括访问时间、数据的位置和当前组织的威胁等级。&lt;/li&gt;
&lt;li&gt;资源属性包括诸如创建日期、资源所有者、文件名和数据敏感性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本上，ABAC 比 RBAC 有更多可能的控制变量。ABAC 的实施是为了降低因未经授权的访问而产生的风险，因为它可以在更细粒度地控制安全和访问。例如，ABAC 可以对他们的访问进行进一步的限制，比如只允许在特定的时间或与相关员工相关的某些分支机构进行访问，而不是让人力资源部门的人员总是能够访问员工和工资信息。这样可以减少安全问题，也可以帮助以后的审计过程。&lt;/p&gt;
&lt;h3 id=&#34;rbac-与-abac-的比较&#34;&gt;RBAC 与 ABAC 的比较&lt;/h3&gt;
&lt;p&gt;一般来说，有 RBAC 就足够了，应该在设置 ABAC 优先考虑使用它。这两个访问控制过程都是过滤器，ABAC 是两个过程中比较复杂的，需要更多的处理能力和时间。如果你不需要，就没有必要使用这种更强大的过滤器 —— 这会产生相应的资源成本。&lt;/p&gt;
&lt;p&gt;无论哪种方式，使用最少数量的 RBAC 和 ABAC 过滤器来构建你的访问和安全环境是很重要的。它可以帮助仔细规划你的目录数据和访问方法，以确保你没有使用不必要的过滤器或使事情过于复杂。在许多情况下，RBAC 和 ABAC 可以分级地一起使用，广泛的访问由 RBAC 协议执行，更复杂的访问由 ABAC 管理。这意味着系统将首先使用 RBAC 来确定谁可以访问一个资源，然后由 ABAC 来确定他们可以对资源做什么以及何时可以访问。&lt;/p&gt;
&lt;h2 id=&#34;使用访问管理工具&#34;&gt;使用访问管理工具&lt;/h2&gt;
&lt;p&gt;无论你是使用 RBAC 还是 ABAC，或者是两者的结合，我都强烈建议使用访问权限管理工具。一个好的工具可以简化设置并减少设置和管理过滤器所涉及的管理费用。当涉及到安全问题时，认真规划和监控您的访问控制流程是至关重要的。使用强大的访问管理工具来帮助您设置访问控制，并定期审查您的设置，以确保它仍然符合您的组织需求。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>基于角色的访问控制（RBAC）存在的问题</title>
      <link>https://cloudnative.to/blog/problem-with-rbac/</link>
      <pubDate>Fri, 25 Dec 2020 10:03:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/problem-with-rbac/</guid>
      <description>&lt;p&gt;直到最近，最流行的授权方法是基于角色的访问控制（RBAC）。这种解决方案涉及到创建一套角色，定义组织内所有的工作描述和功能，然后给用户分配角色，决定他们可以访问的内容（例如，文件、网络、应用程序、网页上的一个字段），以及他们可以执行的操作。&lt;/p&gt;
&lt;p&gt;当使用 RBAC 时，系统管理员可以控制用户可以对特定的 IT 资源做什么，以及他们可以访问哪些区域。它的实现很简单，因为只有三个基本原则需要牢记，角色是基于“角色分配”、“角色授权“和“权限授权“的。然而，RBAC 并非没有问题和局限性。其中一个主要问题是，它不是一个自动的过程，这意味着它需要进行艰苦的管理，并且经常涉及大量的人工干预。&lt;/p&gt;
&lt;p&gt;例如，假设你的组织结构图已经和你的员工名单以及他们的头衔一起最终确定，你已经准备好推出你的 RBAC 计划。你已经把所有的角色摆在你面前，你很自信，他们都有明确的定义，并且有正确的汇报线和控制范围。突然间，市场部副总裁提到，他们部门里有一些人需要访问某些资源、共享文件夹和专门的应用程序，而这些资源和应用程序只有其他部门的角色才能使用。你不能对副总裁说“不”，所以你检查已有的映射，并试图找到一组额外的符合要求的角色。但这并不容易，因为没有完全匹配的角色。那么你要做什么呢？创建一个额外的角色，然后把它应用到所有有类似需求的员工身上就行了？通常情况下，这可能是你唯一的选择，因为根据内部安全政策，拆分现有角色可能是严格禁止的，因为这样做会削弱 RBAC 模型的有效性。&lt;/p&gt;
&lt;p&gt;RBAC 在管理用户身份和访问权限上存在根本性缺陷。其固有的弱点在于它的笨重性、对人工输入的依赖性以及需要持续维护。动态的组织需要动态的访问控制。所有这些因素结合在一起，形成了一个不安全的 IAM 结构。&lt;/p&gt;
&lt;p&gt;“大多数基于角色的访问控制项目失败的原因是缺乏基础，“PeaceHealth 的 Christopher Paidhrin 说。“每个组织都需要评估他们是否为基于角色的访问做好了准备。有效的基于角色的访问管理需要做很多工作，在能够有效管理之前，还有很多工作需要进入分析过程”。&lt;/p&gt;
&lt;p&gt;我们来看看 RBAC 的主要挑战。&lt;/p&gt;
&lt;h2 id=&#34;问题-1角色爆炸&#34;&gt;问题 1：角色爆炸&lt;/h2&gt;
&lt;p&gt;如果营销副总裁的访问请求场景听起来很熟悉，那是因为它经常发生。当您的访问控制所需的颗粒度过于详细时，就会发生角色爆炸。角色爆炸很难管理，成本很高，并且使访问控制变得混乱和复杂，降低了访问控制的有效性。此外，当在你的访问控制部署中添加更多的角色时，还有一些其他的问题需要仔细监控。其中一个问题是，当一个用户被分配了太多的角色，然后在公司内部改变了工作或职责时，就会出现这样的问题。IT 系统管理员要么忘记了，要么甚至有意识地决定将旧角色留在原地。角色的数量会导致安全漏洞，而这些漏洞往往难以发现和弥补。&lt;/p&gt;
&lt;h2 id=&#34;问题-2安全风险承受能力&#34;&gt;问题 2：安全风险承受能力&lt;/h2&gt;
&lt;p&gt;作为一个系统管理员，了解系统的风险是很重要的。进行安全风险分析，并制定积极的风险防范计划，对 RBAC 的部署至关重要。RBAC 是以数据为中心的；数据被归类为与组织结构相关的数据，这就导致了访问控制角色的定义。如果你的组织对安全风险是被动的，RBAC 可能不是保障网络数据访问安全的最佳方式。&lt;strong&gt;RBAC 要求你在部署前对公司的安全布局和权限授予方式有深入的了解。&lt;/strong&gt; 一旦部署后，很难对不断变化的安全威胁和风险做出反应。因此，要小心谨慎，并对您的 RBAC 政策进行“两次测量，一次切割”。在一个由于数据隐私和保护法规不断变化而对安全有效性进行更严格审查的时代，这种安全模式的淡化大大增加了数据泄露的风险，在财务和声誉上都会产生重大后果。&lt;/p&gt;
&lt;h2 id=&#34;问题-3可扩展性和动态性&#34;&gt;问题 3：可扩展性和动态性&lt;/h2&gt;
&lt;p&gt;是的，在 RBAC 部署之初，你清楚地知道你需要定义哪些角色，以及需要将它们分配给谁。但是，现在已经过了一年，组织已经成长了。更多的人加入了公司，在匆匆忙忙的入职过程中，组织结构图和工作定义没有得到更新或明确定义。&lt;/p&gt;
&lt;p&gt;这就是 RBAC 难以维护和管理的地方。这些“死角“限制了你的部署的可扩展性，可能需要重新设计才能回到正轨。更糟糕的是，由于潜在的时间压力，你可能需要实施一个“变通“的解决方案，从长远来看，它可能会助长问题，而不是纠正它。几乎就像一个 IAM whac-a-mole 游戏，你要不断解决新的问题。&lt;/p&gt;
&lt;p&gt;这更多的时候是每两到三年一次的重大返工周期，如果有的话，是为了弥补角色分类学缺乏增量管理，以符合组织结构的变化需求，而组织结构仍然是动态的、反应性的，因为它必须对客户的需求和数字世界中更敏捷的业务模式做出反应。&lt;/p&gt;
&lt;h2 id=&#34;问题-4成本高实施难&#34;&gt;问题 4：成本高、实施难&lt;/h2&gt;
&lt;p&gt;您的公司已经使用计算机并收集数据很长时间了，但从未真正需要任何形式的访问控制作为组织安全政策的一部分。如果你需要堵住漏洞，并决定采用 RBAC，你可能会发现需要复制服务器和其他支持 RBAC 的基础设施，成本过高，增加了复杂性。你还需要考虑在淘汰旧系统的同时将用户迁移到新系统的成本和风险。大多数情况下，迁移会遇到各种困难和不可预见的挑战，并导致两个系统中的安全漏洞以及其他代价高昂的缺陷，如计划外停机和数据丢失。&lt;/p&gt;
&lt;h2 id=&#34;集成-rbac实现稳健灵活的访问控制&#34;&gt;集成 RBAC，实现稳健灵活的访问控制&lt;/h2&gt;
&lt;p&gt;如果你从来没有计划重新分配员工或与合作伙伴合作，RBAC 本身就是一种管理数据和系统资源访问的好方法。然而，没有一个组织结构是一成不变的，这使得 RBAC 方法在一个动态的商业环境中变得很麻烦。我们经常看到公司在他们的人力资源系统、Active Directory 和 IGA 之间建立集成，以实现同步的角色创建和持续的角色生命周期管理。这些集成不仅昂贵，而且脆弱，难以维护，最终不能产生预期的结果。&lt;/p&gt;
&lt;p&gt;但并非所有的希望都落空了。将 RBAC 与其他类型的访问控制方法集成，可以让您创建一个强大的、精细的访问控制策略。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>基于 Red Hat OpenShift 4 构建 Paas、DevOps 平台</title>
      <link>https://cloudnative.to/blog/academy-6/</link>
      <pubDate>Tue, 20 Oct 2020 14:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/academy-6/</guid>
      <description>&lt;p&gt;云原生社区邀请 RHCA Level 5，红帽资深解决方案架构师魏新宇，为大家带来分享「基于 Red Hat OpenShift 4 构建 Paas、DevOps 平台」。&lt;/p&gt;
&lt;p&gt;DevOps、微服务、PaaS 将成为 IT 技术发展的新趋势。越来越多的日常开发和生命周期任务正在实现自动化，通过现有数据流提供 AI 支持，通过灵活的 DevOps 管道驱动和孵化。生命周期和应用开发也会更加的智能化，越来越多的企业应用部署在 PaaS 平台上，使用微服务架构。&lt;/p&gt;
&lt;p&gt;OpenShift 是红帽推出的企业就绪型 Kubernetes 容器平台，可以实现全堆栈自动化运维，以管理混合云和多云部署。OpenShift 已进行过优化，可以提高开发人员的生产力并推动创新。&lt;/p&gt;
&lt;p&gt;如何通过 OpenShift 构建 DevOps 平台？为企业构建敏捷生态需要哪些路径？OpenShift 在 K8S 容器平台之上做了哪些增强？在微服务治理、容器安全、CI/CD 方面提供哪些创新和解决方案？&lt;/p&gt;
&lt;p&gt;本主题将会从容器云生态、容器安全、DevOps、微服务等领域介绍企业需求和 OpenShift 提供的企业级解决方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;讲师：魏新宇&lt;/li&gt;
&lt;li&gt;时间：2020 年 10 月 22 日（周四）晚 8 点 - 9 点&lt;/li&gt;
&lt;li&gt;地址：&lt;a href=&#34;https://live.bilibili.com/22230973&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://live.bilibili.com/22230973&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;直播提问：大家提前在本文留言区评论，由编辑整理好在直播中提问&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分享主题&#34;&gt;分享主题&lt;/h2&gt;
&lt;p&gt;《基于 Red Hat OpenShift 4 构建 Paas、DevOps 平台》&lt;/p&gt;
&lt;h2 id=&#34;分享嘉宾&#34;&gt;分享嘉宾&lt;/h2&gt;
&lt;p&gt;魏新宇 / 红帽资深解决方案架构师，RHCA Level 5&lt;/p&gt;
&lt;h2 id=&#34;分享大纲&#34;&gt;分享大纲&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;敏态 IT 构建之路&lt;/li&gt;
&lt;li&gt;OpenShift 的容器云生态&lt;/li&gt;
&lt;li&gt;OpenShift 对 K8S 的扩展和增强&lt;/li&gt;
&lt;li&gt;容器安全解决方案&lt;/li&gt;
&lt;li&gt;应用容器化方法和迁移流程&lt;/li&gt;
&lt;li&gt;应用部署和 CI/CD 实现方式&lt;/li&gt;
&lt;li&gt;企业微服务治理需求和解决方案&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;直播福利&#34;&gt;直播福利&lt;/h2&gt;
&lt;p&gt;观看直播参与互动，可获得机械工业出版社华章图书赞助，魏新宇、郭跃军撰写的《OpenShift 在企业中的实践：PaaS DevOps 微服务》。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-openshift&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./images/book-openshift.png&#34; alt=&#34;openshift&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      openshift
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本书从企业数字化转型入手，介绍企业如何通过 OpenShift 构建 PaaS 平台、实现 DevOps、实现微服务治理和微服务的高级管理。&lt;/p&gt;
&lt;p&gt;全书共分为四大部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分 PaaS 能力建设。即本书的“PaaS 三部曲”，包含第 2-4 章的内容，分别是：基于 OpenShift 构建企业级 PaaS、OpenShift 在企业中的开发和运维实践、OpenShift 在公有云上的实践。&lt;/li&gt;
&lt;li&gt;第二部分 DevOps 能力建设。即本书的“DevOps 两部曲”，包含第 5-6 章的内容，分别为：在 OpenShift 上实现 DevOps、DevOps 在企业中的实践。&lt;/li&gt;
&lt;li&gt;第三部分微服务能力建设。即本书“微服务三部曲”，包含第 7-9 章的内容，分别为：微服务介绍及 Spring Cloud 在 OpenShift 上落地、Istio 架构介绍与安装部署、基于 OpenShift 和 Istio 实现微服务落地。&lt;/li&gt;
&lt;li&gt;第四部分微服务高级管理。包含本书第 10 章的内容。介绍基于 OpenShft 和红帽其他解决方案微服务的高级管理（API 管理、分布式集成和流程自动化），并最终实现企业业务中台的建设。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用户收获&#34;&gt;用户收获&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;了解通过 OpenShift 构建敏态 IT 的路径以及建设中的经验&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关于云原生学院&#34;&gt;关于云原生学院&lt;/h2&gt;
&lt;p&gt;云原生学院（Cloud Native Academy）由云原生社区主办，致力于云原生知识的传播和普及。云原生学院将定期举办线上直播活动，邀请社区成员为大家带来云原生领域的知识和实践分享。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>eBPF 技术简介</title>
      <link>https://cloudnative.to/blog/bpf-intro/</link>
      <pubDate>Sun, 09 Aug 2020 14:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/bpf-intro/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-linux-年内和观测技术-bpf&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Linux 年内和观测技术 BPF&#34; srcset=&#34;
               /blog/bpf-intro/linux-bpf-book_hu1345859831218585850.webp 400w,
               /blog/bpf-intro/linux-bpf-book_hu2996865226085998791.webp 760w,
               /blog/bpf-intro/linux-bpf-book_hu17714897226042649699.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/linux-bpf-book_hu1345859831218585850.webp&#34;
               width=&#34;601&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Linux 年内和观测技术 BPF
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;由范老师和我一起翻译的图书《Linux 内核观测技术 BPF》已经在 JD 上有现货，欢迎感兴趣 BPF 技术的同学选购。链接地址 &lt;a href=&#34;https://item.jd.com/72110825905.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://item.jd.com/72110825905.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“eBPF 是我见过的 Linux 中最神奇的技术，没有之一，已成为 Linux 内核中顶级子模块，从 tcpdump 中用作网络包过滤的经典 cbpf，到成为通用 Linux 内核技术的 eBPF，已经完成华丽蜕变，为应用与神奇的内核打造了一座桥梁，在系统跟踪、观测、性能调优、安全和网络等领域发挥重要的角色。为 Service Mesh 打造了具备 API 感知和安全高效的容器网络方案 Cilium，其底层正是基于 eBPF 技术”&lt;/p&gt;
&lt;h2 id=&#34;1-bpf&#34;&gt;1. BPF&lt;/h2&gt;
&lt;p&gt;BPF（Berkeley Packet Filter），中文翻译为伯克利包过滤器，是类 Unix 系统上数据链路层的一种原始接口，提供原始链路层封包的收发。1992 年，Steven McCanne 和 Van Jacobson 写了一篇名为《BSD 数据包过滤：一种新的用户级包捕获架构》的论文。在文中，作者描述了他们如何在 Unix 内核实现网络数据包过滤，这种新的技术比当时最先进的数据包过滤技术快 20 倍。BPF 在数据包过滤上引入了两大革新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一个新的虚拟机 (VM) 设计，可以有效地工作在基于寄存器结构的 CPU 之上；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用程序使用缓存只复制与过滤数据包相关的数据，不会复制数据包的所有信息。这样可以最大程度地减少 BPF 处理的数据；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于这些巨大的改进，所有的 Unix 系统都选择采用 BPF 作为网络数据包过滤技术，直到今天，许多 Unix 内核的派生系统中（包括 Linux 内核）仍使用该实现。&lt;/p&gt;
&lt;p&gt;tcpdump 的底层采用 BPF 作为底层包过滤技术，我们可以在命令后面增加”-d“来查看 tcpdump 过滤条件的底层汇编指令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ tcpdump -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;ip and tcp port 8080&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ldh      &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;12&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;001&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; jeq      &lt;span class=&#34;c1&#34;&gt;#0x800           jt 2	jf 12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;002&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ldb      &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;23&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;003&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; jeq      &lt;span class=&#34;c1&#34;&gt;#0x6             jt 4	jf 12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;004&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ldh      &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;20&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;005&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; jset     &lt;span class=&#34;c1&#34;&gt;#0x1fff          jt 12	jf 6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;006&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ldxb     4*&lt;span class=&#34;o&#34;&gt;([&lt;/span&gt;14&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;0xf&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;007&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ldh      &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;x + 14&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;008&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; jeq      &lt;span class=&#34;c1&#34;&gt;#0x1f90          jt 11	jf 9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;009&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ldh      &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;x + 16&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;010&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; jeq      &lt;span class=&#34;c1&#34;&gt;#0x1f90          jt 11	jf 12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;011&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ret      &lt;span class=&#34;c1&#34;&gt;#262144&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;012&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ret      &lt;span class=&#34;c1&#34;&gt;#0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;图 1-1  tcpdump 底层汇编指令&lt;/p&gt;
&lt;p&gt;BPF 工作在内核层，BPF 的架构图如下 [来自于 bpf-usenix93]：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/tcpdump-bpf_hu3245480783839183849.webp 400w,
               /blog/bpf-intro/tcpdump-bpf_hu7791154659944021547.webp 760w,
               /blog/bpf-intro/tcpdump-bpf_hu13861664749006727326.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/tcpdump-bpf_hu3245480783839183849.webp&#34;
               width=&#34;760&#34;
               height=&#34;625&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图 1-2 tcpdump 运行架构&lt;/p&gt;
&lt;h2 id=&#34;2-ebpf&#34;&gt;2. eBPF&lt;/h2&gt;
&lt;h3 id=&#34;21-ebpf-介绍&#34;&gt;2.1 eBPF 介绍&lt;/h3&gt;
&lt;p&gt;2014 年初，Alexei Starovoitov 实现了 eBPF（extended Berkeley Packet Filter）。经过重新设计，eBPF 演进为一个通用执行引擎，可基于此开发性能分析工具、软件定义网络等诸多场景。eBPF 最早出现在 3.18 内核中，此后原来的 BPF 就被称为经典 BPF，缩写 cBPF（classic BPF），cBPF 现在已经基本废弃。现在，Linux 内核只运行 eBPF，内核会将加载的 cBPF 字节码透明地转换成 eBPF 再执行。&lt;/p&gt;
&lt;p&gt;eBPF 新的设计针对现代硬件进行了优化，所以 eBPF 生成的指令集比旧的 BPF 解释器生成的机器码执行得更快。扩展版本也增加了虚拟机中的寄存器数量，将原有的 2 个 32 位寄存器增加到 10 个 64 位寄存器。由于寄存器数量和宽度的增加，开发人员可以使用函数参数自由交换更多的信息，编写更复杂的程序。总之，这些改进使 eBPF 版本的速度比原来的 BPF 提高了 4 倍。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;维度&lt;/th&gt;
          &lt;th&gt;cBPF&lt;/th&gt;
          &lt;th&gt;eBPF&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;内核版本&lt;/td&gt;
          &lt;td&gt;Linux 2.1.75（1997 年）&lt;/td&gt;
          &lt;td&gt;Linux 3.18（2014 年）[4.x for kprobe/uprobe/tracepoint/perf-event]&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;寄存器数目&lt;/td&gt;
          &lt;td&gt;2 个：A, X&lt;/td&gt;
          &lt;td&gt;10 个：R0–R9, 另外 R10 是一个只读的帧指针&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;寄存器宽度&lt;/td&gt;
          &lt;td&gt;32 位&lt;/td&gt;
          &lt;td&gt;64 位&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;存储&lt;/td&gt;
          &lt;td&gt;16 个内存位：M[0–15]&lt;/td&gt;
          &lt;td&gt;512 字节堆栈，无限制大小的“map”存储&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;限制的内核调用&lt;/td&gt;
          &lt;td&gt;非常有限，仅限于 JIT 特定&lt;/td&gt;
          &lt;td&gt;有限，通过 bpf_call 指令调用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;目标事件&lt;/td&gt;
          &lt;td&gt;数据包、seccomp-BPF&lt;/td&gt;
          &lt;td&gt;数据包、内核函数、用户函数、跟踪点 PMCs 等&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;表格 1-1 cBPF 与 eBPF 对比&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;eBPF 在 Linux 3.18 版本以后引入，并不代表只能在内核 3.18+ 版本上运行，低版本的内核升级到最新也可以使用 eBPF 能力，只是可能部分功能受限，比如我就是在 Linux 发行版本 CentOS Linux release 7.7.1908 内核版本 3.10.0-1062.9.1.el7.x86_64 上运行 eBPF 在生产环境上搜集和排查网络问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;eBPF 实现的最初目标是优化处理网络过滤器的内部 BPF 指令集。当时，BPF 程序仍然限于内核空间使用，只有少数用户空间程序可以编写内核处理的 BPF 过滤器，例如：tcpdump 和 seccomp。时至今日，这些程序仍基于旧的 BPF 解释器生成字节码，但内核中会将这些指令转换为高性能的表示。&lt;/p&gt;
&lt;p&gt;2014 年 6 月，&lt;strong&gt;eBPF 扩展到用户空间，这也成为了 BPF 技术的转折点&lt;/strong&gt;。正如 Alexei 在提交补丁的注释中写到：“这个补丁展示了 eBPF 的潜力”。当前，eBPF 不再局限于网络栈，已经成为内核顶级的子系统。eBPF 程序架构强调安全性和稳定性，看上去更像内核模块，但与内核模块不同，eBPF 程序不需要重新编译内核，并且可以确保 eBPF 程序运行完成，而不会造成系统的崩溃。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/bpf-basic-arch_hu1034991276882877293.webp 400w,
               /blog/bpf-intro/bpf-basic-arch_hu10163064369229915955.webp 760w,
               /blog/bpf-intro/bpf-basic-arch_hu13358102659370132877.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/bpf-basic-arch_hu1034991276882877293.webp&#34;
               width=&#34;600&#34;
               height=&#34;347&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图 2-1 BPF 架构图&lt;/p&gt;
&lt;p&gt;简述概括，eBPF 是一套通用执行引擎，提供了可基于系统或程序事件高效安全执行特定代码的通用能力，通用能力的使用者不再局限于内核开发者；eBPF 可由执行字节码指令、存储对象和 Helper 帮助函数组成，字节码指令在内核执行前必须通过 BPF 验证器 Verfier 的验证，同时在启用 BPF JIT 模式的内核中，会直接将字节码指令转成内核可执行的本地指令运行。&lt;/p&gt;
&lt;p&gt;同时，eBPF 也逐渐在观测（跟踪、性能调优等）、安全和网络等领域发挥重要的角色。Facebook、NetFlix、CloudFlare 等知名互联网公司内部广泛采用基于 eBPF 技术的各种程序用于性能分析、排查问题、负载均衡、防范 DDoS 攻击，据相关信息显示在 Facebook 的机器上内置一系列 eBPF 的相关工具。&lt;/p&gt;
&lt;p&gt;相对于系统的性能分析和观测，eBPF 技术在网络技术中的表现，更是让人眼前一亮，BPF 技术与 XDP（eXpress Data Path）和 TC（Traffic Control）组合可以实现功能更加强大的网络功能，更可为 SDN 软件定义网络提供基础支撑。XDP 只作用与网络包的 Ingress 层面，BPF 钩子位于&lt;strong&gt;网络驱动中尽可能早的位置&lt;/strong&gt;，&lt;strong&gt;无需进行原始包的复制&lt;/strong&gt;就可以实现最佳的数据包处理性能，挂载的 BPF 程序是运行过滤的理想选择，可用于丢弃恶意或非预期的流量、进行 DDOS 攻击保护等场景；而 TC Ingress 比 XDP 技术处于更高层次的位置，BPF 程序在 L3 层之前运行，可以访问到与数据包相关的大部分元数据，是本地节点处理的理想的地方，可以用于流量监控或者 L3/L4 的端点策略控制，同时配合 TC egress 则可实现对于容器环境下更高维度和级别的网络结构。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/packet-processor-xdp_hu13105770296118227938.webp 400w,
               /blog/bpf-intro/packet-processor-xdp_hu9510877955084914643.webp 760w,
               /blog/bpf-intro/packet-processor-xdp_hu15057804861685259243.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/packet-processor-xdp_hu13105770296118227938.webp&#34;
               width=&#34;704&#34;
               height=&#34;460&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图 2-2 XDP 技术架构&lt;/p&gt;
&lt;p&gt;eBPF 相关的知名的开源项目包括但不限于以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Facebook 高性能 4 层负载均衡器 &lt;a href=&#34;https://github.com/facebookincubator/katran&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Katran&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cilium.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium&lt;/a&gt; 为下一代微服务 ServiceMesh 打造了具备 API 感知和安全高效的容器网络方案；底层主要使用 XDP 和 TC 等相关技术；&lt;/li&gt;
&lt;li&gt;IO Visor 项目开源的  &lt;a href=&#34;https://github.com/iovisor/bcc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BCC&lt;/a&gt;、 &lt;a href=&#34;https://github.com/iovisor/bpftrace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BPFTrace&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/iovisor/kubectl-trace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubectl-Trace&lt;/a&gt;：  &lt;a href=&#34;https://github.com/iovisor/bcc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BCC&lt;/a&gt; 提供了更高阶的抽象，可以让用户采用 Python、C++ 和 Lua 等高级语言快速开发 BPF 程序；&lt;a href=&#34;https://github.com/iovisor/bpftrace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BPFTrace&lt;/a&gt; 采用类似于 awk 语言快速编写 eBPF 程序；&lt;a href=&#34;https://github.com/iovisor/kubectl-trace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubectl-Trace&lt;/a&gt; 则提供了在 kubernetes 集群中使用 BPF 程序调试的方便操作；&lt;/li&gt;
&lt;li&gt;CloudFlare 公司开源的 &lt;a href=&#34;https://github.com/cloudflare/ebpf_exporter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBPF Exporter&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/cloudflare/bpftools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bpf-tools&lt;/a&gt;：&lt;a href=&#34;https://github.com/cloudflare/ebpf_exporter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBPF Exporter&lt;/a&gt; 将 eBPF 技术与监控 Prometheus 紧密结合起来；&lt;a href=&#34;https://github.com/cloudflare/bpftools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bpf-tools&lt;/a&gt; 可用于网络问题分析和排查；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;越来越多的基于 eBPF 的项目如雨后脆笋一样开始蓬勃发展，而且逐步在社区中异军突起，成为一道风景线。比如 IO Visor 项目的 BCC 工具，为性能分析和观察提供了更加丰富的工具集：&lt;a href=&#34;https://github.com/iovisor/bcc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;图片来源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/bcc-tools_hu13056574447683662980.webp 400w,
               /blog/bpf-intro/bcc-tools_hu2575332494131324660.webp 760w,
               /blog/bpf-intro/bcc-tools_hu13164584527076404599.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/bcc-tools_hu13056574447683662980.webp&#34;
               width=&#34;760&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图 2-3 Linux bcc/BPF 观测工具&lt;/p&gt;
&lt;p&gt;同时，IO Visor 的 &lt;a href=&#34;https://github.com/iovisor/bpf-docs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bpf-docs&lt;/a&gt; 包含了日常的文档，可以用于学习。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于 eBPF 还在快速发展期，内核中的功能也日趋增强，一般推荐基于 Linux 4.4+ (4.9 以上会更好) 内核的来使用 eBPF。部分 Linux Event 和 BPF 版本支持见下图：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/linux_kernel_event_bpf_hu15393669297225012390.webp 400w,
               /blog/bpf-intro/linux_kernel_event_bpf_hu12568608785783326152.webp 760w,
               /blog/bpf-intro/linux_kernel_event_bpf_hu10948574007752354296.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/linux_kernel_event_bpf_hu15393669297225012390.webp&#34;
               width=&#34;760&#34;
               height=&#34;422&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图 2-4 Linux 事件和 BPF 版本支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;22-ebpf-架构观测&#34;&gt;2.2 eBPF 架构（观测）&lt;/h3&gt;
&lt;p&gt;基于 Linux 系统的观测工具中，eBPF 有着得天独厚的优势，高效、生产安全且内核中内置，特别的可以在内核中完成数据分析聚合比如直方图，与将数据发送到用户空间分析聚合相比，能够节省大量的数据复制传递带来的 CPU 消耗。&lt;/p&gt;
&lt;p&gt;eBPF 整体结构图如下：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/linux_ebpf_internals_hu13209230679471379465.webp 400w,
               /blog/bpf-intro/linux_ebpf_internals_hu17257707130225629637.webp 760w,
               /blog/bpf-intro/linux_ebpf_internals_hu12844226931448414877.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/linux_ebpf_internals_hu13209230679471379465.webp&#34;
               width=&#34;760&#34;
               height=&#34;279&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图 2-5 eBPF 观测架构&lt;/p&gt;
&lt;p&gt;eBPF 分为用户空间程序和内核程序两部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户空间程序负责加载 BPF 字节码至内核，如需要也会负责读取内核回传的统计信息或者事件详情；&lt;/li&gt;
&lt;li&gt;内核中的 BPF 字节码负责在内核中执行特定事件，如需要也会将执行的结果通过 maps 或者 perf-event 事件发送至用户空间；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中用户空间程序与内核 BPF 字节码程序可以使用 map 结构实现双向通信，这为内核中运行的 BPF 字节码程序提供了更加灵活的控制。&lt;/p&gt;
&lt;p&gt;用户空间程序与内核中的 BPF 字节码交互的流程主要如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们可以使用 LLVM 或者 GCC 工具将编写的 BPF 代码程序编译成 BPF 字节码；&lt;/li&gt;
&lt;li&gt;然后使用加载程序 Loader 将字节码加载至内核；内核使用验证器（verfier）组件保证执行字节码的安全性，以避免对内核造成灾难，在确认字节码安全后将其加载对应的内核模块执行；BPF 观测技术相关的程序程序类型可能是 kprobes/uprobes/tracepoint/perf_events 中的一个或多个，其中：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;kprobes&lt;/strong&gt;：实现内核中动态跟踪。kprobes 可以跟踪到 Linux 内核中的导出函数入口或返回点，但是不是稳定 ABI 接口，可能会因为内核版本变化导致，导致跟踪失效。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uprobes&lt;/strong&gt;：用户级别的动态跟踪。与 kprobes 类似，只是跟踪用户程序中的函数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tracepoints&lt;/strong&gt;：内核中静态跟踪。tracepoints 是内核开发人员维护的跟踪点，能够提供稳定的 ABI 接口，但是由于是研发人员维护，数量和场景可能受限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;perf_events&lt;/strong&gt;：定时采样和 PMC。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内核中运行的 BPF 字节码程序可以使用两种方式将测量数据回传至用户空间
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;maps&lt;/strong&gt; 方式可用于将内核中实现的统计摘要信息（比如测量延迟、堆栈信息）等回传至用户空间；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;perf-event&lt;/strong&gt; 用于将内核采集的事件实时发送至用户空间，用户空间程序实时读取分析；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如无特殊说明，本文中所说的 BPF 都是泛指 BPF 技术。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;23-ebpf-的限制&#34;&gt;2.3 eBPF 的限制&lt;/h3&gt;
&lt;p&gt;eBPF 技术虽然强大，但是为了保证内核的处理安全和及时响应，内核中的 eBPF 技术也给予了诸多限制，当然随着技术的发展和演进，限制也在逐步放宽或者提供了对应的解决方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;eBPF 程序不能调用任意的内核参数，只限于内核模块中列出的 BPF Helper 函数，函数支持列表也随着内核的演进在不断增加。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eBPF 程序不允许包含无法到达的指令，防止加载无效代码，延迟程序的终止。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eBPF 程序中循环次数限制且必须在有限时间内结束，这主要是用来防止在 kprobes 中插入任意的循环，导致锁住整个系统；解决办法包括展开循环，并为需要循环的常见用途添加辅助函数。Linux 5.3 在 BPF 中包含了对有界循环的支持，它有一个可验证的运行时间上限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eBPF 堆栈大小被限制在 MAX_BPF_STACK，截止到内核 Linux 5.8 版本，被设置为 512；参见 &lt;a href=&#34;https://github.com/torvalds/linux/blob/v5.8/include/linux/filter.h&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;include/linux/filter.h&lt;/a&gt;，这个限制特别是在栈上存储多个字符串缓冲区时：一个 char[256]缓冲区会消耗这个栈的一半。目前没有计划增加这个限制，解决方法是改用 bpf 映射存储，它实际上是无限的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* BPF program can access up to 512 bytes of stack space. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define MAX_BPF_STACK	512
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eBPF 字节码大小最初被限制为 4096 条指令，截止到内核 Linux 5.8 版本，当前已将放宽至 100 万指令（BPF_COMPLEXITY_LIMIT_INSNS），参见：&lt;a href=&#34;https://github.com/torvalds/linux/blob/v5.8/include/linux/bpf.h&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;include/linux/bpf.h&lt;/a&gt;，对于无权限的 BPF 程序，仍然保留 4096 条限制 ( BPF_MAXINSNS )；新版本的 eBPF 也支持了多个 eBPF 程序级联调用，虽然传递信息存在某些限制，但是可以通过组合实现更加强大的功能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define BPF_COMPLEXITY_LIMIT_INSNS      1000000 &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* yes. 1M insns */&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;24-ebpf-与内核模块对比&#34;&gt;2.4 eBPF 与内核模块对比&lt;/h3&gt;
&lt;p&gt;在 Linux 观测方面，eBPF 总是会拿来与 kernel 模块方式进行对比，eBPF 在安全性、入门门槛上比内核模块都有优势，这两点在观测场景下对于用户来讲尤其重要。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;维度&lt;/th&gt;
          &lt;th&gt;Linux 内核模块&lt;/th&gt;
          &lt;th&gt;eBPF&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;kprobes/tracepoints&lt;/td&gt;
          &lt;td&gt;支持&lt;/td&gt;
          &lt;td&gt;支持&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;可能引入安全漏洞或导致内核 Panic&lt;/td&gt;
          &lt;td&gt;通过验证器进行检查，可以保障内核安全&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;内核函数&lt;/td&gt;
          &lt;td&gt;可以调用内核函数&lt;/td&gt;
          &lt;td&gt;只能通过 BPF Helper 函数调用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;编译性&lt;/td&gt;
          &lt;td&gt;需要编译内核&lt;/td&gt;
          &lt;td&gt;不需要编译内核，引入头文件即可&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;运行&lt;/td&gt;
          &lt;td&gt;基于相同内核运行&lt;/td&gt;
          &lt;td&gt;基于稳定 ABI 的 BPF 程序可以编译一次，各处运行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;与应用程序交互&lt;/td&gt;
          &lt;td&gt;打印日志或文件&lt;/td&gt;
          &lt;td&gt;通过 perf_event 或 map 结构&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;数据结构丰富性&lt;/td&gt;
          &lt;td&gt;一般&lt;/td&gt;
          &lt;td&gt;丰富&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;入门门槛&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;高&lt;/td&gt;
          &lt;td&gt;低&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;升级&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;需要卸载和加载，可能导致处理流程中断&lt;/td&gt;
          &lt;td&gt;原子替换升级，不会造成处理流程中断&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;内核内置&lt;/td&gt;
          &lt;td&gt;视情况而定&lt;/td&gt;
          &lt;td&gt;内核内置支持&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;表格 2-1 eBPF 与 Linux 内核模块方式对比&lt;/p&gt;
&lt;h2 id=&#34;3-应用案例&#34;&gt;3. 应用案例&lt;/h2&gt;
&lt;p&gt;大名鼎鼎的性能分析大师 Brendan Gregg 等编写了诸多的 BCC 或 BPFTrace 的工具集可以拿来直接使用，完全可以满足我们日常问题分析和排查。&lt;/p&gt;
&lt;p&gt;BCC 在 CentOS 7 系统中可以通过 yum 快速安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# yum install bcc -y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Resolving Dependencies
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--&amp;gt; Running transaction check
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&amp;gt; Package bcc.x86_64 0:0.8.0-1.el7 will be updated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--&amp;gt; Processing Dependency: bcc&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;x86-64&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0.8.0-1.el7 &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; package: python-bcc-0.8.0-1.el7.x86_64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&amp;gt; Package bcc.x86_64 0:0.10.0-1.el7 will be an update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--&amp;gt; Processing Dependency: bcc-tools &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0.10.0-1.el7 &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; package: bcc-0.10.0-1.el7.x86_64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--&amp;gt; Running transaction check
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&amp;gt; Package bcc-tools.x86_64 0:0.8.0-1.el7 will be updated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&amp;gt; Package bcc-tools.x86_64 0:0.10.0-1.el7 will be an update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&amp;gt; Package python-bcc.x86_64 0:0.8.0-1.el7 will be updated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---&amp;gt; Package python-bcc.x86_64 0:0.10.0-1.el7 will be an update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--&amp;gt; Finished Dependency Resolution
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其他系统的安装方式参见：&lt;a href=&#34;https://github.com/iovisor/bcc/blob/master/INSTALL.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BCC 中每一个工具都有一个对应的使用样例，比如 &lt;a href=&#34;https://github.com/iovisor/bcc/blob/master/tools/execsnoop.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;execsnoop.py&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/iovisor/bcc/blob/master/tools/execsnoop_example.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;execsnoop_example.txt&lt;/a&gt;，在使用样例中有详细的使用说明，而且 BCC 中的工具使用的帮助文档格式基本类似，上手非常方便。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BCC 的程序一般情况下都需要 root 用户来运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;31-linux-性能分析-60-秒bpf-版本&#34;&gt;3.1 Linux 性能分析 60 秒（BPF 版本）&lt;/h3&gt;
&lt;p&gt;英文原文 &lt;a href=&#34;https://netflixtechblog.com/linux-performance-analysis-in-60-000-milliseconds-accc10403c55&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Performance Analysis in 60,000 Milliseconds&lt;/a&gt;，&lt;a href=&#34;http://www.brendangregg.com/blog/2015-12-03/linux-perf-60s-video.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;视频地址&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uptime
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dmesg &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tail
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vmstat &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mpstat -P ALL &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pidstat &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iostat -xz &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;free -m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sar -n DEV &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sar -n TCP,ETCP &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;top
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;60s 系列 BPF 版本如下：&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;ebpf_60s.png&#34; alt=&#34;ebpf_60s&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;图 3-1 60s 排查之 BPF 版本&lt;/p&gt;
&lt;p&gt;对于在系统中运行的 &amp;ldquo;闪电侠&amp;rdquo; 程序，运行周期非常短，但是可能会带来系统的抖动延时，我们采用 &lt;code&gt;top&lt;/code&gt; 命令查看一般情况下难以发现，我们可以使用 BCC 提供的工具 &lt;code&gt;execsnoop &lt;/code&gt; 来进行排查：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Trace file opens with process and filename: opensnoop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#/usr/share/bcc/tools/execsnoop &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PCOMM            PID    PPID   RET ARGS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep            &lt;span class=&#34;m&#34;&gt;3334&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;21029&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; /usr/bin/sleep &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep            &lt;span class=&#34;m&#34;&gt;3339&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;21029&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; /usr/bin/sleep &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conntrack        &lt;span class=&#34;m&#34;&gt;3341&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;1112&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; /usr/sbin/conntrack --stats
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conntrack        &lt;span class=&#34;m&#34;&gt;3342&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;1112&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; /usr/sbin/conntrack --count
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep            &lt;span class=&#34;m&#34;&gt;3344&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;21029&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; /usr/bin/sleep &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iptables-save    &lt;span class=&#34;m&#34;&gt;3347&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;9211&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; /sbin/iptables-save -t filter
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iptables-save    &lt;span class=&#34;m&#34;&gt;3348&lt;/span&gt;   &lt;span class=&#34;m&#34;&gt;9211&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; /sbin/iptables-save -t nat
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;32-slab-dentry-过大导致的网络抖动排查&#34;&gt;3.2 &lt;strong&gt;slab dentry 过大导致的网络抖动排查&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;现象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网络 ping 的延时间歇性有规律出现抖动&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题排查&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;采用 &lt;code&gt;execsnoop&lt;/code&gt;  分析发现，某个运行命令&lt;code&gt;cat /proc/slabinfo&lt;/code&gt;的运行时间间隔与抖动的频率完全吻合，顺着这个的线索定位，我们发现云厂商提供的 Java 版本的云监控会定期调用 &lt;code&gt;cat /proc/slabinfo&lt;/code&gt; 来获取内核缓存的信息；&lt;/p&gt;
&lt;p&gt;通过命令 &lt;code&gt;slabtop&lt;/code&gt; 发现系统中的 &lt;code&gt;dentry&lt;/code&gt; 项的内存占用非常大，系统内存 128G，&lt;code&gt;dentry&lt;/code&gt; 占用 70G 以上，所以问题很快就定位到是系统在打开文件方面可能有相关问题；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;根因分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们使用对于打开文件跟踪的 BCC 工具 &lt;code&gt;opensnoop&lt;/code&gt; 很快就定位到是某个程序频繁创建和删除临时文件，最终定位为某个 PHP 程序设置的调用方式存在问题，导致每次请求会创建和删除临时文件；代码中将 http 调用中的 &lt;code&gt;contentType&lt;/code&gt; 设置成了 &lt;code&gt;Http::CONTENT_TYPE_UPLOAD&lt;/code&gt;，导致每次请求都会生成临时文件，修改成 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 问题解决。&lt;/p&gt;
&lt;p&gt;问题的原理可参考 &lt;a href=&#34;https://developer.aliyun.com/article/697773&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;记一次对网络抖动经典案例的分析&lt;/a&gt; 和 &lt;a href=&#34;https://yq.aliyun.com/articles/131870&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;systemtap 脚本分析系统中 dentry SLAB 占用过高问题&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;33-生成火焰图&#34;&gt;3.3 生成火焰图&lt;/h3&gt;
&lt;p&gt;火焰图是帮助我们对系统耗时进行可视化的图表，能够对程序中那些代码经常被执行给出一个清晰的展现。Brendan Gregg 是火焰图的创建者，他在 &lt;a href=&#34;https://github.com/brendangregg/FlameGraph&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; 上维护了一组脚本可以轻松生成需要的可视化格式数据。使用 BCC 中的工具 &lt;code&gt;profile&lt;/code&gt; 可很方面地收集道 CPU 路径的数据，基于数据采用工具可以轻松地生成火焰图，查找到程序的性能瓶颈。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;profile&lt;/code&gt; 搜集火焰图的程序没有任何限制和改造&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;profile&lt;/code&gt; 工具可以让我们轻松对于系统或者程序的 CPU 性能路径进行可视化分析：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/share/bcc/tools/profile -h
usage: profile [-h] [-p PID | -L TID] [-U | -K] [-F FREQUENCY | -c COUNT] [-d]
               [-a] [-I] [-f] [--stack-storage-size STACK_STORAGE_SIZE]
               [-C CPU]
               [duration]

Profile CPU stack traces at a timed interval

positional arguments:
  duration              duration of trace, in seconds

optional arguments:
  -h, --help            show this help message and exit
  -p PID, --pid PID     profile process with this PID only
  -L TID, --tid TID     profile thread with this TID only
  -U, --user-stacks-only
                        show stacks from user space only (no kernel space
                        stacks)
  -K, --kernel-stacks-only
                        show stacks from kernel space only (no user space
                        stacks)
  -F FREQUENCY, --frequency FREQUENCY
                        sample frequency, Hertz
  -c COUNT, --count COUNT
                        sample period, number of events
  -d, --delimited       insert delimiter between kernel/user stacks
  -a, --annotations     add _[k] annotations to kernel frames
  -I, --include-idle    include CPU idle stacks
  -f, --folded          output folded format, one line per stack (for flame
                        graphs)
  --stack-storage-size STACK_STORAGE_SIZE
                        the number of unique stack traces that can be stored
                        and displayed (default 16384)
  -C CPU, --cpu CPU     cpu number to run profile on

examples:
    ./profile             # profile stack traces at 49 Hertz until Ctrl-C
    ./profile -F 99       # profile stack traces at 99 Hertz
    ./profile -c 1000000  # profile stack traces every 1 in a million events
    ./profile 5           # profile at 49 Hertz for 5 seconds only
    ./profile -f 5        # output in folded format for flame graphs
    ./profile -p 185      # only profile process with PID 185
    ./profile -L 185      # only profile thread with TID 185
    ./profile -U          # only show user space stacks (no kernel)
    ./profile -K          # only show kernel space stacks (no user)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;profile&lt;/code&gt;  配合 &lt;code&gt;FlameGraph&lt;/code&gt; 可以轻松帮我们绘制出 CPU 使用的火焰图。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ profile -af &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; &amp;gt; out.stacks01
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone https://github.com/brendangregg/FlameGraph
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; FlameGraph
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./flamegraph.pl --color&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;java &amp;lt; ../out.stacks01 &amp;gt; out.svg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/flame_hu10034733143225351039.webp 400w,
               /blog/bpf-intro/flame_hu11565770450507282768.webp 760w,
               /blog/bpf-intro/flame_hu6439374634586898143.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/flame_hu10034733143225351039.webp&#34;
               width=&#34;760&#34;
               height=&#34;553&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

图 3-2 火焰图&lt;/p&gt;
&lt;h3 id=&#34;33-排查网络调用来源&#34;&gt;3.3 排查网络调用来源&lt;/h3&gt;
&lt;p&gt;在生产场景下，会有些特定场景需要抓取连接到外网特定地址的程序，这时候我们可以采用 BCC 工具集中的 &lt;code&gt;tcplife&lt;/code&gt; 来定位。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/share/bcc/tools/tcplife -h
usage: tcplife [-h] [-T] [-t] [-w] [-s] [-p PID] [-L LOCALPORT]
               [-D REMOTEPORT]

Trace the lifespan of TCP sessions and summarize

optional arguments:
  -h, --help            show this help message and exit
  -T, --time            include time column on output (HH:MM:SS)
  -t, --timestamp       include timestamp on output (seconds)
  -w, --wide            wide column output (fits IPv6 addresses)
  -s, --csv             comma separated values output
  -p PID, --pid PID     trace this PID only
  -L LOCALPORT, --localport LOCALPORT
                        comma-separated list of local ports to trace.
  -D REMOTEPORT, --remoteport REMOTEPORT
                        comma-separated list of remote ports to trace.

examples:
    ./tcplife           # trace all TCP connect()s
    ./tcplife -t        # include time column (HH:MM:SS)
    ./tcplife -w        # wider colums (fit IPv6)
    ./tcplife -stT      # csv output, with times &amp;amp; timestamps
    ./tcplife -p 181    # only trace PID 181
    ./tcplife -L 80     # only trace local port 80
    ./tcplife -L 80,81  # only trace local ports 80 and 81
    ./tcplife -D 80     # only trace remote port 80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过在机器上使用 &lt;code&gt;tcplife&lt;/code&gt; 来获取的网络连接信息，我们可以看到包括了 PID、COMM、本地 IP 地址、本地端口、远程 IP 地址和远程端口，通过这些信息非常方便排查到连接到特定 IP 地址的程序，尤其是连接的过程非常短暂，通过 &lt;code&gt;netstat&lt;/code&gt; 等其他工具不容易排查的场景。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# /usr/share/bcc/tools/tcplife&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PID   COMM             IP LADDR                      LPORT RADDR                  RPORT  TX_KB  RX_KB MS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1776&lt;/span&gt;  blackbox_export  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  169.254.20.10              &lt;span class=&#34;m&#34;&gt;35830&lt;/span&gt; 169.254.20.10          &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 0.36
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;27150&lt;/span&gt; node-cache       &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  169.254.20.10              &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt;    169.254.20.10          &lt;span class=&#34;m&#34;&gt;35830&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 0.36
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;12511&lt;/span&gt; coredns          &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  127.0.0.1                  &lt;span class=&#34;m&#34;&gt;58492&lt;/span&gt; 127.0.0.1              &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 0.32
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果我们想知道更加详细的 TCP 状态情况，那么 &lt;code&gt;tcptracer&lt;/code&gt; 可展示更加详细的 TCP 状态，其中 C 代表 Connect X 表示关闭，A 代表 Accept。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# /usr/share/bcc/tools/tcptracer &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Tracing TCP established connections. Ctrl-C to end.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;T  PID    COMM             IP SADDR            DADDR            SPORT  DPORT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;C  &lt;span class=&#34;m&#34;&gt;21066&lt;/span&gt;  ilogtail         &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  10.81.128.12     100.100.49.128   &lt;span class=&#34;m&#34;&gt;40906&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;X  &lt;span class=&#34;m&#34;&gt;21066&lt;/span&gt;  ilogtail         &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  10.81.128.12     100.100.49.128   &lt;span class=&#34;m&#34;&gt;40906&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;C  &lt;span class=&#34;m&#34;&gt;21066&lt;/span&gt;  ilogtail         &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  10.81.128.12     100.100.49.128   &lt;span class=&#34;m&#34;&gt;40908&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;X  &lt;span class=&#34;m&#34;&gt;21066&lt;/span&gt;  ilogtail         &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;  10.81.128.12     100.100.49.128   &lt;span class=&#34;m&#34;&gt;40908&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;tcpstates&lt;/code&gt; 还能够展示出来 TCP 状态机的流转情况：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# /usr/share/bcc/tools/tcpstates&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SKADDR           C-PID C-COMM     LADDR           LPORT RADDR           RPORT OLDSTATE    -&amp;gt; NEWSTATE    MS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffff9fd7e8192000 &lt;span class=&#34;m&#34;&gt;22384&lt;/span&gt; curl       100.66.100.185  &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     52.33.159.26    &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;    CLOSE       -&amp;gt; SYN_SENT    0.000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffff9fd7e8192000 &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;     swapper/5  100.66.100.185  &lt;span class=&#34;m&#34;&gt;63446&lt;/span&gt; 52.33.159.26    &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;    SYN_SENT    -&amp;gt; ESTABLISHED 1.373
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ffff9fd7e8192000 &lt;span class=&#34;m&#34;&gt;22384&lt;/span&gt; curl       100.66.100.185  &lt;span class=&#34;m&#34;&gt;63446&lt;/span&gt; 52.33.159.26    &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;    ESTABLISHED -&amp;gt; FIN_WAIT1   176.042
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样，我们也可以实时获取到 TCP 连接超时或者重连的网络连接；也可以通过抓取 UDP 包相关的连接信息，用于定位诸如 DNS 请求超时或者 DNS 请求的发起进程。&lt;/p&gt;
&lt;h2 id=&#34;4-编写-bpf-程序&#34;&gt;4. 编写 BPF 程序&lt;/h2&gt;
&lt;p&gt;对于大多数开发者而言，更多的是基于 BPF 技术之上编写解决我们日常遇到的各种问题，当前 BCC 和 BPFTrace 两个项目在观测和性能分析上已经有了诸多灵活且功能强大的工具箱，完全可以满足我们日常使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/iovisor/bcc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BCC&lt;/a&gt; 提供了更高阶的抽象，可以让用户采用 Python、C++ 和 Lua 等高级语言快速开发 BPF 程序；&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/iovisor/bpftrace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BPFTrace&lt;/a&gt; 采用类似于 awk 语言快速编写 eBPF 程序；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更早期的工具则是使用 C 语言来编写 BPF 程序，使用 LLVM clang 编译成 BPF 代码，这对于普通使用者上手有不少门槛当前仅限于对于 eBPF 技术更加深入的学习场景。&lt;/p&gt;
&lt;h3 id=&#34;41-bcc-版本-helloworld&#34;&gt;4.1 BCC 版本 HelloWorld&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/bpf-intro/bcc-internals_hu8492544628316200253.webp 400w,
               /blog/bpf-intro/bcc-internals_hu11558723003937719069.webp 760w,
               /blog/bpf-intro/bcc-internals_hu1490062783330057511.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/bpf-intro/bcc-internals_hu8492544628316200253.webp&#34;
               width=&#34;760&#34;
               height=&#34;416&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;图 4-1 BCC 整体架构&lt;/p&gt;
&lt;p&gt;使用 BCC 前端绑定语言 Python 编写的 Hello World 版本：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/usr/bin/python3

from bcc import BPF

# This may not work for 4.17 on x64, you need replace kprobe__sys_clone with kprobe____x64_sys_clone
prog = &amp;#34;&amp;#34;&amp;#34;
	int kprobe__sys_clone(void *ctx) {
		bpf_trace_printk(&amp;#34;Hello, World!\\n&amp;#34;);
		return 0;
	}
&amp;#34;&amp;#34;&amp;#34;

b = BPF(text=prog, debug=0x04)
b.trace_print()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行程序前需要安装过 bcc 相关工具包，当运行正常的时候我们发现每当 &lt;code&gt;sys_clone&lt;/code&gt; 系统调用时，运行的控制台上就会打印“Hello, World!”，在打印文字前面还包含了调用程序的进程名称，进程 ID 等信息；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果运行报错，可能是缺少头文件，一般安装 kernel-devel 包即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# python ./hello.py
         kubelet-8349  [006] d... 33637334.829981: : Hello, World!
         kubelet-8349  [006] d... 33637334.838594: : Hello, World!
         kubelet-8349  [006] d... 33637334.843788: : Hello, World!
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;43-bpftrace&#34;&gt;4.3 BPFTrace&lt;/h3&gt;
&lt;p&gt;BPFTrace 是基于 BPF 和 BCC 的开源项目，与 BCC 不同的是其提供了更高层次的抽象，可以使用类似 AWK 脚本语言来编写基于 BPF 的跟踪或者性能排查工具，更加易于入门和编写，该工具的主要灵感来自于 Solaris 的 D 语言。BPFTrace 更方便与编写单行的程序。BPFTrace 与 BCC 一样也是 IO Visor 组织下的项目，仓库参见 &lt;a href=&#34;https://github.com/iovisor/bpftrace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bpftrace&lt;/a&gt;。更加深入的学习资料参见：&lt;a href=&#34;https://github.com/iovisor/bpftrace/blob/master/docs/reference_guide.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reference Guide&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/iovisor/bpftrace/blob/master/docs/tutorial_one_liners.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;One-Liner Tutorial&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;BPFTrace 使用 LLVM 将脚本编译成 BPF 二进制码，后续使用 BCC 与 Linux 内核进行交互。从功能层面上讲，BPFTrace 的定制性和灵活性不如 BCC，但是比 BCC 工具更加易于理解和使用，降低了 BPF 技术的使用门槛。&lt;/p&gt;
&lt;p&gt;使用样例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 统计进程调用 sys_enter 的次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#bpftrace -e &amp;#39;tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Attaching &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; probe...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^C
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;bpftrace&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;systemd&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;snmp-pass&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;sshd&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;125&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 统计内核中函数堆栈的次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# bpftrace -e &amp;#39;profile:hz:99 { @[kstack] = count(); }&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Attaching &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; probe...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^C
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;...&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;filemap_map_pages+181
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;__handle_mm_fault+2905
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;handle_mm_fault+250
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;__do_page_fault+599
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;async_page_fault+69
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;...&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cpuidle_enter_state+164
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;do_idle+390
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cpu_startup_entry+111
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;start_secondary+423
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;secondary_startup_64+165
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;22122&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;43-c-语言原生方式&#34;&gt;4.3 C 语言原生方式&lt;/h3&gt;
&lt;p&gt;采用 LLVM Clang 的方式编译会涉及到内核编译环境搭建，而且还需要自己编译 Makefile 等操作，属于高级用户使用：&lt;/p&gt;
&lt;p&gt;bpf_program.c&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;linux/bpf.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define SEC(NAME) __attribute__((section(NAME), used))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bpf_trace_printk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fmt_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                               &lt;span class=&#34;p&#34;&gt;...)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BPF_FUNC_trace_printk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;SEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;tracepoint/syscalls/sys_enter_execve&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bpf_prog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, BPF World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;bpf_trace_printk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_license&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;GPL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;loader.c&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;bpf_load.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;load_bpf_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bpf_program.o&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The kernel didn&amp;#39;t load the BPF program&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;read_trace_pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Makefile 文件（部分）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;build: &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BPFCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.c&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BPFLOADER&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;CLANG&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; -O2 -target bpf -c &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;BPFCODE:&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;.c&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;CCINCLUDE&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; -o &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BPFCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:=.o&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 clang 编译中的选型 &lt;code&gt;-target bpf&lt;/code&gt; 表明我们将代码编译成 bpf 的字节码。&lt;/p&gt;
&lt;p&gt;完整的程序参见：&lt;a href=&#34;https://github.com/DavadDi/linux-observability-with-bpf/tree/master/code/chapter-2/hello_world&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hello_world&lt;/a&gt;；更多的样例代码可以参见对应内核中 &lt;code&gt;kernel-src/samples/bpf/&lt;/code&gt; 下的样例代码。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后续会持续进行 BPF 相关的内容总结和分享，Github &lt;a href=&#34;https://github.com/DavadDi/bpf_study&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bpf_study&lt;/a&gt; 仓库，欢迎提交 PR 和 Star&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;5-参考资料&#34;&gt;5. 参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tcpdump.org/papers/bpf-usenix93.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The BSD Packet Filter: A New Architecture for User-level Packet Capture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://arthurchiao.art/blog/cilium-bpf-xdp-reference-guide-zh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[译] Cilium：BPF 和 XDP 参考指南（2019） &lt;/a&gt;   &lt;a href=&#34;https://docs.cilium.io/en/v1.8/bpf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cillum BPF and XDP Reference Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.cloudflare.com/zh/cloudflare-architecture-and-how-bpf-eats-the-world-zh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloudflare 架构以及 BPF 如何占据世界&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.luoow.com/dc_tw/106805603&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;關於 BPF 和 eBPF 的筆記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qmonnet.github.io/whirl-offload/2016/09/01/dive-into-bpf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dive into BPF: a list of reading material&lt;/a&gt;  &lt;a href=&#34;https://blog.csdn.net/F8qG7f9YD02Pe/article/details/79815702&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/linux/l-lo-eBPF-history/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBPF 简史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=znBGt7oHJyQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=znBGt7oHJyQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infradead.org/~mchehab/kernel_docs/bpf/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BPF Documentation&lt;/a&gt;  &lt;a href=&#34;https://www.kernel.org/doc/html/latest/bpf/bpf_devel_QA.html#q-how-do-i-indicate-which-tree-bpf-vs-bpf-next-my-patch-should-be-applied-to&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HOWTO interact with BPF subsystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infradead.org/~mchehab/kernel_docs/bpf/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux 内核 BPF 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.brendangregg.com/ebpf.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Extended BPF (eBPF) Tracing Tools&lt;/a&gt;  Brendan Gregg&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/3BQU9AYh1ScZ_1V17BJ4wg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;性能提升 40%: 腾讯 TKE 用 eBPF 绕过 conntrack 优化 K8s Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tonydeng.github.io/sdn-handbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SDN handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Linux BPF 帮助文档 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/bpf.2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bpf(2)&lt;/a&gt;  &lt;a href=&#34;https://man7.org/linux/man-pages/man7/bpf-helpers.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bpf-helpers(7)&lt;/a&gt;  &lt;a href=&#34;https://man7.org/linux/man-pages/man8/tc-bpf.8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tc-bpf(8)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>彻底搞懂 etcd 系列文章（一）：初识 etcd</title>
      <link>https://cloudnative.to/blog/etcd-1/</link>
      <pubDate>Tue, 09 Jun 2020 12:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/etcd-1/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;作者介绍：aoho，一线码农，对云原生、微服务、Go 语言、容器化感兴趣，并做了深入研究。闲暇时间会分享一些技术思考和实践，与大家讨论交流，共同进步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;0-专辑概述&#34;&gt;0 专辑概述&lt;/h2&gt;
&lt;p&gt;etcd 是云原生架构中重要的基础组件，由 CNCF 孵化托管。etcd 在微服务和 Kubernates 集群中不仅可以作为服务注册于发现，还可以作为 key-value 存储的中间件。&lt;/p&gt;
&lt;p&gt;《彻底搞懂 etcd 系列文章》将会从 etcd 的基本功能实践、API 接口、实现原理、源码分析，以及实现中的踩坑经验等几方面具体展开介绍 etcd。预计会有 20 篇左右的文章，笔者将会每周持续更新，欢迎关注。&lt;/p&gt;
&lt;h2 id=&#34;1-etcd-介绍&#34;&gt;1 etcd 介绍&lt;/h2&gt;
&lt;p&gt;etcd 是 CoreOS 团队于 2013 年 6 月发起的开源项目，它的目标是构建一个高可用的分布式键值 (key-value) 数据库。具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单：安装配置简单，而且提供了 HTTP API 进行交互，使用也很简单&lt;/li&gt;
&lt;li&gt;键值对存储：将数据存储在分层组织的目录中，如同在标准文件系统中&lt;/li&gt;
&lt;li&gt;监测变更：监测特定的键或目录以进行更改，并对值的更改做出反应&lt;/li&gt;
&lt;li&gt;安全：支持 SSL 证书验证&lt;/li&gt;
&lt;li&gt;快速：根据官方提供的 benchmark 数据，单实例支持每秒 2k+ 读操作&lt;/li&gt;
&lt;li&gt;可靠：采用 raft 算法，实现分布式系统数据的可用性和一致性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etcd 采用 Go 语言编写，它具有出色的跨平台支持，很小的二进制文件和强大的社区。etcd 机器之间的通信通过 Raft 算法处理。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/etcd-1/etcd_hu2909327849622928131.webp 400w,
               /blog/etcd-1/etcd_hu3179590505531516312.webp 760w,
               /blog/etcd-1/etcd_hu8998292237412603058.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/etcd-1/etcd_hu2909327849622928131.webp&#34;
               width=&#34;322&#34;
               height=&#34;330&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;etcd 是一个高度一致的分布式键值存储，它提供了一种可靠的方式来存储需要由分布式系统或机器集群访问的数据。它可以优雅地处理网络分区期间的 leader 选举，以应对机器的故障，即使是在 leader 节点发生故障时。&lt;/p&gt;
&lt;p&gt;从简单的 Web 应用程序到 Kubernetes 集群，任何复杂的应用程序都可以从 etcd 中读取数据或将数据写入 etcd。&lt;/p&gt;
&lt;p&gt;etcd 于 2018 年 12 月正式加入云原生计算基金会 (CNCF，全称 Cloud Native Computing Foundation)，并由 CNCF 支持。CNCF 是一个厂商中立的基金会、云原生技术推广和普及的领导者。&lt;/p&gt;
&lt;h2 id=&#34;2-使用场景&#34;&gt;2 使用场景&lt;/h2&gt;
&lt;p&gt;etcd 比较多的应用场景是用于服务注册与发现，除此之外，也可以用于键值对存储，应用程序可以读取和写入 etcd 中的数据。&lt;/p&gt;
&lt;p&gt;一个简单的用例是将数据库连接详细信息或功能标志存储在 etcd 中作为键值对。可以观察这些值，使我们的应用在更改时可以重新配置自己。高级用法是利用 etcd 的一致性保证来实施数据库 leader 选举或在一组 follower 之间执行分布式锁定。&lt;/p&gt;
&lt;h3 id=&#34;21-键值对存储&#34;&gt;2.1 键值对存储&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A highly-available key value store for shared configuration and service discovery.&lt;br&gt;
一个用于配置共享和服务发现的键值存储系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;归根结底，etcd 是一个&lt;strong&gt;键值存储&lt;/strong&gt;的组件，其他的应用都是基于其键值存储的功能展开。etcd 的存储有如下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用 kv 型数据存储，一般情况下比关系型数据库快。&lt;/li&gt;
&lt;li&gt;支持动态存储 (内存) 以及静态存储 (磁盘)。&lt;/li&gt;
&lt;li&gt;分布式存储，可集成为多节点集群。&lt;/li&gt;
&lt;li&gt;存储方式，采用类似目录结构。
&lt;ul&gt;
&lt;li&gt;只有叶子节点才能真正存储数据，相当于文件。&lt;/li&gt;
&lt;li&gt;叶子节点的父节点一定是目录，目录不能存储数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etcd leader 的延迟是要跟踪的最重要的指标，并且内置仪表板具有专用于此的视图。在我们的测试中，严重的延迟会在群集内造成不稳定，因为 Raft 的速度仅与大多数机器中最慢的机器一样快。我们可以通过适当地调整群集来缓解此问题。etcd 已在具有高度可变网络的云提供商上进行了预调。&lt;/p&gt;
&lt;h3 id=&#34;22-服务注册与发现&#34;&gt;2.2 服务注册与发现&lt;/h3&gt;
&lt;p&gt;服务注册与发现 (Service Discovery) 要解决的是分布式系统中最常见的问题之一，即在同一个分布式集群中的进程或服务如何才能找到对方并建立连接。从本质上说，服务发现就是要了解集群中是否有进程在监听 UDP 或者 TCP 端口，并且通过名字就可以进行查找和链接。&lt;/p&gt;
&lt;p&gt;要解决服务发现的问题，需要下面三大支柱，缺一不可。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/etcd-1/etcd-discovery_hu18148413570535397156.webp 400w,
               /blog/etcd-1/etcd-discovery_hu15063663101303189404.webp 760w,
               /blog/etcd-1/etcd-discovery_hu7135591955037423801.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/etcd-1/etcd-discovery_hu18148413570535397156.webp&#34;
               width=&#34;760&#34;
               height=&#34;137&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;强一致性、高可用的服务存储目录。
基于 Raft 算法的 etcd 天生就是这样一个强一致性、高可用的服务存储目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一种注册服务和服务健康状况的机制。
用户可以在 etcd 中注册服务，并且对注册的服务配置 key TTL，定时保持服务的心跳以达到监控健康状态的效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一种查找和连接服务的机制。通过在 etcd 指定的主题下注册的服务业能在对应的主题下查找到。为了确保连接，我们可以在每个服务机器上都部署一个 Proxy 模式的 etcd，这样就可以确保访问 etcd 集群的服务都能够互相连接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;etcd2 中引入的 etcd/raft 库，是目前最稳定、功能丰富的开源一致性协议之一。作为 etcd、TiKV、CockcorachDB、Dgraph 等知名分布式数据库的核心数据复制引擎，etcd/raft 驱动了超过十万个集群，是被最为广泛采用一致性协议实现之一。etcd3 中引入的多版本控制、事务等功能，大大的简化了分布式应用的开发流程，提高了效率和稳定性。经过 5 年的演进，etcd 也已经成为了各种容器编排系统的默认存储选项。Kubernetes 是流行的容器平台，运行在任何环境的 Kubernetes 集群都依赖 etcd 来提供稳定而可靠的存储服务。&lt;/p&gt;
&lt;h3 id=&#34;23-消息发布与订阅&#34;&gt;2.3 消息发布与订阅&lt;/h3&gt;
&lt;p&gt;在分布式系统中，最适用的一种组件间通信方式就是消息发布与订阅。即构建一个配置共享中心，数据提供者在这个配置中心发布消息，而消息使用者则订阅他们关心的主题，一旦主题有消息发布，就会实时通知订阅者。通过这种方式可以做到分布式系统配置的集中式管理与动态更新。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/etcd-1/etcd-msg_hu18036998615289448758.webp 400w,
               /blog/etcd-1/etcd-msg_hu13116856833257413450.webp 760w,
               /blog/etcd-1/etcd-msg_hu8504133897407878143.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/etcd-1/etcd-msg_hu18036998615289448758.webp&#34;
               width=&#34;760&#34;
               height=&#34;538&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;应用中用到的一些配置信息放到 etcd 上进行集中管理。这类场景的使用方式通常是这样：应用在启动的时候主动从 etcd 获取一次配置信息，同时，在 etcd 节点上注册一个 Watcher 并等待，以后每次配置有更新的时候，etcd 都会实时通知订阅者，以此达到获取最新配置信息的目的。&lt;/p&gt;
&lt;p&gt;分布式搜索服务中，索引的元信息和服务器集群机器的节点状态存放在 etcd 中，供各个客户端订阅使用。使用 etcd 的 key TTL 功能可以确保机器状态是实时更新的。&lt;/p&gt;
&lt;p&gt;分布式日志收集系统。这个系统的核心工作是收集分布在不同机器的日志。收集器通常是按照应用（或主题）来分配收集任务单元，因此可以在 etcd 上创建一个以应用（主题）命名的目录 P，并将这个应用（主题相关）的所有机器 ip，以子目录的形式存储到目录 P 上，然后设置一个 etcd 递归的 Watcher，递归式的监控应用（主题）目录下所有信息的变动。这样就实现了机器 IP（消息）变动的时候，能够实时通知到收集器调整任务分配。&lt;/p&gt;
&lt;p&gt;系统中信息需要动态自动获取与人工干预修改信息请求内容的情况。通常是暴露出接口，例如 JMX 接口，来获取一些运行时的信息。引入 etcd 之后，就不用自己实现一套方案了，只要将这些信息存放到指定的 etcd 目录中即可，etcd 的这些目录就可以通过 HTTP 的接口在外部访问。&lt;/p&gt;
&lt;h3 id=&#34;24-分布式通知与协调&#34;&gt;2.4 分布式通知与协调&lt;/h3&gt;
&lt;p&gt;这里说到的分布式通知与协调，与消息发布和订阅有些相似。在分布式系统中，最适用的一种组件间通信方式就是消息发布与订阅。即构建一个配置共享中心，数据提供者在这个配置中心发布消息，而消息使用者则订阅他们关心的主题，一旦主题有消息发布，就会实时通知订阅者。通过这种方式可以做到分布式系统配置的集中式管理与动态更新。&lt;/p&gt;
&lt;p&gt;这里用到了 etcd 中的 Watcher 机制，通过注册与异步通知机制，实现分布式环境下不同系统之间的通知与协调，从而对数据变更做到实时处理。实现方式通常是这样：不同系统都在 etcd 上对同一个目录进行注册，同时设置 Watcher 观测该目录的变化（如果对子目录的变化也有需要，可以设置递归模式），当某个系统更新了 etcd 的目录，那么设置了 Watcher 的系统就会收到通知，并作出相应处理。&lt;/p&gt;
&lt;p&gt;通过 etcd 进行低耦合的心跳检测。检测系统和被检测系统通过 etcd 上某个目录关联而非直接关联起来，这样可以大大减少系统的耦合性。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/etcd-1/etcd-notify_hu7512632628819129832.webp 400w,
               /blog/etcd-1/etcd-notify_hu11482575857688984729.webp 760w,
               /blog/etcd-1/etcd-notify_hu4252029922470450517.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/etcd-1/etcd-notify_hu7512632628819129832.webp&#34;
               width=&#34;760&#34;
               height=&#34;358&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;通过 etcd 完成系统调度。某系统有控制台和推送系统两部分组成，控制台的职责是控制推送系统进行相应的推送工作。管理人员在控制台作的一些操作，实际上是修改了 etcd 上某些目录节点的状态，而 etcd 就把这些变化通知给注册了 Watcher 的推送系统客户端，推送系统再作出相应的推送任务。&lt;/p&gt;
&lt;p&gt;通过 etcd 完成工作汇报。大部分类似的任务分发系统，子任务启动后，到 etcd 来注册一个临时工作目录，并且定时将自己的进度进行汇报（将进度写入到这个临时目录），这样任务管理者就能够实时知道任务进度。&lt;/p&gt;
&lt;h3 id=&#34;25-分布式锁&#34;&gt;2.5 分布式锁&lt;/h3&gt;
&lt;p&gt;当在分布式系统中，数据只有一份（或有限制），此时需要利用锁的技术控制某一时刻修改数据的进程数。与单机模式下的锁不仅需要保证进程可见，分布式环境下还需要考虑进程与锁之间的网络问题。&lt;/p&gt;
&lt;p&gt;分布式锁可以将标记存在内存，只是该内存不是某个进程分配的内存而是公共内存如 Redis、Memcache。至于利用数据库、文件等做锁与单机的实现是一样的，只要保证标记能互斥就行。&lt;/p&gt;
&lt;p&gt;因为 etcd 使用 Raft 算法保持了数据的强一致性，某次操作存储到集群中的值必然是全局一致的，所以很容易实现分布式锁。锁服务有两种使用方式，一是保持独占，二是控制时序。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/etcd-1/etcd-lock_hu13937253639314369529.webp 400w,
               /blog/etcd-1/etcd-lock_hu18269070502535754027.webp 760w,
               /blog/etcd-1/etcd-lock_hu6691741716514659947.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/etcd-1/etcd-lock_hu13937253639314369529.webp&#34;
               width=&#34;760&#34;
               height=&#34;299&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;保持独占即所有获取锁的用户最终只有一个可以得到。etcd 为此提供了一套实现分布式锁原子操作 CAS（CompareAndSwap）的 API。通过设置 prevExist 值，可以保证在多个节点同时去创建某个目录时，只有一个成功。而创建成功的用户就可以认为是获得了锁。&lt;/p&gt;
&lt;p&gt;控制时序，即所有想要获得锁的用户都会被安排执行，但是获得锁的顺序也是全局唯一的，同时决定了执行顺序。etcd 为此也提供了一套 API（自动创建有序键），对一个目录建值时指定为 POST 动作，这样 etcd 会自动在目录下生成一个当前最大的值为键，存储这个新的值（客户端编号）。同时还可以使用 API 按顺序列出所有当前目录下的键值。此时这些键的值就是客户端的时序，而这些键中存储的值可以是代表客户端的编号。&lt;/p&gt;
&lt;h2 id=&#34;3-小结&#34;&gt;3. 小结&lt;/h2&gt;
&lt;p&gt;本章主要介绍了 etcd 的相关概念，以及 etcd 主要的使用场景。etcd 在分布式环境中是一个利器，在一致性存储方面有广泛的应用。下一篇将会具体介绍 etcd 的安装以及使用的实践。&lt;/p&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://etcd.io/docs/v3.4.0/op-guide/clustering/#error-cases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;etcd 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Service Mesh Webinar #1</title>
      <link>https://cloudnative.to/blog/service-mesh-webinar-1/</link>
      <pubDate>Mon, 18 May 2020 20:12:18 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-webinar-1/</guid>
      <description>&lt;p&gt;Service Mesh Webinar 是由 ServiceMesher 社区和 CNCF 联合发起的线上直播活动，活动将不定期举行，邀请社区成员为大家带来 Service Mesh 领域的知识和实践分享。&lt;/p&gt;
&lt;p&gt;Service Mesh Webinar#1，邀请多点生活平台架构组研发工程师陈鹏，带来分享《多点生活在 Service Mesh 上的实践——Istio + MOSN 在 Dubbo 场景下的探索之路》。&lt;/p&gt;
&lt;p&gt;随着多点生活的业务发展，传统微服务架构的面临升级困难的问题。在云原生的环境下，Service Mesh 能给我们带来什么好处。如何使用社区解决方案兼容现有业务场景，落地成符合自己的 Service Mesh 成为一个难点。服务之间主要通过 Dubbo 交互，本次分享将探索 Istio + MOSN 在 Dubbo 场景下的改造方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直播时间：2020 年 5 月 28 日（周四）20:00-21:00&lt;/li&gt;
&lt;li&gt;直播地址：&lt;a href=&#34;https://live.bilibili.com/21954520&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://live.bilibili.com/21954520&lt;/a&gt;（欢迎关注直播间）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分享主题&#34;&gt;分享主题&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;《多点生活在 Service Mesh 上的实践——Istio + MOSN 在 Dubbo 场景下的探索之路》&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;分享嘉宾&#34;&gt;分享嘉宾&lt;/h2&gt;
&lt;p&gt;陈鹏，多点生活平台架构组研发工程师，开源项目与云原生爱好者，有多年的网上商城、支付系统相关开发经验，2019 年至今从事云原生和 Service Mesh 相关开发工作。&lt;/p&gt;
&lt;h2 id=&#34;详情&#34;&gt;详情&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;解决思路：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从 MCP、Pilot、xDS、MOSN 技术，对 Service Mesh 的可切入点分析。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;成果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;结合现有业务场景和可切入点，明确需要修改的场景，制定符合自己业务场景的 Service Mesh 落地方案，介绍多点生活在 Dubbo 案例的探索及改造方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大纲：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传统微服务架构与 Service Mesh 架构
&lt;ul&gt;
&lt;li&gt;传统微服务架构在多点遇到的痛点&lt;/li&gt;
&lt;li&gt;Service Mesh 架构能带来的福利&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Istio 技术点介绍&lt;/li&gt;
&lt;li&gt;在 Dubbo 场景下的改造分析
&lt;ul&gt;
&lt;li&gt;对比 MOSN 和 Envoy 对现有场景的支持&lt;/li&gt;
&lt;li&gt;Istio+MOSN 和 Istio+Envoy 在 Dubbo 场景下如何改造&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MOSN + Istio 具体实现探索
&lt;ul&gt;
&lt;li&gt;MOSN 配置文件介绍、从一个流量进来到转发到具体的远端的流程分析&lt;/li&gt;
&lt;li&gt;Provider 配置信息如何下发到 Sidecar&lt;/li&gt;
&lt;li&gt;从多点现在的实际场景对现有的 Dubbo 改造方案&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Demo 演示&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Service Mesh Virtual Meetup #1</title>
      <link>https://cloudnative.to/blog/service-mesh-virtual-meetup-1/</link>
      <pubDate>Wed, 06 May 2020 10:41:54 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-virtual-meetup-1/</guid>
      <description>&lt;p&gt;因为疫情的原因，ServiceMesher 社区暂时无法举办线下 meetup，因此我们将活动改为线上，将采用 B 站直播的形式。本期为第一届 Service Mesh Virtual Meetup 线上系列直播，邀请了四位来自不同公司的嘉宾，从四个角度对 Service Mesh 的应用实践展开分享。&lt;/p&gt;
&lt;p&gt;本次线上 meetup 分享涵盖 Service Mesh 的可观察性和生产实践。为大家介绍 Service Mesh 中的可观察性与传统微服务中可观察性的区别，如何使用 SkyWalking 来观测 Service Mesh，还有来自百度和陌陌的 Service Mesh 生产实践。&lt;/p&gt;
&lt;p&gt;本系列采用线上直播的形式，从 2020 年 5 月 6 日开始到 5 月 14 日，每周三、周四晚上 19:00-20:00 我们相约进行一个主题分享。&lt;/p&gt;
&lt;h3 id=&#34;直播信息&#34;&gt;直播信息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;直播地址&lt;/strong&gt;：https://live.bilibili.com/21954520&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直播回放地址&lt;/strong&gt;：https://space.bilibili.com/228717294/channel/detail?cid=126804&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PPT 下载地址&lt;/strong&gt;：https://github.com/servicemesher/meetup-slides/tree/master/2020/05/virtual&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎关注直播间，四期直播都会在此地址展开，关注后可以获得开播提醒。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;时间&lt;/th&gt;
          &lt;th&gt;分享主题&lt;/th&gt;
          &lt;th&gt;分享嘉宾&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;5 月 6 日&lt;/td&gt;
          &lt;td&gt;陌陌的 Service Mesh 实践&lt;/td&gt;
          &lt;td&gt;高飞航 陌陌中间件架构师&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5 月 7 日&lt;/td&gt;
          &lt;td&gt;Apache SkyWalking 在 Service Mesh 中的可观察性应用&lt;/td&gt;
          &lt;td&gt;高洪涛 Tetrate 创始工程师&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5 月 13 日&lt;/td&gt;
          &lt;td&gt;Service Mesh 高可用在企业级生产中的实践&lt;/td&gt;
          &lt;td&gt;罗广明 百度高级研发工程师&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5 月 14 日&lt;/td&gt;
          &lt;td&gt;Service Mesh 中的可观察性实践&lt;/td&gt;
          &lt;td&gt;叶志远 G7 微服务架构师&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;陌陌的-service-mesh-实践&#34;&gt;陌陌的 Service Mesh 实践&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;**时间：**2020/5/6（周三）19:00-20:00&lt;/li&gt;
&lt;li&gt;**嘉宾：**高飞航 陌陌中间件架构师&lt;/li&gt;
&lt;li&gt;**嘉宾简介：**在微服务、多机房架构及中间件产品领域有较为深入的研究，当前关注 Service Mesh、云原生等技术方向。&lt;/li&gt;
&lt;li&gt;**Topic 简介：**本期分享讲介绍陌陌从传统微服务架构转向 Service Mesh 架构的探索历程，以及在 Service Mesh 落地实践中关键方案与思考。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;视频回放&lt;/strong&gt;：https://www.bilibili.com/video/BV1xQ4y1N7PR/&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;apache-skywalking-在-service-mesh-中的可观察性应用&#34;&gt;Apache SkyWalking 在 Service Mesh 中的可观察性应用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;**时间：**2020/5/6（周四）19:00-20:00&lt;/li&gt;
&lt;li&gt;**嘉宾：**高洪涛 Tetrate 创始工程师&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;嘉宾简介&lt;/strong&gt;：FoundingEngineer 美国 Service Mesh 服务商 Tetrate 创始工程师。原华为软件开发云技术专家，对云原生产品有丰富的设计，研发与实施经验。对分布式数据库、容器调度、微服务、Servic Mesh 等技术有深入的了解。目前为 Apache ShardingSphere 和 Apache SkyWalking 核心贡献者，参与该开源项目在软件开发云的商业化进程。前当当网系统架构师，开源达人，曾参与 Elastic-Job 等知名开源项目。对开源项目的管理，推广和社区运营有丰富的经验。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Topic 简介&lt;/strong&gt;：Service Mesh 的可观测性是其重要的实践领域。业界翘楚 Istio 使用 Jaeger+Promethues 技术打造其可观测体系。而各个云提供商也分别将自己的监控方案融合在对 Service Mesh 的观测中。可观测性一般包含三个领域：Metric 监控指标、Tracing 分布式追踪和日志搜集。SkyWalking 对前两个领域都有涉猎。SkyWalking 是较早涉足了对 Istio 的 Metric 指标分析的开源项目。从早期的 Mixer 方案一直追踪到后期的与 Envoy 融合方案，同时得益于 MOSN 社区的支持，目前完成 MOSN 对 SkyWalking 追踪模型的支持。本次分享将分别以 Istio 与 MOSN 为例，介绍 SkyWalking 对 Service Mesh 的可观测性的支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;service-mesh-高可用在企业级生产中的实践&#34;&gt;Service Mesh 高可用在企业级生产中的实践&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;**时间：**2020/5/13（周三）19:00-20:00&lt;/li&gt;
&lt;li&gt;**嘉宾：**罗广明 百度高级研发工程师&lt;/li&gt;
&lt;li&gt;**嘉宾简介：**百度高级研发工程师，开源项目与云原生技术爱好者，ServiceMesher 社区治理委员会核心成员，对微服务架构、模型、中间件有深入研究。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Topic 简介&lt;/strong&gt;：Service Mesh 在企业落地中有诸多挑战，当与传统微服务应用共同部署治理时可用性挑战更为严峻。本次分享将以 Service Mesh 与 Spring Cloud 应用“互联互通、共同治理”为出发点，着重介绍基于 consul 的注册中心的高可用方案，通过智能路由策略实现服务间调用的高可用，以及通过各种限流、熔断策略保证后端服务的高可用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;service-mesh-中的可观察性实践&#34;&gt;Service Mesh 中的可观察性实践&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;**时间：**2020/5/14（周四）19:00-20:00&lt;/li&gt;
&lt;li&gt;**嘉宾：**叶志远 G7 微服务架构师&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;嘉宾简介&lt;/strong&gt;：Spring Cloud 中国社区联合创始人，ServiceMesher 社区成员，《重新定义 Spring Cloud 实战》作者，国内微服务领域早期实践者，云原生追随者。&lt;/li&gt;
&lt;li&gt;**Topic 简介：**监控是一个老生常谈的话题，而云原生的出现，将监控提升到了一个新的高度，那就是 Oberservability，译作可观察性，它是一种理念，是一种与伸缩性、可用性等非业务性需求同等重要的理念。Service Mesh 是云原生架构中专门治理服务间通讯问题的代理组件，我们有必要随时了解它的运行情况。本次分享将介绍 CNCF Oberservability Landscape，传统监控与可观察性在方法论上的区别，以现实的角度思考 Tracing、Logging、Metrics 三大问题，以及 Service Mesh 可观察性中间件的选型哲学。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>第九届 Service Mesh Meetup 杭州站回顾</title>
      <link>https://cloudnative.to/blog/service-mesh-meetup-hangzhou-20191228/</link>
      <pubDate>Mon, 30 Dec 2019 10:53:29 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-meetup-hangzhou-20191228/</guid>
      <description>&lt;p&gt;第九届 Service Mesh Meetup 杭州站，12 月 28 日在杭州滴滴举行，现场 150+ 参与，下面是现场合影（人太多，镜头没装下）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-活动现场照片&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;活动现场照片&#34; srcset=&#34;
               /blog/service-mesh-meetup-hangzhou-20191228/006tNbRwly1gaequ1tjurj30sg0iyacg_hu6671702569763823363.webp 400w,
               /blog/service-mesh-meetup-hangzhou-20191228/006tNbRwly1gaequ1tjurj30sg0iyacg_hu9263437273082458599.webp 760w,
               /blog/service-mesh-meetup-hangzhou-20191228/006tNbRwly1gaequ1tjurj30sg0iyacg_hu8314894492940466127.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-hangzhou-20191228/006tNbRwly1gaequ1tjurj30sg0iyacg_hu6671702569763823363.webp&#34;
               width=&#34;760&#34;
               height=&#34;506&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      活动现场照片
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;视频回放与资料下载&#34;&gt;视频回放与资料下载&lt;/h2&gt;
&lt;p&gt;地址：https://tech.antfin.com/community/activities/1056&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;p&gt;感谢以下单位的大力支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联合主办方&lt;a href=&#34;https://tech.antfin.com/activities/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蚂蚁金服金融科技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.phei.com.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;电子工业出版社&lt;/a&gt;赠书&lt;/li&gt;
&lt;li&gt;滴滴提供场地支持&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>第七届 Service Mesh Meetup 成都站回顾</title>
      <link>https://cloudnative.to/blog/service-mesh-meetup-chengdu-20191028/</link>
      <pubDate>Mon, 28 Oct 2019 10:41:54 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-meetup-chengdu-20191028/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-第七届-service-mesh-meetup-成都站&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*mNeZTJb444kAAAAAAAAAAABkARQnAQ&#34; alt=&#34;第七届 Service Mesh Meetup 成都站&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      第七届 Service Mesh Meetup 成都站
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;基于-5g-管理网络的服务网格实践&#34;&gt;《基于 5G 管理网络的服务网格实践》》&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;主讲人：赵化冰 中兴通讯 网管软件资深专家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在通信网络向 5G 演进的过程中，电信行业借鉴了 IT 行业的微服务架构和云原生相关技术对 5G 网络功能进行重构，以提供敏捷、灵活、易于扩展的业务能力。本演讲主题将介绍在 5G 网络管理平台的微服务架构中落地微服务网格的产品实践，包括多网络平面支持、API 网关和网格 Ingress 的定位、Consul Registry 的性能增强等等。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-赵化冰-service-mesh-meetup-成都站&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*2BziTaGWLZMAAAAAAAAAAABkARQnAQ&#34; alt=&#34;赵化冰 Service Mesh Meetup 成都站&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      赵化冰 Service Mesh Meetup 成都站
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;蚂蚁金服网络代理的演进之路&#34;&gt;《蚂蚁金服网络代理的演进之路》&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;主讲人：肖涵（涵畅）蚂蚁金服高级技术专家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从网络硬件设备到自研平台，从传统服务治理到 Service Mesh，本次分享将介绍蚂蚁金服网络代理在接入层以及 Service Mesh 化道路上是如何一步步支撑秒级百万支付，千万红包请求的。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-肖涵涵畅service-mesh-meetup-成都站&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*kvjrQZpBW_UAAAAAAAAAAABkARQnAQ&#34; alt=&#34;肖涵（涵畅）Service Mesh Meetup 成都站&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      肖涵（涵畅）Service Mesh Meetup 成都站
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;进击的-traefik云原生边缘路由探秘&#34;&gt;《进击的 Traefik——云原生边缘路由探秘》&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;主讲人：杨川胡（阳明）知群后台负责人&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Traefik 是一个云原生的边缘路由器，开源的反向代理和负载均衡器，寄予厚望的 2.0 版本历时一年的开发终于发布了，此处大版本的更新新增了许多新的特性，特别是大家期望的对 TCP 的支持，在当前 topic 中我们将来探索 Traefik 2.0 有哪些值得我们关注的新特性。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-杨川胡-service-mesh-meetup-成都站&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*4yxbTJMaUHsAAAAAAAAAAABkARQnAQ&#34; alt=&#34;杨川胡 Service Mesh Meetup 成都站&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      杨川胡 Service Mesh Meetup 成都站
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;service-mesh-下微服务的架构设计&#34;&gt;《Service Mesh 下微服务的架构设计》&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;主讲人：杨彪 美团高级技术专家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当下 Service Mesh 技术可以说是炙手可热，它通过容器编排、持续交付 DevOps、以及微服务等理论和方法来构建和运行云原生应用。然而 Service Mesh 毕竟发展才短短的 2 年，对于我们刚刚熟悉和稳定的微服务架构又将带来哪些挑战，业务系统架构是否有必要升级到 Service Mesh，我们的微服务架构设计将发生什么改变，这些问题杨彪在本次 meetup 跟大家进行了交流讨论。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-杨彪-service-mesh-meetup-成都站&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*KfVlTbB3RlgAAAAAAAAAAABkARQnAQ&#34; alt=&#34;杨彪 Service Mesh Meetup 成都站&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      杨彪 Service Mesh Meetup 成都站
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;幻灯片下载及直播视频回放地址&#34;&gt;幻灯片下载及直播视频回放地址&lt;/h2&gt;
&lt;p&gt;历届 Service Mesh Meetup 幻灯片归档地址：https://github.com/servicemesher/meetup-slides&lt;/p&gt;
&lt;p&gt;视频直播回放地址：https://tech.antfin.com/activities/949&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;p&gt;感谢以下单位的大力支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联合主办方&lt;a href=&#34;https://tech.antfin.com/activities/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蚂蚁金服金融科技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cncf.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.phei.com.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;电子工业出版社&lt;/a&gt;赠书&lt;/li&gt;
&lt;li&gt;中生代技术社区&lt;/li&gt;
&lt;li&gt;掘金&lt;/li&gt;
&lt;li&gt;开源社&lt;/li&gt;
&lt;li&gt;NEXT 创业空间&lt;/li&gt;
&lt;li&gt;养码场&lt;/li&gt;
&lt;li&gt;开源中国&lt;/li&gt;
&lt;li&gt;Segmentfault&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>第六届 Service Mesh Meetup 广州站回顾</title>
      <link>https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190811/</link>
      <pubDate>Tue, 13 Aug 2019 10:41:54 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190811/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-第六届-service-mesh-meetup&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*jDqoTJLCrcEAAAAAAAAAAABkARQnAQ&#34; alt=&#34;第六届 Service Mesh Meetup&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      第六届 Service Mesh Meetup
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;虎牙直播在微服务改造方面的实践&#34;&gt;《虎牙直播在微服务改造方面的实践》&lt;/h4&gt;
&lt;p&gt;张波 虎牙基础保障部中间件团队负责人&lt;/p&gt;
&lt;p&gt;本次主要分享虎牙注册中心、名字服务、DNS 的改造实践，以及如何通过 Nacos 实现与 istio 打通实现，使微服务平滑过渡到 service mesh。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-张波-虎牙基础保障部中间件团队负责人&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*yuUFSL3ToOMAAAAAAAAAAABkARQnAQ&#34; alt=&#34;张波 虎牙基础保障部中间件团队负责人&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      张波 虎牙基础保障部中间件团队负责人
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;service-mesh-在蚂蚁金服的生产级安全实践&#34;&gt;《Service Mesh 在蚂蚁金服的生产级安全实践》&lt;/h4&gt;
&lt;p&gt;彭泽文 蚂蚁金服高级开发工程师&lt;/p&gt;
&lt;p&gt;介绍通过 Envoy SDS（Secret Discovery Service）实现 Sidecar 证书管理的落地方案；分享如何为可信身份服务构建敏感信息数据下发通道，以及 Service Mesh Sidecar 的 TLS 生产级落地实践。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-彭泽文-蚂蚁金服高级开发工程师&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*bzoXQ5icbBsAAAAAAAAAAABkARQnAQ&#34; alt=&#34;彭泽文 蚂蚁金服高级开发工程师&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      彭泽文 蚂蚁金服高级开发工程师
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;基于-kubernetes-的微服务实践&#34;&gt;《基于 Kubernetes 的微服务实践》&lt;/h4&gt;
&lt;p&gt;涂小刚 慧择网运维经理&lt;/p&gt;
&lt;p&gt;介绍如何跟据现有业务环境情况制定容器化整体解决方案，导入业务进入 K8S 平台，容器和原有业务环境互通。制订接入规范、配置中心对接 K8S 服务、网络互通方案、DNS 互通方案、jenkins-pipeline 流水线构建方案、日志采集方案、监控方案等。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-涂小刚-慧择网运维经理&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*XNWeRaon9z4AAAAAAAAAAABkARQnAQ&#34; alt=&#34;涂小刚 慧择网运维经理&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      涂小刚 慧择网运维经理
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;service-mesh-发展趋势续棋到中盘路往何方&#34;&gt;《Service Mesh 发展趋势（续）：棋到中盘路往何方》&lt;/h4&gt;
&lt;p&gt;敖小剑 蚂蚁金服高级技术专家&lt;/p&gt;
&lt;p&gt;继续探讨 Service Mesh 发展趋势：深度分析 Istio 的重大革新 Mixer v2，Envoy 支持 Web Assembly 的意义所在，以及在 Mixer v2 出来之前的权宜之计; 深入介绍 Google Traffic Director 对虚拟机模式的创新支持方式，以及最近围绕 SMI 发生的故事。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-敖小剑-蚂蚁金服高级技术专家&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gw.alipayobjects.com/mdn/rms_91f3e6/afts/img/A*Bv_qSrl_7jEAAAAAAAAAAABkARQnAQ&#34; alt=&#34;敖小剑 蚂蚁金服高级技术专家&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      敖小剑 蚂蚁金服高级技术专家
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;幻灯片下载&#34;&gt;幻灯片下载&lt;/h2&gt;
&lt;p&gt;地址：https://tech.antfin.com/activities/781/review&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;p&gt;感谢以下单位的大力支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联合主办方&lt;a href=&#34;https://tech.antfin.com/activities/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蚂蚁金服金融科技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.phei.com.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;电子工业出版社&lt;/a&gt;赠书&lt;/li&gt;
&lt;li&gt;阿里巴巴 UC 提供场地支持&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>微服务中的熔断简介及工作原理详解（第 2 部分）</title>
      <link>https://cloudnative.to/blog/preventing-systemic-failure-circuit-breaking-part-2/</link>
      <pubDate>Mon, 20 May 2019 12:10:44 +0800</pubDate>
      <guid>https://cloudnative.to/blog/preventing-systemic-failure-circuit-breaking-part-2/</guid>
      <description>&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://glasnostic.com/blog/preventing-systemic-failure-circuit-breaking-part-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编者按&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文是一篇来自 Glasnostic 官网的博客。作为介绍熔断系列文章的第二篇，本文通过介绍开发人员和运维人员两种不同视角下的微服务典型应用场景，引入进阶的熔断功能。进而分别介绍和对比了熔断功能的三种不同实现：Hystrix, Service Mesh (Istio、Linkerd) 和 Glasnostic。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/preventing-systemic-failure-circuit-breaking-part-2/cover_hu8497827330450531734.webp 400w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/cover_hu9348111016986719056.webp 760w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/cover_hu4056416210292942955.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/preventing-systemic-failure-circuit-breaking-part-2/cover_hu8497827330450531734.webp&#34;
               width=&#34;760&#34;
               height=&#34;565&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这是关于熔断的两部分系列文章的第二部分。在&lt;a href=&#34;https://glasnostic.com/blog/preventing-systemic-failure-circuit-breaking-part-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;第一部分&lt;/a&gt;中，我们介绍了该模式以及开发人员和运维人员如何以不同的方式处理它。而在本文中，我们将探讨它的典型应用场景以及如何在现代服务中间件中实现它。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;典型的微服务应用场景&#34;&gt;典型的微服务应用场景&lt;/h2&gt;
&lt;p&gt;开发人员和运维人员通常为不同的目的使用熔断。开发人员主要关心的是保护他们的代码，他们把熔断作为补偿上游故障的一种方法。另一方面，运维人员负责整个服务环境的稳定性和可用性，因此主要使用熔断来监控和补救。&lt;/p&gt;
&lt;h3 id=&#34;开发人员对上游故障的补偿&#34;&gt;开发人员：对上游故障的补偿&lt;/h3&gt;
&lt;p&gt;除了“熔断”和继续前进，开发人员主要关心断路器的三个好处。首先，由于断路器允许开发人员处理服务故障，客户端可以以一种优雅的方式随时间动态地适应服务可用性的变化。其次，在微服务架构中共享状态的断路器提供了网络效果，可以显著提高故障响应能力。第三，断路器与智能路由和负载均衡相结合，可以自动用健康的服务实例替换故障的服务实例，从而促进自修复。&lt;/p&gt;
&lt;h3 id=&#34;运维人员监控和补救&#34;&gt;运维人员：监控和补救&lt;/h3&gt;
&lt;p&gt;断路器是运维团队在问题升级为更大问题之前发现问题的好方法。当断路器跳闸时，负责的工程团队调查相关日志和指标，运维员可能会决定将部分或大部分流量从服务中分流。由于它缓解了系统的急性压力、分流或削减负荷，因此成为了运维团队中对于断路器最流行的使用方式。&lt;/p&gt;
&lt;p&gt;另一个密切相关的变体是将断路器定义为这种架构中预先确定的断点。理想情况下，这种断路器应该安装在已知能够承受与关键系统成正比的负载的地方。这类断路器在本质上就像架构中的金丝雀 (canaries) 一样工作，通过卸载来促进再修复。&lt;/p&gt;
&lt;h3 id=&#34;进阶的熔断&#34;&gt;进阶的熔断&lt;/h3&gt;
&lt;p&gt;随着断路器从客户端库发展到中间件、共享状态断路器和平台，它们的定义也变得越来越多样化。断路器的开发人员和运维人员的应用场景出现了分歧，其定义涉及越来越多的参数。目前云流量控制器 (如 Glasnostic) 所提供的熔断功能，可以应用于由任意端点集定义的通信链路，并结合一些互补模式 (如超时、反压或&lt;a href=&#34;https://blog.acolyer.org/2014/10/24/brownout-building-more-robust-cloud-applications/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Brownouts&lt;/a&gt;)。然后，随着时间的推移，结合一些参数 (如请求速率、并发性、带宽或延迟) 对这些模式组合进行优化。&lt;/p&gt;
&lt;h2 id=&#34;hystrix-的熔断&#34;&gt;Hystrix 的熔断&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Netflix/Hystrix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netflix&amp;rsquo; Hystrix&lt;/a&gt;是第一个专门用于熔断的服务中间件。当它在 2012 年向公众发布，以提供“对延迟和失败有更大容忍度”的微服务架构时，Netflix 已经在内部广泛使用了一年多的时间了。根据这个&lt;a href=&#34;https://github.com/Netflix/Hystrix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;项目&lt;/a&gt;的描述，Hystrix 一直是 Netflix 服务中间件的基本组成部分之一，直到 2018 年底进入维护模式，这标志着“[关注点]转向更适应应用程序实时性能的实现，而不是预先配置的设置。”&lt;/p&gt;
&lt;p&gt;Hystrix 是一个 Java 库，开发人员可以使用它用熔断逻辑封装服务调用。它基于阈值，可以立即判定调用失败并执行回滚逻辑，具体参考&lt;a href=&#34;https://glasnostic.com/blog/preventing-systemic-failure-circuit-breaking-part-1#figure-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;第一部分&lt;/a&gt;。除了提供超时和并发限制之外，它还可以向监视工具发布度量 metrics。最后，当与&lt;a href=&#34;https://github.com/Netflix/archaius&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Archaius&lt;/a&gt;库一起使用时，它还可以支持动态配置更改。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/preventing-systemic-failure-circuit-breaking-part-2/hystrix_hu11592359715124292676.webp 400w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/hystrix_hu12921241027288453501.webp 760w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/hystrix_hu16524928461350959297.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/preventing-systemic-failure-circuit-breaking-part-2/hystrix_hu11592359715124292676.webp&#34;
               width=&#34;760&#34;
               height=&#34;452&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 1&lt;/strong&gt;. &lt;em&gt;Hystrix&lt;/em&gt; &lt;a href=&#34;https://github.com/Netflix-Skunkworks/hystrix-dashboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dashboard&lt;/a&gt; &lt;em&gt;显示了请求量、各种交互指标和中断状态。圆圈表示请求量，火花线表示过去 2 分钟内的呼叫量的变化。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;尽管 Hystrix 支持将熔断与超时和并发池相结合等改进，但最终证明它对于现代有机体系结构中日益动态的交互行为不够灵活。设置阈值和客户端并发池的能力为服务开发人员提供了足够的控制，使他们能够将代码与上游故障隔离开来，但是当系统和运维关注点变得重要时，这种能力就不再有用了。因此，Hystrix 的衰落是作为开发者模式下的熔断带来的限制的直接后果。&lt;/p&gt;
&lt;h2 id=&#34;服务网格中的熔断&#34;&gt;服务网格中的熔断&lt;/h2&gt;
&lt;h3 id=&#34;istio&#34;&gt;Istio&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://glasnostic.com/blog/kubernetes-service-mesh-what-is-istio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio&lt;/a&gt;是一个服务网格，它支持基于连接池、每个连接的请求和故障检测参数的熔断。它是在所谓的“目的地规则 (destination rules)”的帮助下做到这一点的，该规则告诉每个 Envoy 代理应用于通信的策略是什么，以及如何应用。这个步骤发生在路由之后，然而这并不总是理想的。目标规则可以指定负载均衡的限制、连接池大小以及最终符合“异常值”条件的参数，以便可以从负载均衡池中删除不健康的实例。这种类型的熔断擅长于使客户端免受服务端故障的影响，但是由于目标规则总是在集群范围内应用，所以它缺乏一种方法来将断路器限制在客户端的一个子集内。为了实现断路器与服务质量模式 (quality-of-service) 的组合，必须创建多个客户机子集的路由规则，并且每个子集都有自己的目标规则。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;DestinationRule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;some_microservice&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;some_microservice_host&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;trafficPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;connectionPool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tcp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxConnections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http1MaxPendingRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http2MaxRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxRequestsPerConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;outlierDetection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;consecutiveErrors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;2s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;baseEjectionTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;30s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxEjectionPercent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Figure 2&lt;/strong&gt;. &lt;em&gt;示例 Istio 断路器配置，可以直接通过 kubectl 命令执行。这种配置指定了基于连接池和故障 (&amp;lsquo;outlier detection&amp;rsquo;) 参数的熔断。在连接端，超过 10 个打开的 TCP 连接、超过 20 个挂起的 HTTP 请求或每个连接超过 3 个挂起的请求都会触发断路器。在故障检测方面，任何两个连续错误在两秒内相继发生，都会导致目标主机从负载均衡池中弹出至少 30 秒。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;linkerd&#34;&gt;Linkerd&lt;/h3&gt;
&lt;p&gt;Linkerd 中的熔断有点复杂，作为一种开发者模式，它反映了熔断的一般冲突状态。在 Linkerd 1 继续支持由原先花里胡哨的代码实现的&lt;a href=&#34;https://linkerd.io/1/features/circuit-breaking/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;完整的断路器&lt;/a&gt;的同时，一个完整的、轻量级的由 Rust 和 Go 重写的&lt;a href=&#34;https://glasnostic.com/blog/an-introduction-to-what-is-linkerd-service-mesh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linkerd 2&lt;/a&gt;，却不&lt;a href=&#34;https://github.com/linkerd/linkerd2/issues/1255&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;直接&lt;/a&gt;这么做。相反，它在其 Conduit 代理中提供了相关的功能，虽然不支持重试和超时，但它现在已经合并到 Linkerd 2 中。&lt;/p&gt;
&lt;p&gt;为了支持重试和超时，Linkerd 2.1 引入了“service profiles”的概念，这是定制化的 Kubernetes 资源，用于向 Linkerd 提供关于服务的额外信息。使用服务 profile 文件，运维人员现在可以将路由定义为“可重试”或具有特定超时机制。虽然这提供了一些与之相关的基本功能，但是 Linkerd 中的熔断仍然是一个很长的路要走。&lt;/p&gt;
&lt;h2 id=&#34;glasnostic-中的熔断&#34;&gt;Glasnostic 中的熔断&lt;/h2&gt;
&lt;p&gt;Glasnostic 是一个云流量控制器，它使运维团队能够有效控制他们的有机架构所衍生的复杂的紧急异常。这使公司能够以敏捷的方式运行不同的架构模式，而无需对每个更改进行昂贵的重新验证。因此，开发和运营都处于理想的位置，以适应公司快速变化的业务需求。&lt;/p&gt;
&lt;p&gt;与 Hystrix 和 service meshes 不同的是，它们从开发人员的角度实现了熔断，而 Glasnostic 将熔断作为一种运维模式来实现，这是为运维人员设计的。&lt;/p&gt;
&lt;p&gt;Glasnostic 的控制平面提供了大规模、复杂和动态交互行为的高可视性，使运维人员能够快速修复问题。通过对任意服务端点集之间的交互进行细粒度控制，运维人员能够应用经过实践验证的、可预测的运维模式，比如断路。因为运维模式可以很容易地结合起来形成高度精炼的复合模式，所以断路器同样可以根据请求速率、带宽或并发数，通过将它们与&lt;a href=&#34;https://glasnostic.com/blog/preventing-systems-fail-backpressure&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;backpressure&lt;/a&gt;等结合起来，轻松地进行改进。&lt;/p&gt;
&lt;p&gt;例如，&lt;strong&gt;Figure 3&lt;/strong&gt;显示了一个通道（channel）的设置，该通道用于监视和控制一组互不相关的服务中间歇重复出现的延迟峰值。在不寻找假定的出错根源的情况下，运维人员决定首先通过中断更长时间运行的请求来控制这种情况。他们首先定义一个覆盖有问题的服务和任何潜在客户端的新通道，然后对通道控制的交互施加适当的延迟限制，从而实现这一点。这使得运营团队能够在发生问题时控制局面，直到工程师能够提供一个修复方案。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/preventing-systemic-failure-circuit-breaking-part-2/monitor-control_hu5022519010858959348.webp 400w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/monitor-control_hu8017882614997876645.webp 760w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/monitor-control_hu16521345913374399729.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/preventing-systemic-failure-circuit-breaking-part-2/monitor-control_hu5022519010858959348.webp&#34;
               width=&#34;760&#34;
               height=&#34;376&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 3&lt;/strong&gt;. &lt;em&gt;Glasnostic 控制台，显示一个通道 (1)，用于监视和控制一系列服务中间歇重复出现的延迟峰值。将断路器配置为延时达到 1800 毫秒 (2) 时跳闸，作为运维团队的早期预警系统，同时控制情况。一旦负责维修的工程团队确定了修复方案，就可以移除断路器了。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;当然，最初的政策往往只是首先尝试补救局面，并且需要对调整保持开放的态度。调整或补充开放政策既快又容易。例如，运维团队可能会发现，初始通道策略可以通过第一个断开非关键任务客户机的电路来进一步细化，从而使关键任务客户机尽可能长时间地不受影响。为了实现这一点，他们可以定义一个只覆盖非关键任务客户端的细化通道，并添加一个基于连接和请求许可中断它们的策略。&lt;strong&gt;Figure 4&lt;/strong&gt;显示了这样一个辅助细化通道，在原始延迟断路器跳闸之前，通过设置的并发性和请求策略切断链路中非关键的客户端，从而提高了关键任务系统的可用性。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/preventing-systemic-failure-circuit-breaking-part-2/refine_hu16186545020959655192.webp 400w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/refine_hu18329111610263543798.webp 760w,
               /blog/preventing-systemic-failure-circuit-breaking-part-2/refine_hu10315933106889025933.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/preventing-systemic-failure-circuit-breaking-part-2/refine_hu16186545020959655192.webp&#34;
               width=&#34;760&#34;
               height=&#34;366&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Figure 4&lt;/strong&gt;. &lt;em&gt;Glasnostic 控制台显示之前设置的通道 (2) 的细化通道 (1)，首先根据连接池和请求速率参数配置断开非关键任务客户端，从而延迟了关键客户端 (3) 的熔断。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;与通常由服务中间件 (如 API 网关和服务网格) 提供的断路器不同，Glasnostic 支持将断路器作为一种运维模式，在任意端点集之间实时进行，而不是通过静态部署描述符进行。这允许运维人员指定断路器，这些断路器不仅是对本地交互的战术调整，而且是改善稳定性和可用性的步骤，这对整个服务领域都是有意义的。例如，当 Istio 基于目的地规则实现熔断时，Glasnostic 可以将熔断应用于任何一组交互、客户端或服务端，过去、现在或未来。因此，运维人员可以为不同的流量类型设置不同的策略。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;熔断是一种基本模式，旨在将故障的影响降到最低，防止级联故障和雪崩，并确保端到端性能。因为可以同时作为开发人员模式和运维模式使用，熔断被广泛地应用，但这也常常会引起混淆。&lt;/p&gt;
&lt;p&gt;作为一种开发人员模式，它主要用作一种相当基本的补偿策略，如果不考虑每个特定的调用，就很难对其进行细化。另一方面，断路器作为一种运维模式，旨在减轻系统的压力，以管理系统的稳定性和性能。通过将其与其他稳定模式 (如超时或背压) 相结合，通常可以进一步改进其行为。运维断路器过去依赖于单独部署的服务中间件，如 API 网关或服务网格。然而，由于服务网格主要解决了开发人员的关注点，所以作为一种运维模式对断路的支持是有限的，而且在实现之间是不一致的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>第五届 Service Mesh Meetup 广州站回顾</title>
      <link>https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/</link>
      <pubDate>Tue, 08 Jan 2019 10:41:54 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-2019-年广州-service-mesh-meetup&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;2019 年广州 service mesh meetup&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzewgs38j318g0oggth_hu11605808927586529061.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzewgs38j318g0oggth_hu6483868423719548878.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzewgs38j318g0oggth_hu16027918906410953234.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzewgs38j318g0oggth_hu11605808927586529061.webp&#34;
               width=&#34;760&#34;
               height=&#34;418&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      2019 年广州 service mesh meetup
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzfynn5xj318z0u0qv7_hu4152198259287726267.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzfynn5xj318z0u0qv7_hu10792236320911535253.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzfynn5xj318z0u0qv7_hu17496692130140061422.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzfynn5xj318z0u0qv7_hu4152198259287726267.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;唯品会-service-mesh-的实践分享&#34;&gt;唯品会 Service Mesh 的实践分享&lt;/h4&gt;
&lt;p&gt;郑德惠 唯品会 Java 资深开发工程师，内部 Service Mesh 框架负责人，唯品会开源项目 vjtools 重要开发者，10 年电信与互联网后台开发经验。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-郑德惠唯品会&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;郑德惠，唯品会&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgcyz4fj318z0u0x6q_hu3715696502046950095.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgcyz4fj318z0u0x6q_hu11593528707543321783.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgcyz4fj318z0u0x6q_hu10014826744859148344.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgcyz4fj318z0u0x6q_hu3715696502046950095.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      郑德惠，唯品会
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgjsjcqj318z0u0e83_hu10567533950704419558.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgjsjcqj318z0u0e83_hu12416184963115275891.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgjsjcqj318z0u0e83_hu7461807700423775169.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgjsjcqj318z0u0e83_hu10567533950704419558.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;sofamosn-持续演进路径及实践案例&#34;&gt;SOFAMosn 持续演进路径及实践案例&lt;/h4&gt;
&lt;p&gt;陈逸凡 花名无钩，蚂蚁金服资深开发工程师。专注于网络接入层，高性能服务器研发，SOFAMosn 团队核心成员&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-陈逸凡蚂蚁金服&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;陈逸凡，蚂蚁金服&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgx3sdyj318z0u0qv7_hu2730907609788446187.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgx3sdyj318z0u0qv7_hu5452204385180806235.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgx3sdyj318z0u0qv7_hu4860019690488847173.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzgx3sdyj318z0u0qv7_hu2730907609788446187.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      陈逸凡，蚂蚁金服
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhhpz8hj318z0u0qv7_hu9124594185662596939.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhhpz8hj318z0u0qv7_hu18328233793330489239.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhhpz8hj318z0u0qv7_hu9832055737779302340.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhhpz8hj318z0u0qv7_hu9124594185662596939.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;在网格的边缘试探企业-istio-试水指南&#34;&gt;在网格的边缘试探——企业 Istio 试水指南&lt;/h4&gt;
&lt;p&gt;崔秀龙 HPE 软件分析师，Kubernetes 权威指南作者之一，Kubernetes、Istio 项目成员&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-崔秀龙-service-mesh&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;崔秀龙 service mesh&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhvpwglj318z0u0u0z_hu1604626025497687655.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhvpwglj318z0u0u0z_hu1925250586633139804.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhvpwglj318z0u0u0z_hu3038308489650470118.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzhvpwglj318z0u0u0z_hu1604626025497687655.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      崔秀龙 service mesh
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyziaqb5uj318z0u04qs_hu8985892173588982126.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyziaqb5uj318z0u04qs_hu4564953516684131221.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyziaqb5uj318z0u04qs_hu1251096175288679095.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyziaqb5uj318z0u04qs_hu8985892173588982126.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;roundtable回顾-2018service-mesh-蓄势待发&#34;&gt;Roundtable：回顾 2018，Service Mesh 蓄势待发&lt;/h4&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzin8a2lj318z0u0x6r_hu2357607377382898608.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzin8a2lj318z0u0x6r_hu12272404821941838090.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzin8a2lj318z0u0x6r_hu2903233411286026261.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyyzin8a2lj318z0u0x6r_hu2357607377382898608.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;陈逸凡、崔秀龙、敖小剑、郑德惠共同参加的圆周讨论环节，共话 service mesh，解答观众现场提问。&lt;/p&gt;
&lt;h2 id=&#34;视频回放与资料下载&#34;&gt;视频回放与资料下载&lt;/h2&gt;
&lt;p&gt;地址：https://tech.antfin.com/activities/72/review&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;p&gt;感谢以下单位的大力支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联合主办方&lt;a href=&#34;https://tech.antfin.com/activities/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蚂蚁金服金融科技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.phei.com.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;电子工业出版社&lt;/a&gt;赠书&lt;/li&gt;
&lt;li&gt;阿里巴巴 UC 提供场地支持&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.yunxi.tv/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云犀直播&lt;/a&gt;提供直播支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyz1ppp9k7j309c05fwee_hu6533570537321452833.webp 400w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyz1ppp9k7j309c05fwee_hu17839597893074641969.webp 760w,
               /blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyz1ppp9k7j309c05fwee_hu4086731099929278651.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-guangzhou-20190106/006tNc79ly1fyz1ppp9k7j309c05fwee_hu6533570537321452833.webp&#34;
               width=&#34;336&#34;
               height=&#34;195&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>第四届 Service Mesh Meetup 上海站回顾</title>
      <link>https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/</link>
      <pubDate>Mon, 26 Nov 2018 10:53:29 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/</guid>
      <description>&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakbx6s5j318w0u0k9k_hu14737541524499495948.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakbx6s5j318w0u0k9k_hu16760077487302872097.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakbx6s5j318w0u0k9k_hu970182048092107922.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakbx6s5j318w0u0k9k_hu14737541524499495948.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;observability-and-istio-telemetry&#34;&gt;Observability and Istio telemetry&lt;/h4&gt;
&lt;p&gt;吴晟 Apache SkyWalking 创始人、Apache Sharding-Sphere 原型作者、比特大陆资深技术专家、CNCF OpenTracing 标准化委员会成员&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxladzp7j7j318w0u0tke_hu9408181004445416495.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxladzp7j7j318w0u0tke_hu4054440723854318891.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxladzp7j7j318w0u0tke_hu18108125957097979734.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxladzp7j7j318w0u0tke_hu9408181004445416495.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaiwry6mj318w0u0h2w_hu10397549406320676331.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaiwry6mj318w0u0h2w_hu3040184795673959479.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaiwry6mj318w0u0h2w_hu13879157235808503102.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaiwry6mj318w0u0h2w_hu10397549406320676331.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;蚂蚁金服-service-mesh-渐进式迁移方案&#34;&gt;蚂蚁金服 Service Mesh 渐进式迁移方案&lt;/h4&gt;
&lt;p&gt;敖小剑 蚂蚁金服高级技术专家，十六年软件开发经验，微服务专家，Service Mesh 布道师，Servicemesher 社区联合创始人&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaj62fh3j318w0u0qmj_hu8152912433793553341.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaj62fh3j318w0u0qmj_hu15479851522249767068.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaj62fh3j318w0u0qmj_hu10077602853688943690.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaj62fh3j318w0u0qmj_hu8152912433793553341.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlak1mt4ej30lk12ejxr_hu6284399844969646964.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlak1mt4ej30lk12ejxr_hu2362324923765661052.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlak1mt4ej30lk12ejxr_hu12764981251481413542.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlak1mt4ej30lk12ejxr_hu6284399844969646964.webp&#34;
               width=&#34;427&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;张瑜标 阿里巴巴技术专家、前京东 Hadoop 负责人、Hadoop 代码贡献者、现负责 UC 基于 Kubernetes 自研的 PaaS 平台整体的稳定性&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajb5i8hj318w0u0wxt_hu10604303757742933932.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajb5i8hj318w0u0wxt_hu7569883493797050432.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajb5i8hj318w0u0wxt_hu17297978968675677497.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajb5i8hj318w0u0wxt_hu10604303757742933932.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwgy1fxlaly84ydj318w0u0n9w_hu8919842935541935845.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwgy1fxlaly84ydj318w0u0n9w_hu15489773418555701493.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwgy1fxlaly84ydj318w0u0n9w_hu4910389145430588193.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwgy1fxlaly84ydj318w0u0n9w_hu8919842935541935845.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajjihjyj318w0u0nc4_hu5405237760856032863.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajjihjyj318w0u0nc4_hu12820325284126335995.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajjihjyj318w0u0nc4_hu4095970096615483880.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlajjihjyj318w0u0nc4_hu5405237760856032863.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;探讨和实践基于-istio-的微服务治理事件监控&#34;&gt;探讨和实践基于 Istio 的微服务治理事件监控&lt;/h4&gt;
&lt;p&gt;徐运元 谐云科技云平台架构师，致力于容器 PaaS 平台、企业级容器云平台的方案设计和技术落地&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakih9eyj318w0u0du1_hu9328187144136527663.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakih9eyj318w0u0du1_hu9416892525110424486.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakih9eyj318w0u0du1_hu16499544929366617590.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakih9eyj318w0u0du1_hu9328187144136527663.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakrposjj318w0u07el_hu17997491893138913276.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakrposjj318w0u07el_hu173665243450356598.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakrposjj318w0u07el_hu6795900820394541265.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlakrposjj318w0u07el_hu17997491893138913276.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaky0yv0j318w0u0wtj_hu14835643438338331160.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaky0yv0j318w0u0wtj_hu14774983917846263129.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaky0yv0j318w0u0wtj_hu4178160844156793275.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlaky0yv0j318w0u0wtj_hu14835643438338331160.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;envoycontour-与-kubernetes-实践&#34;&gt;Envoy、Contour 与 Kubernetes 实践&lt;/h4&gt;
&lt;p&gt;冯玮 七牛容器云平台产品架构师，曾在百度和华为从事公有云领域高性能分布式计算和存储平台的架构设计和产品研发&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal5j8ypj318w0u048i_hu14722958628728461809.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal5j8ypj318w0u048i_hu1752638618030848422.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal5j8ypj318w0u048i_hu6221135384584264009.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal5j8ypj318w0u048i_hu14722958628728461809.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal93jmhj318w0u04ce_hu9144429230416825273.webp 400w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal93jmhj318w0u04ce_hu5549420316968381856.webp 760w,
               /blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal93jmhj318w0u04ce_hu18095455752754702382.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shanghai-20181125/006tNbRwly1fxlal93jmhj318w0u04ce_hu9144429230416825273.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;视频回放与资料下载&#34;&gt;视频回放与资料下载&lt;/h2&gt;
&lt;p&gt;地址：https://tech.antfin.com/activities/2/review&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;p&gt;感谢以下单位的大力支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联合主办方&lt;a href=&#34;https://tech.antfin.com/activities/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蚂蚁金服金融科技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.phei.com.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;电子工业出版社&lt;/a&gt;赠书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.innospaceplus.com.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;INNOSPACE+&lt;/a&gt;提供场地&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://harmonycloud.cn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;谐云科技&lt;/a&gt;提供茶歇&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>第三届 Service Mesh Meetup 深圳站回顾</title>
      <link>https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/</link>
      <pubDate>Mon, 27 Aug 2018 11:40:45 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-service-mesh-meetup-深圳站&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Service Mesh Meetup 深圳站&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwgy1fuo41nap0jj318w0txgyl_hu11805978454314183559.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwgy1fuo41nap0jj318w0txgyl_hu11704823409614780861.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwgy1fuo41nap0jj318w0txgyl_hu10829739556492518128.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwgy1fuo41nap0jj318w0txgyl_hu11805978454314183559.webp&#34;
               width=&#34;760&#34;
               height=&#34;506&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Service Mesh Meetup 深圳站
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;ServiceMesher 社区和蚂蚁金服联合主办、SOFAStack 社区协办的第三届 Service Mesh Meetup 深圳站收官，感谢各位现场参加和通过 IT 大咖说观看直播的同学参与 ServiceMesher 社区，华为张超盟、蚂蚁金服熊啸、JEX 杨文、联邦车网朱经惠的分享，深圳名堂共创空间提供场地支持，vivo 的两位美女志愿者，电子工业出版社提供图书。更多活动信息和 Service Mesh 资讯请关注我们的微信公众号 ServiceMesher。&lt;/p&gt;
&lt;h2 id=&#34;相关资料&#34;&gt;相关资料&lt;/h2&gt;
&lt;p&gt;本次活动的视频回放，请访问&lt;a href=&#34;http://www.itdks.com/eventlist/detail/2549&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IT 大咖说&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;PPT 下载地址：https://github.com/servicemesher/meetup-slides&lt;/p&gt;
&lt;h2 id=&#34;现场照片&#34;&gt;现场照片&lt;/h2&gt;
&lt;p&gt;场地提供方，名堂共享空间。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo46qj051j31da0w8x4k_hu17522603652220367592.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo46qj051j31da0w8x4k_hu10247132442876189841.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo46qj051j31da0w8x4k_hu8266983169367094641.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo46qj051j31da0w8x4k_hu17522603652220367592.webp&#34;
               width=&#34;760&#34;
               height=&#34;497&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;来自 Vivo 的两位美女志愿者&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo45qvss5j31460qwb29_hu17332564625262051201.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo45qvss5j31460qwb29_hu12836439225007201577.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo45qvss5j31460qwb29_hu4573505386793055039.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo45qvss5j31460qwb29_hu17332564625262051201.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;到现场参加的有 100 多人。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo43u5brwj31kw11te83_hu11749443832158839499.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo43u5brwj31kw11te83_hu18246595252844827215.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo43u5brwj31kw11te83_hu5879500268281841602.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo43u5brwj31kw11te83_hu11749443832158839499.webp&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;通过&lt;a href=&#34;http://www.itdks.com/eventlist/detail/2549&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IT 大咖说&lt;/a&gt;在线观看的有几千人。&lt;/p&gt;
&lt;h3 id=&#34;张超盟华为kubernetes-容器应用基于-istio-的灰度发布实践&#34;&gt;张超盟（华为）——Kubernetes 容器应用基于 Istio 的灰度发布实践&lt;/h3&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-service-mesh-张超盟-华为&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Service Mesh 张超盟 华为&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo49ba8t1j318k0tunpd_hu4930756289422902802.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo49ba8t1j318k0tunpd_hu4727843676397511405.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo49ba8t1j318k0tunpd_hu202510993651313905.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo49ba8t1j318k0tunpd_hu4930756289422902802.webp&#34;
               width=&#34;760&#34;
               height=&#34;509&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Service Mesh 张超盟 华为
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现场提问的观众。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo4c33nb8j31d20wsx6p_hu9164637150147087637.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo4c33nb8j31d20wsx6p_hu5879893419782328338.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo4c33nb8j31d20wsx6p_hu17407962615550196204.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo4c33nb8j31d20wsx6p_hu9164637150147087637.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;朱经惠联邦车网istio-控制平面组件原理解析&#34;&gt;朱经惠（联邦车网）——Istio 控制平面组件原理解析&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8cdv8ucj31ca0w21ky_hu18001551241637691241.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8cdv8ucj31ca0w21ky_hu11860420358675546993.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8cdv8ucj31ca0w21ky_hu16094119266146219764.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8cdv8ucj31ca0w21ky_hu18001551241637691241.webp&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;好多同学拿着小本本提问。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8dpztynj31ca0w84qq_hu9679435694323074463.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8dpztynj31ca0w84qq_hu17311294882045886495.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8dpztynj31ca0w84qq_hu15008986865675422515.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8dpztynj31ca0w84qq_hu9679435694323074463.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;邵俊雄蚂蚁金服sofamesh-的通用协议扩展&#34;&gt;邵俊雄（蚂蚁金服）——SOFAMesh 的通用协议扩展&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8f2jjhcj31c20w0qv5_hu17517963962416750864.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8f2jjhcj31c20w0qv5_hu3338084239076438034.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8f2jjhcj31c20w0qv5_hu10575685588470628029.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8f2jjhcj31c20w0qv5_hu17517963962416750864.webp&#34;
               width=&#34;760&#34;
               height=&#34;506&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8fucll1j31c40vy4qq_hu5116910240558302380.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8fucll1j31c40vy4qq_hu11666099917032007746.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8fucll1j31c40vy4qq_hu14958226098451471223.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8fucll1j31c40vy4qq_hu5116910240558302380.webp&#34;
               width=&#34;760&#34;
               height=&#34;505&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;杨文jexkubernetesservice-meshcicd-实践&#34;&gt;杨文（JEX）——Kubernetes、Service Mesh、CI/CD 实践&lt;/h3&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8gb5mwqj31bo0vy1ky_hu17113290029769162450.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8gb5mwqj31bo0vy1ky_hu3971640638414592216.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8gb5mwqj31bo0vy1ky_hu10945353287218818893.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8gb5mwqj31bo0vy1ky_hu17113290029769162450.webp&#34;
               width=&#34;760&#34;
               height=&#34;509&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8h8kr3gj31ca0wab2a_hu8797850531619777144.webp 400w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8h8kr3gj31ca0wab2a_hu18138536076863102049.webp 760w,
               /blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8h8kr3gj31ca0wab2a_hu17785733502831195678.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/service-mesh-meetup-shenzhen-20180825/006tNbRwly1fuo8h8kr3gj31ca0wab2a_hu8797850531619777144.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>第二届 Service Mesh Meetup 北京站回顾</title>
      <link>https://cloudnative.to/blog/beijing-meetup-20180729/</link>
      <pubDate>Mon, 30 Jul 2018 19:08:31 +0800</pubDate>
      <guid>https://cloudnative.to/blog/beijing-meetup-20180729/</guid>
      <description>&lt;p&gt;2018 年 7 月 29 日，周日，天气闷热，北京中关村 e 世界。&lt;/p&gt;
&lt;p&gt;由 ServiceMesher 社区和蚂蚁金服联合举办的，Sharding-Sphere 社区、Apache SkyWalking 社区、SOFA 社区、新浪微博协办的第二届 Service Mesh Meetup 北京站圆满落幕。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-service-mesh-meetup&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Service Mesh Meetup&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3o06igyj30sg0j0afk_hu15272104439592809565.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3o06igyj30sg0j0afk_hu4931768453480241318.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3o06igyj30sg0j0afk_hu264993589994070496.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3o06igyj30sg0j0afk_hu15272104439592809565.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Service Mesh Meetup
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;张亮（京东金融数据研发负责人）Service Mesh 的延伸 —— 论道 Database Mesh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-张亮-京东金融-service-mesh-meetup&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;张亮 京东金融 Service Mesh Meetup&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3ow6pdxj30sg0j0wgn_hu7914333740101612335.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3ow6pdxj30sg0j0wgn_hu1876035131333025109.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3ow6pdxj30sg0j0wgn_hu14905414256914234744.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3ow6pdxj30sg0j0wgn_hu7914333740101612335.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      张亮 京东金融 Service Mesh Meetup
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-张亮-京东金融-service-mesh-meetup&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;张亮 京东金融 Service Mesh Meetup&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3pcqgm9j30sg0j0tcm_hu3590498697812597587.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3pcqgm9j30sg0j0tcm_hu15076315586991609126.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3pcqgm9j30sg0j0tcm_hu13599340747782336088.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3pcqgm9j30sg0j0tcm_hu3590498697812597587.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      张亮 京东金融 Service Mesh Meetup
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;吴晟（Apache SkyWalking 创始人），Observability on Service Mesh —— Apache SkyWalking 6.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-吴晟-apache-skywalking&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;吴晟 Apache SkyWalking&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3q2ethrj318w0u0tcq_hu3690049370329666699.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3q2ethrj318w0u0tcq_hu10305444684882471397.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3q2ethrj318w0u0tcq_hu4170078721747450460.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3q2ethrj318w0u0tcq_hu3690049370329666699.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      吴晟 Apache SkyWalking
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3qkcu6vj318w0u07go_hu7370368074679627502.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3qkcu6vj318w0u07go_hu4539695920217995885.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3qkcu6vj318w0u07go_hu9474642976880789637.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3qkcu6vj318w0u07go_hu7370368074679627502.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3qpj1b9j318w0u0k6r_hu18260375473876004974.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3qpj1b9j318w0u0k6r_hu15570739948225330917.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3qpj1b9j318w0u0k6r_hu3186086510740805452.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3qpj1b9j318w0u0k6r_hu18260375473876004974.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;朵晓东（蚂蚁金服，高级技术专家），蚂蚁金服开源的 Service Mesh 数据平面 SOFA MOSN 深层揭秘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-朵晓东-蚂蚁金服-service-mesh&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;朵晓东 蚂蚁金服 Service Mesh&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3r3qc16j30sg0j0mzz_hu3689117539785507667.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3r3qc16j30sg0j0mzz_hu14867617359738494802.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3r3qc16j30sg0j0mzz_hu3846155246592125108.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3r3qc16j30sg0j0mzz_hu3689117539785507667.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      朵晓东 蚂蚁金服 Service Mesh
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-朵晓东-service-mesh-蚂蚁金服&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;朵晓东 Service Mesh 蚂蚁金服&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3reafsmj30sg0j0adi_hu2806256095142776676.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3reafsmj30sg0j0adi_hu13843512377906927588.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3reafsmj30sg0j0adi_hu8405701268391650622.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3reafsmj30sg0j0adi_hu2806256095142776676.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      朵晓东 Service Mesh 蚂蚁金服
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;丁振凯（新浪微博，微博搜索架构师），微博 Service Mesh 实践 - WeiboMesh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-丁振凯-新浪微博&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;丁振凯 新浪微博&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3rw3yerj30sg0j0wgx_hu9200548496561460228.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3rw3yerj30sg0j0wgx_hu17752974335169788094.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3rw3yerj30sg0j0wgx_hu1608972224005017150.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3rw3yerj30sg0j0wgx_hu9200548496561460228.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      丁振凯 新浪微博
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3s4hf4xj318w0u0qed_hu9339167378658684022.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3s4hf4xj318w0u0qed_hu12320871241637036056.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3s4hf4xj318w0u0qed_hu9675487301866592746.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3s4hf4xj318w0u0qed_hu9339167378658684022.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;结束时 Service Mesh 铁杆粉丝的合影。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-servicemesher&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;ServiceMesher&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3smgw3rj317s0t8k4l_hu3631013593847071626.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3smgw3rj317s0t8k4l_hu18444191263791557446.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3smgw3rj317s0t8k4l_hu11504263078232675071.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3smgw3rj317s0t8k4l_hu3631013593847071626.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      ServiceMesher
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最好还要感谢我们的工作人员、志愿者和 IT 大咖说提供视频直播支持。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/beijing-meetup-20180729/006tNc79gy1fts3sveslgj318w0u0wr2_hu14527759015865597360.webp 400w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3sveslgj318w0u0wr2_hu13929277597955501842.webp 760w,
               /blog/beijing-meetup-20180729/006tNc79gy1fts3sveslgj318w0u0wr2_hu15399510602489679650.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/beijing-meetup-20180729/006tNc79gy1fts3sveslgj318w0u0wr2_hu14527759015865597360.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;ServiceMesher 社区的使命&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传播 Service Mesh 技术&lt;/li&gt;
&lt;li&gt;加强行业内部交流&lt;/li&gt;
&lt;li&gt;促进开源文化构建&lt;/li&gt;
&lt;li&gt;推动 Service Mesh 在企业落地&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;更多资料&#34;&gt;更多资料&lt;/h2&gt;
&lt;p&gt;关于本次活动的更多信息请关注本公众号和&lt;a href=&#34;http://www.servicemesher.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;社区官网&lt;/a&gt;的后续报道。&lt;/p&gt;
&lt;p&gt;在 IT 大咖说上观看视频重播：http://www.itdks.com/eventlist/detail/2455&lt;/p&gt;
&lt;p&gt;讲师的 PPT 和历届 Service Mesh Meetup 的幻灯片下载请访问 GitHub：https://github.com/servicemesher/meetup-slides&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>第一届 Service Mesh Meetup 杭州站回顾</title>
      <link>https://cloudnative.to/blog/hangzhou-meetup-20180630/</link>
      <pubDate>Tue, 03 Jul 2018 12:22:47 +0800</pubDate>
      <guid>https://cloudnative.to/blog/hangzhou-meetup-20180630/</guid>
      <description>&lt;p&gt;6 月 30 日，杭州，蚂蚁 Z 空间，一大早就下起了雨，我还心想，这雨要是下大了会不会很多人不来了？而且我们还一早就放出了 IT 大咖说的直播链接。没想到最后现场签到了有 120 多个小伙伴！👍视频直播最高峰值 800 多人同时在线，截止 7 月 1 号显示有 5340 人观看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;讲师 PPT：https://github.com/servicemesher/meetup-slides&lt;/li&gt;
&lt;li&gt;视频直播回放：http://www.itdks.com/eventlist/detail/2311&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Meetup 结束时现场观众和讲师的合影。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaql8gjaj318w0u0qv6_hu4723649553284388252.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaql8gjaj318w0u0qv6_hu10065165475734593294.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaql8gjaj318w0u0qv6_hu4491925348586836130.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuaql8gjaj318w0u0qv6_hu4723649553284388252.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Service Mesh meetup 顺利落幕，感谢到场的小伙伴，线上观众，IT 大咖说的直播支持，来自蚂蚁金服、网易、才云科技、谐云科技老师的精彩分享，蚂蚁金服提供场地支持，电子工业出版社提供赠书支持。下一站北京见！更多 SM 内容请关注我们社区的官方网站 &lt;a href=&#34;http://www.servicemesher.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.servicemesher.com&lt;/a&gt;，忙活了一天都没饭，真的是很饿，晚上在回北京的高铁上叫了个外卖应付了下。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuamb3iufj31y011atx2_hu17044023390105110047.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuamb3iufj31y011atx2_hu15679854451240514343.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuamb3iufj31y011atx2_hu3265894595443266150.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuamb3iufj31y011atx2_hu17044023390105110047.webp&#34;
               width=&#34;760&#34;
               height=&#34;405&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;现场回顾多图预警&#34;&gt;现场回顾（多图预警）&lt;/h2&gt;
&lt;p&gt;当天中午杭州的天气。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub06sja0j30xc0p0npd_hu7688931867706335583.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub06sja0j30xc0p0npd_hu6989606639561646764.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub06sja0j30xc0p0npd_hu5250012574906555756.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub06sja0j30xc0p0npd_hu7688931867706335583.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;前几天从 LC3 大会上拿来的贴纸（CNCF 展台）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaue4vfxj30xc0p0b29_hu1942059793714670511.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaue4vfxj30xc0p0b29_hu3504290760371638498.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaue4vfxj30xc0p0b29_hu753269446052745474.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuaue4vfxj30xc0p0b29_hu1942059793714670511.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;电子工业出版社和蚂蚁金服的赠书。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuav3vujnj318w0u0npd_hu13707500897401593365.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuav3vujnj318w0u0npd_hu5823198486781988053.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuav3vujnj318w0u0npd_hu2540323866303187418.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuav3vujnj318w0u0npd_hu13707500897401593365.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现场蚂蚁金服帮忙负责签到的妹子。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuavtu3d3j318w0u01ky_hu16651532962927848709.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuavtu3d3j318w0u01ky_hu55820034532046123.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuavtu3d3j318w0u01ky_hu5586902440755843256.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuavtu3d3j318w0u01ky_hu16651532962927848709.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;因为天气原因很多人来迟了，我们推迟了半个小时在 1:30 正式开始。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaww0pkjj318w0u0hdu_hu3351556111512050167.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaww0pkjj318w0u0hdu_hu6982303271514892949.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaww0pkjj318w0u0hdu_hu12613051250932766381.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuaww0pkjj318w0u0hdu_hu3351556111512050167.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;第一场&lt;strong&gt;敖小剑（蚂蚁金服）：大规模微服务架构下的 Service Mesh 探索之路&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaxqxvyoj318w0u0b2a_hu7526927129523180735.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaxqxvyoj318w0u0b2a_hu1158063294675703384.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaxqxvyoj318w0u0b2a_hu4229320151226687425.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuaxqxvyoj318w0u0b2a_hu7526927129523180735.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现场观众踊跃提问。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaz8hfxfj318w0u07wi_hu4588177076181555468.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaz8hfxfj318w0u07wi_hu7473942257995131902.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsuaz8hfxfj318w0u07wi_hu10679761476521532504.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsuaz8hfxfj318w0u07wi_hu4588177076181555468.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub6g8csej318w0u0npd_hu2511599183937231915.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub6g8csej318w0u0npd_hu12212599853327233834.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub6g8csej318w0u0npd_hu15651336349794574138.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub6g8csej318w0u0npd_hu2511599183937231915.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;第二场&lt;strong&gt;刘超（网易）：网易云的 Service Mesh 产品架构和实现&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub2vn95vj318w0u0npd_hu13516306986023638710.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub2vn95vj318w0u0npd_hu10476714005483894300.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub2vn95vj318w0u0npd_hu5959086438350252745.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub2vn95vj318w0u0npd_hu13516306986023638710.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;会后讲师都被团团围住。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub2eyzpqj318w0u0x6p_hu5728610399775083538.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub2eyzpqj318w0u0x6p_hu16044185022823597295.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub2eyzpqj318w0u0x6p_hu2179442340172888593.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub2eyzpqj318w0u0x6p_hu5728610399775083538.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;第三场&lt;strong&gt;唐鹏程（才云科技）：在 Kubernetes 上搭建高可用 Service Mesh 监控&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub3q7jooj318w0u0b2a_hu8712266840900482064.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub3q7jooj318w0u0b2a_hu14620112583370815640.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub3q7jooj318w0u0b2a_hu6677714085333045385.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub3q7jooj318w0u0b2a_hu8712266840900482064.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5atdsvj318w0u0x6p_hu12203663610392251495.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5atdsvj318w0u0x6p_hu10503338219327829128.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5atdsvj318w0u0x6p_hu3262049586162836753.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub5atdsvj318w0u0x6p_hu12203663610392251495.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub611rakj318w0u0u0x_hu15736939501001918662.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub611rakj318w0u0u0x_hu1634448030251646827.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub611rakj318w0u0u0x_hu15844338798006094531.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub611rakj318w0u0u0x_hu15736939501001918662.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;第四场&lt;strong&gt;徐运元（谐云科技）：Service Mesh 结合容器云平台的思考与实践&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5os3jnj318w0u0e81_hu18436803387685963757.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5os3jnj318w0u0e81_hu11919891713861593312.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5os3jnj318w0u0e81_hu16671359878112471984.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub5os3jnj318w0u0e81_hu18436803387685963757.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5t5yk2j318w0u0u0x_hu16307441165268948002.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5t5yk2j318w0u0u0x_hu8035054236292493651.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub5t5yk2j318w0u0u0x_hu10512471538572701462.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub5t5yk2j318w0u0u0x_hu16307441165268948002.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub6sjm96j318w0u0b2a_hu14748351806089042614.webp 400w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub6sjm96j318w0u0b2a_hu17777498257136644729.webp 760w,
               /blog/hangzhou-meetup-20180630/00704eQkgy1fsub6sjm96j318w0u0b2a_hu8701873025743320278.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/hangzhou-meetup-20180630/00704eQkgy1fsub6sjm96j318w0u0b2a_hu14748351806089042614.webp&#34;
               width=&#34;760&#34;
               height=&#34;508&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;历届 meetup 的 PPT 归档地址：https://github.com/servicemesher/meetup-slides&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
