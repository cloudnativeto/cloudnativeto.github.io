[{"categories":["Service Mesh"],"contents":"In a company with diverse internet businesses like NetEase, each business has its own unique choice of microservices tech stack and system architecture based on their business nature and team composition. While this might seem harmless at the initial stage of business development, as the businesses grow, the business scale, level of complexity and team composition will vary. These problems may stand in the way of the microservices architecture:\n High R\u0026amp;D costs due to uncoordinated R\u0026amp;D efforts by different businesses. Failure to make full use of the technological assets of the NetEase Group. High level of intrusion into businesses. Business personnel must understand, learn about, monitor, and maintain the microservices framework Long upgrade cycle. A minor framework upgrade may take more than a month. Language limitations. The microservices system adopted by most core services is built from Java with little support for other languages.  Strategies The service mesh is a key microservices technology under the cloud-native system. It can effectively solve problems arising out of the microservices architecture adopted by a wide variety of internet businesses at NetEase. The decision by NetEase to use Istio, the classic service mesh open-source framework, is the product of careful deliberations:\n Strong background in cloud-native solutions. Endorsed by tech giants. Envoy, a key data plane component of Istio, is a de facto standard component of the cloud-native data plane. As the most popular choice within the service mesh landscape, Istio has a vibrant community and an outstanding architecture. As an enterprise-friendly solution, Istio strives to optimize its services for improved user experience and enhanced support in service implementation.  Having decided on Istio as the service mesh platform of choice, the NetEase Shufan Qingzhou team built the Qingzhou Service Mesh platform. This addresses the various problems of the microservices architecture faced by the diverse internet businesses of the NetEase Group and consolidates the existing microservices management framework. The establishment of this common, distributed microservices platform enables more enterprises to implement the evolution and upgrade of their microservices architecture. Further, NetEase Qingzhou has released an upgrade of the API gateway system built upon the Istio tech stack. The Envoy and Istio-based Qingzhou API gateway has enhanced capabilities and better performance. It has since become the standard component of the NetEase API gateway. Despite the comprehensive service mesh solutions provided by Istio, enterprises still need to set clear goals when constructing their service mesh systems.\nArchitectural Design An overview of the architecture of the NetEase Qingzhou Service Mesh is shown as follows:\nKey Points on Architectural Design:  The overall architectural design is implemented by extending Envoy and customizing Istio. The requisite feasibility checks have been carried out. Envoy-based data planes support various ways of interception. In addition to the complete interception of TCP traffic natively powered by Istio, other traffic interception methods that facilitate business integration, such as IP pointing and a dynamic interception, have been added. Components in the Istio Pilot-based control plane are pluggable. Before Istio 1.5, the control plane used to have more components, leading to higher maintenance costs. In designating Pilot as a key component of the control plane and making other components pluggable, the risks of production and implementation, as well as the maintenance costs, are significantly reduced. It also allows developers and maintainers to focus on building a better system. Multiple extension methods allowing easy integration with existing business platforms. Numerous open platforms, including the Istio CRD, MCP and API plane, can fully preserve their native capabilities. Simply with the use of a Restful API, they significantly reduce the costs incurred by businesses to build a new platform or to integrate with an existing platform. Performance improvements: Improvements are made on both components and networks. For components, as an example, the patterns of Envoy filter are now responsible for the back-end capabilities of the centralized mixer found in earlier versions of Istio, allowing configuration trimming for call tracing. On the other hand, the networks are faster than ever to keep up with the pace of container networks. This is a major step towards reducing latency.  Development Plan The microservices architecture development plan is founded upon the overall architectural design and reference to the architecture and tech stack of services. Letâ€™s take the NetEase e-commerce business as an example. Its business development plan is shown below:\nKey Points on Development:  Overall migration architecture is specifically designed for the existing technologies and architectural pattern of the business. Business integration: Adaptation at the infrastructure level to ensure imperceptible migration for the business. Cross-cloud accesses: Ensuring seamless mutual accesses before and after migration with the use of the mixed cloud solutions of edge gateways. High usability: Ensuring that the SLAs are met during the migration process with added capabilities such as fallback routing as well as routing a certain percentage of traffic.  Platform Building During their application of Istio, businesses need a visualized map of the mesh, and the ability to efficiently manage the mesh. Because of this, the NetEase Qingzhou microservices platform has been enhanced with the addition of service mesh monitoring capabilities and supporting cross-cluster centralized monitoring between service mesh and microservices framework (Spring Cloud, Dubbo, gRPC and Thrift). With this update, users can benefit from a smoother migration of their existing microservices architecture.\nKey Points on Building: Stepping up on product enhancements to address business challenges\n Observability: Providing visualization tools and quick resolution functions. Usability: Packaging on par with cloud-native concept products. Extensibility: Open API system architecture. Rapid migration with business platforms.  System Building The Istio-based service mesh architecture requires comprehensive system protection features.\nKey Points on System Building  Architectural and deployment: Service mesh component CICD and auto-deployments. Quality: Automated functions, performance, and stability testings; overall fault diagnosis; chaos testing. Debugging: Debugging for services and components; rapid fault location and recovery in the service mesh. Operations and maintenance: All-round monitoring and alarm functions. Hot upgrade: Support for hot upgrade of sidecars. Open-source technologies: The Qingzhou team continues to contribute to the service mesh community.  Use Case Extensions: Support for the API Gateway Key Points on Design:  Extensions of the service mesh tech stack, making full use of cloud-native technologies. Overall design validation and feasibility checks. Enhancement on the extensibility of the high-performance control plane Envoy. Multiple extension plug-in methods for the primary control plane Istio Pilot. API interface design mitigates the discrepancies between different platforms, fostering rapid integration across platforms.  Results  Various services of NetEase, including NetEase Yeation, NetEase Media, NetEase Youdao, and industry platforms, have been successfully launched. NetEase effectively manages thousands of services and tens of thousands of instances. The NetEase microservices architecture is built onto a uniform infrastructure. Different lines of business can now leave the hassles of microservices management behind as well as lower R\u0026amp;D and maintenance costs for microservices. Introduction of service management capabilities, such as multi-language management, hot upgrade, fault injection, routing, and fuse downgrade. As part of the long-term plan for cloud-native infrastructure, more use cases are now supported: API gateways, DB \u0026amp; middleware mesh, failure drill, and so on. API gateway has become the standard component of the NetEase API gateway, providing support for entire site traffic access for many core services of NetEase, such as NetEaseMedia, NetEase Yeation, and NetEase Lofter. The NetEase microservices architecture and technologies are leading in the industry.  ","permalink":"https://cloudnative.to/en/blog/netease-qingzhou-istio/","tags":["Istio"],"title":"How NetEase Qingzhou Enables Microservices Architecture Evolution with Istio"},{"categories":null,"contents":"","permalink":"https://cloudnative.to/en/team/guoxudong/","tags":null,"title":"Xudong Guo"},{"categories":null,"contents":"Join a team of world-class engineers working on the next generation of networking services using Istio, Envoy, Apache SkyWalking and a few of the open projects to define the next generation of cloud native network service.\nWe are looking for engineers with strong distributed systems experience to join our team. We are building a secure, robust, and highly available service mesh platform for mission critical enterprise applications spanning both legacy and modern infrastructure. This is an opportunity to dedicate a significant amount of contribution to Istio upstream on a regular basis. If you are a fan of Istio and would like to increase your contribution on a dedicated basis, this would be an opportunity for you.\nRequirements\n Fundamentals-based problem solving skills; Drive decision by function, first principles based mindset. Demonstrate bias-to-action and avoid analysis-paralysis; Drive action to the finish line and on time. You are ego-less when searching for the best ideasIntellectually curious with a penchant for seeing opportunities in ambiguity Understands the difference between attention to detail vs. detailed - oriented Values autonomy and results over process You contribute effectively outside of your specialty Experience building distributed system platforms using Golang Familiarity with Kubernetes, service mesh technologies such as Istio and Envoy Excellent understanding of networking protocols, concepts, consistency properties of distributed systems, techniques to identify and reconcile configuration drifts Experience contributing to open source projects is a plus. Familiarity with WebAssembly is a plus. Familiarity with Golang, hardware/software load balancers (F5, NGINX), HSM modules, Active Directory/LDAP is a plus.  We encourage written and asynchronous communication in English, and proficient oral English is not required.\nDistributed Systems Engineer, Enterprise Infrastructure (Data plane) GoLang or C++ Developers Seeking backend software engineers experienced in building distributed systems using Golang and gRPC. We are building a secure, and highly available service mesh platform for mission-critical enterprise applications for Fortune 500 companies, spanning both the legacy and modern infrastructure. Should possess strong fundamentals in distributed systems and networking. Familiarity with technologies like Kubernetes, Istio, and Envoy, as well as open contributions would be a plus.\nRequirements\n Experience building distributed system platforms using C++, Golang, and gRPC. Familiarity with Kubernetes, service mesh technologies such as Istio and Envoy. Excellent understanding of networking protocols, concepts, consistency properties of distributed systems, techniques to identify and reconcile configuration drifts. Experience contributing to open source projects is a plus. Familiarity with the following is a plus: WebAssembly, Authorization: NGAC, RBAC, ABAC Familiarity with hardware/software load balancers (F5, NGINX), HSM modules, Active Directory/LDAP is a plus.  Site Reliability Engineer, SRE Site Reliability Engineering (SRE) combines software and systems engineering to build and run scalable, massively distributed, fault-tolerant systems. As part of the team, you will be working on ensuring that Tetrateâ€™s platform has reliability/uptime appropriate to usersâ€™ needs as well as a fast rate of improvement. Additionally, much of our engineering effort focuses on building infrastructure, improving the platform troubleshooting abilities, and eliminating toil through automation.\nRequirements\n Systematic problem-solving approach, coupled with excellent communication skills and a sense of ownership/finish and self-directed drive. Strong fundamentals in operating, debugging, and troubleshooting distributed systems(stateful and/or stateless) and networking. Familiarity with Kubernetes, service mesh technologies such as Istio and EnvoyAbility to debug, optimize code, and automate routine tasks. Experience programming in at least one of the following languages: C++, Rust, Python, Go. Familiarity with the concepts of quantifying failure and availability in a prescriptive manner using SLOs and SLIs. Experience in performance analysis and tuning is a plus.  Location Worldwide\nWe are remote with presence in China, Indonesia, India, Japan, U.S., Canada, Ireland, the Netherlands, Spain, and Ukraine.\nPlease send GitHub or online links that showcase your code style along with your resume to careers@tetrate.io.\nAbout Tetrate Powered by Envoy and Istio, its ï¬‚agship product, Tetrate Service Bridge, enables bridging traditional and modern workloads. Customers can get consistent baked-in observability, runtime security and traffic management for all their workloads, in any environment.\nIn addition to the technology, Tetrate brings a world-class team that leads the open Envoy and Istio projects, providing best practices and playbooks that enterprises can use to modernize their people and processes.\nVarun, co-founder was the initial founder of Istio and gRPC back in Google. We are a two-year-old start-up building compelling network products and services that we believe will result in a step function change in the industry. JJ, co-founder, started the cloud infrastructure team (working alongside Mesos, VM, OS and Provisioning infrastructure teams \u0026ndash; under platform team) at Twitter. What got him excited to leave Twitter to start this company is the ability to create a change in how service development happens in enterprises.\nTetrate was founded in Silicon Valley with a large number of our team represented in Canada,, China, India, Indonesia, Ireland, Japan, New Zealand, Singapore, Spain, the Netherlands and Ukraine. Our recruiting goal is simple: find the best talent no matter the background and location. We donâ€™t recruit to a title or a role, instead, we focus on problems that need to be solved. It would be great to discuss overlaps and interests over a live call. You choose where you want to work, flexible time away and work schedule. We have teams get-togethers about 3-4 times a year, most recently in SF, Seattle, Barcelona, San Diego, Washington D.C. and Bandung. This helps with building rapport which then helps with collaboration when you are working virtually.\nTo learn more, pleases visit tetrate.io.\n","permalink":"https://cloudnative.to/en/job/tetrate/","tags":null,"title":"The Service Mesh company Tetrate is hiring"},{"categories":["Other"],"contents":"At the beginning of 2020, due to the outbreak of the Crona-19 pandemic, employees around the world began to work at home. Though the distance between people grew farer, there was a group of people, who were us working in the cloud native area, gathered together for a common vision. During the past three months, we have set up the community management committee and used our spare time working together to complete the preparatory work for the community. Today we are here to announce the establishment of the Cloud Native Community.\nBackground Software is eating the world. â€”â€” Marc Andreessen\nThis sentence has been quoted countless times, and with the rise of Cloud Native, we\u0026rsquo;d like to talk about \u0026ldquo;Cloud Native is eating the software.\u0026rdquo; As more and more enterprises migrate their services to the cloud, the original development mode of enterprises cannot adapt to the application scenarios in the cloud, and it is being reshaped to conform to the cloud native standard.\nSo what is cloud native? Cloud native is a collection of best practices in architecture, r\u0026amp;d process and team culture to support faster innovation, superior user experience, stable and reliable user service and efficient r\u0026amp;d. The relationship between the open source community and the cloud native is inseparable. It is the existence of the open source community, especially the end user community, that greatly promotes the continuous evolution of cloud native technologies represented by container, service mesh and microservices.\nCNCF (Cloud Native Computing Foundation) holds Cloud Native conference every year in the international community, which has a wide audience and great influence. But it was not held in China for the first time until 2018, after several successful international events. However, there are no independent foundations or neutral open source communities in China. In recent years, many cloud native enthusiasts in China have set up many communication groups and held many meetups, which are very popular. Many excellent open source projects have emerged in the cloud native field, but there is no organized neutral community for overall management. Under this background, the Cloud Native Community emerges at the right moment.\nAbout Cloud Native Community is an open source community with technology, warmth and passion. It was founded spontaneously by a group of industry elites who love open source and uphold the principle of â€˜consensus, co-governance, co-construction and sharingâ€™. The aim of the community is: connection, neutral, open source. We are based in China, facing the world, enterprise neutrality, focusing on open source, and giving feedback to open source.\nIntroduction for the founding members of the Communityï¼šhttps://cloudnative.to/en/team/\nYou will gain the followings after joining the community:\n Knowledge and news closer to the source A more valuable network More professional and characteristic consultation Opportunities to get closer to opinion leaders Faster and more efficient personal growth More knowledge sharing and exposure opportunities More industry talent to be found  Join You need to apply to join the Cloud Native Community by scanning the QR code below to follow the Cloud Native Community WeChat public account. You will get the application address after replying åŠ å…¥ within this public account.\n","permalink":"https://cloudnative.to/en/blog/cnc-announcement/","tags":["Community"],"title":"Establishment of the Cloud Native Community"},{"categories":null,"contents":"","permalink":"https://cloudnative.to/en/team/lihui/","tags":null,"title":"Hui Li"},{"categories":null,"contents":"","permalink":"https://cloudnative.to/en/team/zhangliying/","tags":null,"title":"Vivian Zhang"},{"categories":null,"contents":"","permalink":"https://cloudnative.to/en/team/cherylhung/","tags":null,"title":"Cheryl Hung"},{"categories":null,"contents":"","permalink":"https://cloudnative.to/en/team/luoguangming/","tags":null,"title":"Guangming Luo"},{"categories":null,"contents":"","permalink":"https://cloudnative.to/en/team/jimmysong/","tags":null,"title":"Jimmy Song"},{"categories":null,"contents":"","permalink":"https://cloudnative.to/en/team/suwei/","tags":null,"title":"Wei Su"}]