<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rinor Maloku | 云原生社区（中国）</title>
    <link>https://cloudnative.to/author/rinor-maloku/</link>
      <atom:link href="https://cloudnative.to/author/rinor-maloku/index.xml" rel="self" type="application/rss+xml" />
    <description>Rinor Maloku</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://cloudnative.to/author/rinor-maloku/avatar_hue38add62c87b7486d80c9f3fda25dfc1_12220_270x270_fill_q75_lanczos_center.jpg</url>
      <title>Rinor Maloku</title>
      <link>https://cloudnative.to/author/rinor-maloku/</link>
    </image>
    
    <item>
      <title>使用 Istio 打造微服务（第 2 部分）——认证和授权</title>
      <link>https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/</link>
      <pubDate>Mon, 25 Mar 2019 10:58:41 +0800</pubDate>
      <guid>https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/</guid>
      <description>&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bke0q1bnj20m80bqwm6_hu5cd10a131c02288057d9de5af42edf77_179134_cb5160cdf96a9d8e60e79e523e211f64.webp 400w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bke0q1bnj20m80bqwm6_hu5cd10a131c02288057d9de5af42edf77_179134_39b71e1eee444fe59bb51b2a23008927.webp 760w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bke0q1bnj20m80bqwm6_hu5cd10a131c02288057d9de5af42edf77_179134_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bke0q1bnj20m80bqwm6_hu5cd10a131c02288057d9de5af42edf77_179134_cb5160cdf96a9d8e60e79e523e211f64.webp&#34;
               width=&#34;760&#34;
               height=&#34;401&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://medium.com/google-cloud/back-to-microservices-with-istio-part-2-authentication-authorization-b079f77358ac&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这篇文章是使用 Istio 打造微服务&lt;/em&gt;的第二部分，如果没有看第一篇的话，请先看&lt;a href=&#34;http://www.servicemesher.com/blog/back-to-microservices-with-istio-p1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;第一部分内容&lt;/a&gt;，因为这篇博客是以第一篇博客为基础进行进一步深入的。&lt;/p&gt;
&lt;p&gt;在第一篇文章中，我们建立了一个 Kubernetes 集群，并且在上面部署了 &lt;strong&gt;Istio&lt;/strong&gt; 和示例微服务应用程序“Sentiment Analysis”，用来展示 Istio 的功能。&lt;/p&gt;
&lt;p&gt;使用 Istio 后，我们可以把应用层中的重试、超时、断路器、跟踪、监控内容抛弃，以保持我们的服务应用保持在一个简单专注的微型状态，（如图 1 所示）。此外，我们还启用了高级测试和部署技术，如 A/B 测试，镜像和金丝雀部署。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-1微服务的形式构成&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 1.微服务的形式构成&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkei4aehj20aj082wf1_hufcbc8729df9d7a760dabbcd6f5084bfc_57753_c64407f555e8723af76f91a5d7ba74ed.webp 400w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkei4aehj20aj082wf1_hufcbc8729df9d7a760dabbcd6f5084bfc_57753_b84c1e77ae67d018e3544304720913e5.webp 760w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkei4aehj20aj082wf1_hufcbc8729df9d7a760dabbcd6f5084bfc_57753_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkei4aehj20aj082wf1_hufcbc8729df9d7a760dabbcd6f5084bfc_57753_c64407f555e8723af76f91a5d7ba74ed.webp&#34;
               width=&#34;379&#34;
               height=&#34;290&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 1.微服务的形式构成
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在本文中，我们将带领读者使用 Istio 来处理身份验证和授权！&lt;/p&gt;
&lt;h2 id=&#34;istio-中的认证和授权&#34;&gt;Istio 中的认证和授权&lt;/h2&gt;
&lt;p&gt;我永远不会相信认证和授权会让我感到兴奋！但是 Istio 可以让这个话题变得有趣，这种情况下难道你不感到兴奋么？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答案很简单&lt;/strong&gt;：Istio 将这些职责从我们的服务下沉到 Envoy 代理，当请求到达我们的服务时，它们已经经过身份验证和授权，我们只需编写提供业务价值的代码。&lt;/p&gt;
&lt;p&gt;听起来不错？让我们去瞧瞧吧！&lt;/p&gt;
&lt;h2 id=&#34;使用-auth0-进行身份验证&#34;&gt;使用 Auth0 进行身份验证&lt;/h2&gt;
&lt;p&gt;作为身份和访问管理服务器，我们将使用 Auth0，它有一个试用选项，直观易用，我只是喜欢它！也就是说，相同的原则可以用于任何 &lt;a href=&#34;https://openid.net/developers/certified/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenID Connect 实现&lt;/a&gt;，如 KeyCloak、IdentityServer 等等。&lt;/p&gt;
&lt;p&gt;要开始使用，请使用您的帐户导航到&lt;a href=&#34;https://manage.auth0.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Auth0 Portal&lt;/a&gt;，在 Applications&amp;gt; Default App 下创建租户并选择 Domain，如下图所示：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-2-auth0-管理门户中的默认应用程序&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 2. Auth0 管理门户中的默认应用程序&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkeum2wwj20m80exmzl_hu5b9ca142752aa3b0d83f0d6b6656efd4_182068_ab10f34ab548af3cb87df37536e81f8a.webp 400w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkeum2wwj20m80exmzl_hu5b9ca142752aa3b0d83f0d6b6656efd4_182068_5bfd6c57486e2f15220b7c4fe88d2a8e.webp 760w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkeum2wwj20m80exmzl_hu5b9ca142752aa3b0d83f0d6b6656efd4_182068_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkeum2wwj20m80exmzl_hu5b9ca142752aa3b0d83f0d6b6656efd4_182068_ab10f34ab548af3cb87df37536e81f8a.webp&#34;
               width=&#34;760&#34;
               height=&#34;510&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 2. Auth0 管理门户中的默认应用程序
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;更新文件 &lt;code&gt;resource-manifests/istio/security/auth-policy.yaml&lt;/code&gt; 以使用您的域名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;authentication.istio.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Policy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;auth-policy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-web-app&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-feedback&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;origins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;jwt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;issuer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://{YOUR_DOMAIN}/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jwksUri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://{YOUR_DOMAIN}/.well-known/jwks.json&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;principalBinding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;USE_ORIGIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有了这个资源，pilot 会配置 envoy 在将请求转发给服务&lt;code&gt;sa-web-app&lt;/code&gt; 和 &lt;code&gt;sa-feedback&lt;/code&gt;之前对其进行身份验证。同时，这个策略不会应用到运行&lt;code&gt;sa-frontend&lt;/code&gt;服务的 envoy 上，这使得我们能够未经认证就访问前端服务。要应用这些策略，请执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/security/auth-policy.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;policy.authentication.istio.io &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth-policy&amp;#34;&lt;/span&gt; created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回页面并发出请求，您将看到它将以 401 Unauthorized 结束，现在让我们从前端转发用户以使用 Auth0 进行身份验证。&lt;/p&gt;
&lt;h2 id=&#34;使用-auth0-验证请求&#34;&gt;使用 Auth0 验证请求&lt;/h2&gt;
&lt;p&gt;要验证最终用户的请求，我们需要在 Auth0 中创建一个 API，表示经过身份验证的服务，即：评论，详细信息和评级。要创建 API，请导航到 &lt;strong&gt;Auth0 Portal&lt;/strong&gt; &amp;gt; &lt;strong&gt;API&lt;/strong&gt; &amp;gt; &lt;strong&gt;Create API&lt;/strong&gt; ，如下图所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-3在-auth0-中创建新-api&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 3.在 Auth0 中创建新 API&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkg16se5j20m80ivq56_hubc388dc8bdfec50a7a0aafdaa4b3e4f2_116222_48f3d7dd181257018f4475ffa8b65eeb.webp 400w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkg16se5j20m80ivq56_hubc388dc8bdfec50a7a0aafdaa4b3e4f2_116222_a400f3bb5fa5a838587527a08704c9de.webp 760w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkg16se5j20m80ivq56_hubc388dc8bdfec50a7a0aafdaa4b3e4f2_116222_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkg16se5j20m80ivq56_hubc388dc8bdfec50a7a0aafdaa4b3e4f2_116222_48f3d7dd181257018f4475ffa8b65eeb.webp&#34;
               width=&#34;760&#34;
               height=&#34;645&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 3.在 Auth0 中创建新 API
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这里的重要信息是稍后在脚本中使用的标识符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;观众：&lt;/strong&gt; {YOUR_AUDIENCE}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其余所需的详细信息位于 Auth0 Portal 中的 &lt;strong&gt;Applications&lt;/strong&gt; 下，然后选择自动创建的与 API 同名的 &lt;strong&gt;Test Application&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;请记下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;域名：&lt;/strong&gt; {YOUR_DOMAIN}&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;客户 ID：&lt;/strong&gt; {YOUR_CLIENT_ID}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Test Application 中向下滚动到&lt;strong&gt;Allowed Callback URLs&lt;/strong&gt;文本位置，在此字段中我们指定请求在完成身份验证后应被转发到的目的 URL。在我们的示例中，它是：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[http://{EXTERNAL_IP}/callback](http://%7BEXTERNAL_IP%7D/callback)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;向&lt;strong&gt;Allowed Logout URLs&lt;/strong&gt;添加以下 URL：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[http://{EXTERNAL_IP}/logout](http://%7BEXTERNAL_IP%7D/logout)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接下来让我们开始处理前端。&lt;/p&gt;
&lt;h2 id=&#34;更新前端&#34;&gt;更新前端&lt;/h2&gt;
&lt;p&gt;检出 &lt;code&gt;[istio-mastery]&lt;/code&gt; 存储库中的&lt;strong&gt;auth0&lt;/strong&gt; 分支。在此分支中，前端包含代码更改以将用户转发到 Auth0 进行身份验证，并在对其他服务的请求中使用 JWT 令牌，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;analyzeSentence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/sentiment&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Bearer &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getAccessToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Access Token
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sentence&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了更新前端以使用你的租户的详细信息，请导航到该文件 &lt;code&gt;sa-frontend/src/services/Auth.js&lt;/code&gt; 并使用我们之前记下的值替换以下值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;clientID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{YOUR_CLIENT_ID}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{YOUR_DOMAIN}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;audience&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{YOUR_AUDIENCE}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;ingressIP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{EXTERNAL_IP}&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Used to redirect after authentication
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应用程序已准备就绪，请在下面的命令中指定 docker 用户 ID，然后构建并部署：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ docker build -f sa-frontend/Dockerfile &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; -t &lt;span class=&#34;nv&#34;&gt;$DOCKER_USER_ID&lt;/span&gt;/sentiment-analysis-frontend:istio-auth0 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; sa-frontend
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ docker push &lt;span class=&#34;nv&#34;&gt;$DOCKER_USER_ID&lt;/span&gt;/sentiment-analysis-frontend:istio-auth0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; image deployment/sa-frontend &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; sa-frontend&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DOCKER_USER_ID&lt;/span&gt;/sentiment-analysis-frontend:istio-auth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;试一试应用吧！您将被转发到 Auth0，在那里您必须登录（或注册），然后跳转回原页面，以后就可以发出经过身份验证的请求了。同时，如果您尝试使用早期的 curl 命令，您将获得 401 状态代码，表明该请求是未授权的。&lt;/p&gt;
&lt;p&gt;让我们进行下一步，授权请求。&lt;/p&gt;
&lt;h2 id=&#34;使用-auth0-授权&#34;&gt;使用 Auth0 授权&lt;/h2&gt;
&lt;p&gt;身份验证使我们能够知道用户是谁，但我们需要授权才能知道他们可以访问的内容。Istio 也为此提供了工具！&lt;/p&gt;
&lt;p&gt;作为示例，我们将创建两组用户（如图 24 所示）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用户&lt;/strong&gt; ：只能访问 SA-WebApp 和 SA-Frontend 服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版主&lt;/strong&gt; ：可以访问所有三项服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-4授权概念&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 4.授权概念&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bki3dbfij20m80dcdhb_huae68aa1198e9aa6abe91f4e2d019eec9_131695_96c777c8782149a40dbfa483494d5339.webp 400w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bki3dbfij20m80dcdhb_huae68aa1198e9aa6abe91f4e2d019eec9_131695_c6c15acad7a3f3a1a146dd3391e0622b.webp 760w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bki3dbfij20m80dcdhb_huae68aa1198e9aa6abe91f4e2d019eec9_131695_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bki3dbfij20m80dcdhb_huae68aa1198e9aa6abe91f4e2d019eec9_131695_96c777c8782149a40dbfa483494d5339.webp&#34;
               width=&#34;760&#34;
               height=&#34;456&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 4.授权概念
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;要创建用户组，我们将使用 Auth0 授权扩展，然后使用 Istio，我们将为他们提供不同级别的访问权限。&lt;/p&gt;
&lt;h2 id=&#34;安装和配置-auth0-授权&#34;&gt;安装和配置 Auth0 授权&lt;/h2&gt;
&lt;p&gt;在 Auth0 门户中，导航到 Extensions 并安装“Auth0 Authorization”扩展。安装完成后，导航到授权扩展并通过单击右上角的租户并选择菜单选项“配置”进行配置。启用组，然后单击 &lt;strong&gt;发布规则&lt;/strong&gt; 按钮。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-5激活令牌内容中的组&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 5.激活令牌内容中的组&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkiopfw9j20m807ndhc_hua301405e3a56328d6e9117a1edcc919d_99440_97a477b184479ac7652aee014a078ff2.webp 400w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkiopfw9j20m807ndhc_hua301405e3a56328d6e9117a1edcc919d_99440_55c48d5fc5b6fafc2dc0aaadacc5d871.webp 760w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkiopfw9j20m807ndhc_hua301405e3a56328d6e9117a1edcc919d_99440_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkiopfw9j20m807ndhc_hua301405e3a56328d6e9117a1edcc919d_99440_97a477b184479ac7652aee014a078ff2.webp&#34;
               width=&#34;760&#34;
               height=&#34;261&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 5.激活令牌内容中的组
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;创建组&#34;&gt;创建组&lt;/h2&gt;
&lt;p&gt;在授权扩展中，导航到 &lt;strong&gt;Groups&lt;/strong&gt; 并创建&lt;code&gt;Moderators&lt;/code&gt;组。同时，我们会将所有经过身份验证的用户视为常规用户，因此无需创建其他组。&lt;/p&gt;
&lt;p&gt;选择 Moderators 组，然后单击添加成员，添加您的主帐户。保留一些没有任何组的用户，以验证是否禁止访问。（您可以在 Auth0 Portal&amp;gt;用户&amp;gt;创建用户中手动注册新用户）&lt;/p&gt;
&lt;h2 id=&#34;将组声明添加到访问令牌&#34;&gt;将组声明添加到访问令牌&lt;/h2&gt;
&lt;p&gt;用户将添加到组中，但此信息不会反映在访问令牌中。为了保持 OpenID Connect 符合要求并同时返回组，我们需要向令牌&lt;a href=&#34;https://auth0.com/docs/tokens/access-token#add-custom-claims&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;添加自定义命名空间声明&lt;/a&gt;。这可以使用 Auth0 规则来完成。&lt;/p&gt;
&lt;p&gt;要在 Auth0 Portal 中创建规则，请导航到规则，单击“创建规则”并 从模板中 选择一个 &lt;strong&gt;空规则&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-6创建新规则&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 6.创建新规则&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkizxe7vj20m80c2wga_hu18bddce38823221539766bf58a479d9d_151240_078f2531e4ae5ea8d6159e65f2a3a4da.webp 400w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkizxe7vj20m80c2wga_hu18bddce38823221539766bf58a479d9d_151240_fdefa4f62238b4d9bc256ad7b1300e53.webp 760w,
               /blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkizxe7vj20m80c2wga_hu18bddce38823221539766bf58a479d9d_151240_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-part-2-authentication-authorization/61411417ly1g1bkizxe7vj20m80c2wga_hu18bddce38823221539766bf58a479d9d_151240_078f2531e4ae5ea8d6159e65f2a3a4da.webp&#34;
               width=&#34;760&#34;
               height=&#34;412&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 6.创建新规则
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;粘贴下面的代码并保存名为“添加组声明”的新规则。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accessToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://sa.io/group&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;groups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 此代码选择授权扩展中定义的第一个用户组，并将其作为自定义命名空间声明添加到访问令牌中。&lt;/p&gt;
&lt;p&gt;返回 &lt;strong&gt;规则页面&lt;/strong&gt; ，确认您按此顺序拥有两个角色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;auth0 授权扩展&lt;/li&gt;
&lt;li&gt;添加组声明&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;顺序很重要，因为 &lt;code&gt;**auth0-authorization-extension**&lt;/code&gt; 规则会异步检索组字段，然后由第二个规则将其添加为命名空间声明，从而产生以下访问令牌：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;https://sa.io/group&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Moderators&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;iss&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://sentiment-analysis.eu.auth0.com/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;sub&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;google-oauth2|196405271625531691872&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;// [shortened for brevity]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，我们必须通过从&lt;code&gt;https://sa.io/group&lt;/code&gt;返回的访问令牌中的声明中提取组来配置 Envoy 代理以验证用户访问权限。这是下一节的主题，让我们继续前进。&lt;/p&gt;
&lt;h2 id=&#34;在-istio-中配置授权&#34;&gt;在 Istio 中配置授权&lt;/h2&gt;
&lt;p&gt;要获得授权，我们需要为 Istio 启用 RBAC。为此，请将以下配置应用于 Mesh：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rbac.istio.io/v1alpha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;RbacConfig&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ON_WITH_INCLUSION&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                     &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;inclusion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                                   &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa-frontend.default.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa-web-app.default.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa-feedback.default.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;仅为“包含”字段中指定的服务和/或命名空间启用 RBAC。&lt;/li&gt;
&lt;li&gt;包括指定的服务列表。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过执行以下命令应用配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/security/enable-rbac.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rbacconfig.rbac.istio.io/default created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，所有服务都需要基于角色的访问控制，换句话说，对所有服务的访问都会被拒绝，并响应“RBAC: access denied”。启用对授权用户的访问权限将成为下一节的主题。&lt;/p&gt;
&lt;h2 id=&#34;配置常规用户访问&#34;&gt;配置常规用户访问&lt;/h2&gt;
&lt;p&gt;所有用户都应该能够访问 &lt;strong&gt;SA-Frontend&lt;/strong&gt; 和 &lt;strong&gt;SA-WebApp&lt;/strong&gt; 服务，这是通过以下 Istio 的资源实现的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ServiceRole：&lt;/strong&gt; 指定用户拥有的权限&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ServiceRoleBinding：&lt;/strong&gt; 指定 ServiceRole 应用于谁。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于普通用户，我们将允许访问指定的服务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rbac.istio.io/v1alpha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;regular-user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa-frontend.default.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa-web-app.default.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 &lt;strong&gt;常规用户绑定&lt;/strong&gt;，我们将 ServiceRole 应用于我们页面的所有访问者：&lt;/p&gt;
&lt;p&gt;哦！所有用户这意味着未经身份验证的用户可以使用 SA WebApp 吗？不，该策略仍将检查 JWT 令牌的有效性。😉&lt;/p&gt;
&lt;p&gt;应用配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/security/user-role.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;servicerole.rbac.istio.io/regular-user created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;servicerolebinding.rbac.istio.io/regular-user-binding created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置版主用户访问权限&#34;&gt;配置版主用户访问权限&lt;/h2&gt;
&lt;p&gt;对于我们的版主，我们希望启用对所有服务的访问：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rbac.istio.io/v1alpha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;mod-user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但我们只想将其绑定到 Access Token 声明 &lt;code&gt;https://sa.io/group&lt;/code&gt; 等于 Moderators 值的用户。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rbac.istio.io/v1alpha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceRoleBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;mod-user-binding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subjects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;request.auth.claims[https://sa.io/group]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Moderators&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;roleRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mod-user&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要应用配置，请执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/security/mod-role.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;servicerole.rbac.istio.io/mod-user created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;servicerolebinding.rbac.istio.io/mod-user-binding created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于 Envoy 中的缓存，授权规则可能需要几分钟才能生效，但在此之后，您将能够验证用户和版主具有不同的访问级别。&lt;/p&gt;
&lt;h2 id=&#34;第-2-部分---摘要&#34;&gt;第 2 部分 - 摘要&lt;/h2&gt;
&lt;p&gt;您是否真的见过任何更简单，零工作的可扩展和安全的身份验证和授权概念？&lt;/p&gt;
&lt;p&gt;仅使用三个 Istio 资源（RbacConfig，ServiceRole 和 ServiceRoleBinding），我们可以通过细粒度控制对最终用户访问我们服务进行身份验证和授权。&lt;/p&gt;
&lt;p&gt;此外，我们将这些问题从我们的服务中转移到我们的 Envoy：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少可能出现安全问题和漏洞的样板代码，&lt;/li&gt;
&lt;li&gt;减少因为忘记标记注解而暴露服务端点的愚蠢状况。&lt;/li&gt;
&lt;li&gt;每次添加新角色或权限时，都会消除更新所有服务的连锁效应。&lt;/li&gt;
&lt;li&gt;保持简单，安全和快速地添加新服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Istio&lt;/strong&gt; 使您的团队能够再次将资源集中在提供商业价值上，而不需要为服务的周边任务进行处理，让微服务回归“微型”的本质。&lt;/p&gt;
&lt;p&gt;本文为您提供了在实际项目中开始使用 Istio 的知识和实践。&lt;/p&gt;
&lt;p&gt;借此机会，我很感谢你加入我的这次 Istio 探索之旅，这肯定不容易，你坚持下去就已经很棒了。我十分希望在下面的评论中看到您的想法，你可以随时在 &lt;a href=&#34;https://twitter.com/rinormaloku&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Twitter&lt;/a&gt; 或我的主页 &lt;a href=&#34;https://rinormaloku.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rinormaloku.com&lt;/a&gt; 上与我联系。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用 Istio 打造微服务（第 1 部分）</title>
      <link>https://cloudnative.to/blog/back-to-microservices-with-istio-p1/</link>
      <pubDate>Wed, 27 Feb 2019 11:35:38 +0800</pubDate>
      <guid>https://cloudnative.to/blog/back-to-microservices-with-istio-p1/</guid>
      <description>&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1gyo9j20m80bq754_hud064d27f03f62f22911a8a40db59ea86_41186_fdd875a1e660ae6194736c2b36993fe2.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1gyo9j20m80bq754_hud064d27f03f62f22911a8a40db59ea86_41186_e662dc79dc05de6649be6e1a85ce5320.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1gyo9j20m80bq754_hud064d27f03f62f22911a8a40db59ea86_41186_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1gyo9j20m80bq754_hud064d27f03f62f22911a8a40db59ea86_41186_fdd875a1e660ae6194736c2b36993fe2.webp&#34;
               width=&#34;760&#34;
               height=&#34;401&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Istio&lt;/strong&gt; 是一个由 Google，IBM 和 Lyft 团队合作开发的开源项目，它提供了基于微服务的应用程序复杂性的解决方案，仅举几例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;流量管理&lt;/strong&gt; ：超时，重试，负载均衡，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性：&lt;/strong&gt; 最终用户身份验证和授权，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可观察性：&lt;/strong&gt; 跟踪，监控和记录。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有这些都可以在应用程序层中解决，但是您的服务不再是“微型”，相对于提供业务价值的资源，实现这些的所有额外工作都是公司资源的压力。我们来举个例子：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PM：添加反馈功能需要多长时间？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;开发：两个冲刺（敏捷开发中的术语，一般一个冲刺周期 30 天）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;PM：什么&amp;hellip;&amp;hellip;？那只是一个 CRUD！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;开发：创建 CRUD 很容易，但我们需要对用户和服务进行身份验证和授权。而且由于网络不可靠，我们需要在客户端实施重试和熔断器，并确保我们不会占用整个系统，我们需要 Timeout 和 Bulkheads，另外还要检测我们需要监控的问题，跟踪[&amp;hellip; ]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;PM：那么我们就把它放在产品服务中吧。哎呀！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你明白了，必须满足所有形式才可以为我们添加一项巨大的服务（有很多不是业务功能的代码）。在本文中，我们将展示 Istio 如何从我们的服务中删除所有上述交叉问题。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-1微服务的形式构成&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 1.微服务的形式构成&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1x75cj20ai081t8l_hu8fd55e73c69a4011507428cf46d909f0_48903_30da67b7775499cffe03cdb6de3190df.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1x75cj20ai081t8l_hu8fd55e73c69a4011507428cf46d909f0_48903_f92e23803ad959c5a5b341a8116d0e0a.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1x75cj20ai081t8l_hu8fd55e73c69a4011507428cf46d909f0_48903_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1x75cj20ai081t8l_hu8fd55e73c69a4011507428cf46d909f0_48903_30da67b7775499cffe03cdb6de3190df.webp&#34;
               width=&#34;378&#34;
               height=&#34;289&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 1.微服务的形式构成
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：本文假设您具有 Kubernetes 的知识。如果不是这种情况，我建议您阅读 &lt;a href=&#34;https://medium.freecodecamp.org/learn-kubernetes-in-under-3-hours-a-detailed-guide-to-orchestrating-containers-114ff420e882&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;我对 Kubernetes 的介绍&lt;/a&gt;，然后继续阅读本文。&lt;/p&gt;
&lt;h2 id=&#34;关于-istio&#34;&gt;关于 Istio&lt;/h2&gt;
&lt;p&gt;在没有 Istio 的世界中，一个服务向另一个服务直接发出请求，并且在发生故障的情况下，服务需要通过重试，超时，打开熔断器等来处理它。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-2-kubernetes-中的网络流量&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 2. Kubernetes 中的网络流量&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1eu2vj20m8054dg4_hu444214816e05611c4dc41d7ae9dc2e43_42654_765e518fb3f8f881fdf72312efc34753.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1eu2vj20m8054dg4_hu444214816e05611c4dc41d7ae9dc2e43_42654_7ca47a4930c4fe1228750072632bc4df.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1eu2vj20m8054dg4_hu444214816e05611c4dc41d7ae9dc2e43_42654_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1eu2vj20m8054dg4_hu444214816e05611c4dc41d7ae9dc2e43_42654_765e518fb3f8f881fdf72312efc34753.webp&#34;
               width=&#34;760&#34;
               height=&#34;175&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 2. Kubernetes 中的网络流量
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;为了解决这个问题，Istio 通过与服务完全分离，并通过拦截所有网络通信来提供一种巧妙的解决方案。这样做可以实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;  - 使用响应状态代码，它可以在请求失败并重试时理解。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Canary Rollouts&lt;/strong&gt;  - 仅将指定百分比的请求转发到新版本的服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监控和指标&lt;/strong&gt;  - 服务响应所花费的时间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跟踪和可观察性&lt;/strong&gt;  - 它在每个请求中添加特殊 header，并在集群中跟踪它们。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;  - 提取 JWT 令牌并对用户进行身份验证和授权。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仅举几例（仅举几例），让您感兴趣！我们来看一些技术细节吧！&lt;/p&gt;
&lt;h2 id=&#34;istio-的架构&#34;&gt;Istio 的架构&lt;/h2&gt;
&lt;p&gt;Istio 拦截所有网络流量，并通过在每个 pod 中注入智能代理作为 sidecar 来应用一组规则。启用所有功能的代理包括 &lt;strong&gt;数据平面&lt;/strong&gt;，并且这些代理可由&lt;strong&gt;控制平面&lt;/strong&gt; 动态配置。&lt;/p&gt;
&lt;h2 id=&#34;数据平面&#34;&gt;数据平面&lt;/h2&gt;
&lt;p&gt;注入的代理使 Istio 能够轻松满足我们的要求。举个例子，我们来看看重试和熔断器功能。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-3envoy-如何实现-retries-和-circuitbreaking&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 3.Envoy 如何实现 Retries 和 CircuitBreaking&#34;
           src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu34d0gg20m808a1kx.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 3.Envoy 如何实现 Retries 和 CircuitBreaking
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;总结一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Envoy 将请求发送到服务 B 的第一个实例，但它失败了。&lt;/li&gt;
&lt;li&gt;Envoy sidecar 重试。（1）&lt;/li&gt;
&lt;li&gt;返回对调用代理的失败请求。&lt;/li&gt;
&lt;li&gt;这将打开熔断器并在后续请求中调用下一个服务。（2）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这意味着您不必使用另一个重试库，您不必在编程语言 X，Y 或 Z 中开发自己的 Circuit Breaking 和 Service Discovery 实现。所有这些都是开箱即用的。这些功能都是通过 Istio 来实现，你不需要更改代码。&lt;/p&gt;
&lt;p&gt;很好！现在你想加入 Istio 的航行，但你仍然有一些疑虑，一些悬而未决的问题。这是一个一刀切的方案，你对它持怀疑态度，因为它总是最终成为一刀切的无解方案！&lt;/p&gt;
&lt;p&gt;你最终低声说了这个问题：“这是可配置的吗？”&lt;/p&gt;
&lt;p&gt;欢迎我的朋友来巡航，我们将为大家介绍一下控制平面。&lt;/p&gt;
&lt;h2 id=&#34;控制平面&#34;&gt;控制平面&lt;/h2&gt;
&lt;p&gt;由三个组件组成： &lt;strong&gt;Pilot&lt;/strong&gt;、 &lt;strong&gt;Mixer&lt;/strong&gt; 和 &lt;strong&gt;Citadel&lt;/strong&gt;，它们组合使用 Envoys 来路由流量，实施策略和收集遥测数据。如下图所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-4与数据平面相关的控制平面&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 4.与数据平面相关的控制平面&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2b2mqj20m80eogn9_hu9e28e46a31fd0ffb46071af86319aba8_128097_e201ff76b8cc722be83937d46260b08a.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2b2mqj20m80eogn9_hu9e28e46a31fd0ffb46071af86319aba8_128097_272df493c601fd32951e3a51535dec01.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2b2mqj20m80eogn9_hu9e28e46a31fd0ffb46071af86319aba8_128097_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2b2mqj20m80eogn9_hu9e28e46a31fd0ffb46071af86319aba8_128097_e201ff76b8cc722be83937d46260b08a.webp&#34;
               width=&#34;760&#34;
               height=&#34;502&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 4.与数据平面相关的控制平面
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Envoy（即数据平面）使用由 Istio 定义的 &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 自定义资源定义&lt;/a&gt; 进行配置。这意味着对你而言，它只是另一个具有熟悉语法的 Kubernetes 资源。创建后将由&lt;strong&gt;控制平面&lt;/strong&gt;获取，并将其应用于 Envoy。&lt;/p&gt;
&lt;h2 id=&#34;服务与-istio-的关系&#34;&gt;服务与 Istio 的关系&lt;/h2&gt;
&lt;p&gt;我们描述了 Istio 与我们服务的关系，但我们反过来思考一下，我们的服务与 Istio 的关系是什么？&lt;/p&gt;
&lt;p&gt;坦率地说，我们的服务对 Istio 的存在有着尽可能多的了解，就像鱼对水一样，他们会问自己“这到底是什么水？”。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-victoria-dimitrakopoulos&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Victoria Dimitrakopoulos&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1l39rj20m809tqd9_hu80ea33cb2da3cdd450240be261f69650_250452_edf73a9139e81b765f5df3d3d8312fde.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1l39rj20m809tqd9_hu80ea33cb2da3cdd450240be261f69650_250452_6620debf540f07f24240cd8faa51fb28.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1l39rj20m809tqd9_hu80ea33cb2da3cdd450240be261f69650_250452_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1l39rj20m809tqd9_hu80ea33cb2da3cdd450240be261f69650_250452_edf73a9139e81b765f5df3d3d8312fde.webp&#34;
               width=&#34;760&#34;
               height=&#34;335&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Victoria Dimitrakopoulos
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这意味着您可以选择一个工作集群，在部署了 Istio 的组件后，其中的服务将继续工作，并且以相同的方式，您可以删除组件，一切都会很好。可以理解的是，您将失去 Istio 提供的功能。&lt;/p&gt;
&lt;p&gt;我们已经有足够的理论，下面让我们把这些理论付诸实践！&lt;/p&gt;
&lt;h2 id=&#34;istio-实践&#34;&gt;Istio 实践&lt;/h2&gt;
&lt;p&gt;Istio 至少需要一个具有 4 个 vCPU 和 8 GB RAM 的 Kubernetes 集群。要快速设置集群并跟进本文，我建议使用 Google 云端平台，它为新用户提供 &lt;a href=&#34;https://console.developers.google.com/billing/freetrial?hl=en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;300 美元的免费试用版&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;使用 Kubernetes 命令行工具创建集群并配置访问后，我们已准备好使用 Helm Package 管理器安装 Istio。&lt;/p&gt;
&lt;h2 id=&#34;安装-helm&#34;&gt;安装 Helm&lt;/h2&gt;
&lt;p&gt;按照&lt;a href=&#34;https://docs.helm.sh/using_helm/#installing-the-helm-client&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档&lt;/a&gt;中的说明在您的计算机上安装 Helm 客户端。我们将在下一节中使用它来生成 Istio 安装模板。&lt;/p&gt;
&lt;h2 id=&#34;安装-istio&#34;&gt;安装 Istio&lt;/h2&gt;
&lt;p&gt;从&lt;a href=&#34;https://github.com/istio/istio/releases/tag/1.0.5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最新版本&lt;/a&gt;下载 Istio 的资源，将内容提取到一个我们将称之为的目录中&lt;code&gt;[istio-resources]&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;要轻松识别 Istio 资源 &lt;code&gt;istio-system&lt;/code&gt;，请在 Kubernetes 集群中创建命名空间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl create namespace istio-system
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后进入到 &lt;code&gt;[istio-resources]&lt;/code&gt; 目录并执行以下命令来完成安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ helm template install/kubernetes/helm/istio &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --set global.mtls.enabled &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --set tracing.enabled &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --set kiali.enabled &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --set grafana.enabled &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --namespace istio-system &amp;gt; istio.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将 Istio 的核心组件输出到文件 &lt;code&gt;istio.yaml&lt;/code&gt; 中。我们使用以下参数自定义模板：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;global.mtls.enabled&lt;/strong&gt; 设置为 false 以保持引入的重点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tracing.enabled&lt;/strong&gt; 允许使用 jaeger 跟踪请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kiali.enabled&lt;/strong&gt; 在我们的集群中安装 Kiali 以实现服务和流量的可视化&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;grafana.enabled&lt;/strong&gt; 安装 Grafana，为了收集指标的可视化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过执行以下命令应用生成的资源&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f istio.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这标志着我们集群中 Istio 安装的完成！等到&lt;code&gt;istio-system&lt;/code&gt;命名空间中的所有 pod 都处于 Running 或 Completed 状态，执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get pods -n istio-system
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在我们已准备好继续下一部分，我们将在其中启动并运行示例应用程序。&lt;/p&gt;
&lt;h2 id=&#34;sentiment-analysis-应用架构&#34;&gt;Sentiment Analysis 应用架构&lt;/h2&gt;
&lt;p&gt;我们将使用&lt;a href=&#34;https://medium.freecodecamp.org/learn-kubernetes-in-under-3-hours-a-detailed-guide-to-orchestrating-containers-114ff420e882&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 简介文章&lt;/a&gt;中使用的相同微服务应用程序，它足以在实践中展示 Istio 的功能。&lt;/p&gt;
&lt;p&gt;该应用程序由四个微服务组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SA-Frontend 服务&lt;/strong&gt; ：提供前端 Reactjs 应用程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SA-WebApp 服务&lt;/strong&gt; ：处理对 Sentiment Analysis 的请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SA-Logic 服务&lt;/strong&gt; ：执行 sentiment Analysis。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SA 反馈服务&lt;/strong&gt; ：接收用户关于分析准确性的反馈。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-6-情感分析微服务&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 6 情感分析微服务&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2q2ppj20m80apmxy_huc1611d6892c8118b78e52c82afc82497_79774_f04e564e9b93cbde7ced2c0dca29c71f.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2q2ppj20m80apmxy_huc1611d6892c8118b78e52c82afc82497_79774_4a7581cbc943b0994f31fa545aaa31eb.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2q2ppj20m80apmxy_huc1611d6892c8118b78e52c82afc82497_79774_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2q2ppj20m80apmxy_huc1611d6892c8118b78e52c82afc82497_79774_f04e564e9b93cbde7ced2c0dca29c71f.webp&#34;
               width=&#34;760&#34;
               height=&#34;366&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 6 情感分析微服务
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在图 6 中，除了服务之外，我们还看到 Ingress Controller 在 Kubernetes 中将传入的请求路由到适当的服务，Istio 使用了一个名为 Ingress Gateway 的类似概念，将在本文的后续部分中介绍。&lt;/p&gt;
&lt;h2 id=&#34;使用-istio-proxies-运行应用程序&#34;&gt;使用 Istio Proxies 运行应用程序&lt;/h2&gt;
&lt;p&gt;要跟进本文，请克隆存储库 istio-mastery（ &lt;a href=&#34;https://github.com/rinormaloku/istio-mastery&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rinormaloku/istio-mastery&lt;/a&gt; ），其中包含 Kubernetes 和 Istio 的应用程序和清单。&lt;/p&gt;
&lt;h3 id=&#34;sidecar-injection&#34;&gt;Sidecar Injection&lt;/h3&gt;
&lt;p&gt;注入是 &lt;strong&gt;自动&lt;/strong&gt; 或 &lt;strong&gt;手动&lt;/strong&gt; 完成的。要启用自动 sidecar 注入，我们需要 &lt;code&gt;istio-injection=enabled&lt;/code&gt; 通过执行以下命令 来标记命名空间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl label namespace default istio-injection&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;enabled
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;namespace/default labeled
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从现在开始，部署到默认命名空间的每个 pod 都将获得注入的 sidecar。为了验证这一点，我们通过进入到 &lt;code&gt;[istio-mastery]&lt;/code&gt; 存储库的根文件夹 并执行以下命令 来部署示例应用程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/kube
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;persistentvolumeclaim/sqlite-pvc created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions/sa-feedback created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;service/sa-feedback created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions/sa-frontend created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;service/sa-frontend created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions/sa-logic created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;service/sa-logic created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions/sa-web-app created
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;service/sa-web-app created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在部署的服务中，通过执行以下命令 &lt;code&gt;kubectl get pods&lt;/code&gt; 验证 pod 有两个容器（service 和 sidecar），并确保准备好后，我们看到值“ &lt;strong&gt;2/2&lt;/strong&gt; ”表示两个容器都在运行。如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get pods
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                           READY     STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-feedback-55f5dc4d9c-c9wfv   2/2       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          12m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-frontend-558f8986-hhkj9     2/2       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          12m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-logic-568498cb4d-2sjwj      2/2       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          12m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-logic-568498cb4d-p4f8c      2/2       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          12m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-web-app-599cf47c7c-s7cvd    2/2       Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          12m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;视觉呈现在图 7 中。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-7其中一个-pod-中的-envoy-代理&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 7.其中一个 Pod 中的 Envoy 代理&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ti9mj209n0dtwf8_hu77c5a8e5e3e2f4f4fa790010f4b3914e_76143_7713ac113448a37bf7655c03338c1598.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ti9mj209n0dtwf8_hu77c5a8e5e3e2f4f4fa790010f4b3914e_76143_f2c3f097107b3ce47499f87ddf25422c.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ti9mj209n0dtwf8_hu77c5a8e5e3e2f4f4fa790010f4b3914e_76143_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ti9mj209n0dtwf8_hu77c5a8e5e3e2f4f4fa790010f4b3914e_76143_7713ac113448a37bf7655c03338c1598.webp&#34;
               width=&#34;347&#34;
               height=&#34;497&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 7.其中一个 Pod 中的 Envoy 代理
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现在，应用程序启动并运行，我们需要允许传入流量到达我们的应用程序。&lt;/p&gt;
&lt;h2 id=&#34;入口网关&#34;&gt;入口网关&lt;/h2&gt;
&lt;p&gt;允许流量进入集群的最佳做法是通过 Istio 的 &lt;strong&gt;入口网关&lt;/strong&gt; 将其自身置于集群的边缘，并在传入流量上实现 Istio 的功能，如路由，负载均衡，安全性和监控。&lt;/p&gt;
&lt;p&gt;在 Istio 的安装过程中， &lt;code&gt;Ingress Gateway&lt;/code&gt; 组件和在外部公开它的服务已安装到集群中。要获取服务外部 IP，请执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get svc -n istio-system -l &lt;span class=&#34;nv&#34;&gt;istio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ingressgateway
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                   TYPE           CLUSTER-IP     EXTERNAL-IP
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;istio-ingressgateway   LoadBalancer   10.0.132.127   13.93.30.120
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在本文的后续部分中，我们将访问此 IP 上的应用程序（称为 EXTERNAL-IP），为方便起见，通过执行以下命令将其保存在变量中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nv&#34;&gt;EXTERNAL_IP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;kubectl get svc -n istio-system &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -l &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;istio-ingressgateway &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{.items[0].status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您在浏览器中访问此 IP 并且您将收到服务不可用错误，则 &lt;strong&gt;默认情况下 Istio 将阻止任何传入流量&lt;/strong&gt;，直到我们定义网关。&lt;/p&gt;
&lt;h2 id=&#34;网关资源&#34;&gt;网关资源&lt;/h2&gt;
&lt;p&gt;网关是在我们的集群中安装 Istio 时定义的 Kubernetes 自定义资源定义，使我们能够指定我们希望允许传入流量的端口，协议和主机。&lt;/p&gt;
&lt;p&gt;在我们的场景中，我们希望允许所有主机在端口 80 上使用 HTTP 流量。达到以下定义：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http-gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;istio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ingressgateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;servers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;除了选择器&lt;code&gt;istio：ingressgateway&lt;/code&gt;之外，所有配置都是不需要说明的。使用此选择器，我们可以指定应用配置的 Ingress Gateway，在我们的示例中，它是安装在 Istio 设置上的默认入口网关控制器。&lt;/p&gt;
&lt;p&gt;通过执行以下命令应用配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/http-gateway.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gateway.networking.istio.io/http-gateway created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;网关现在允许在端口 80 中进行访问，但它不知道在何处路由请求。这需要使用&lt;strong&gt;Virtual Service&lt;/strong&gt;来实现。&lt;/p&gt;
&lt;h2 id=&#34;virtualservice-资源&#34;&gt;VirtualService 资源&lt;/h2&gt;
&lt;p&gt;VirtualService 指示 Ingress Gateway 如何路由允许进入集群的请求。&lt;/p&gt;
&lt;p&gt;对于我们度过即将到来的应用程序请求 &lt;strong&gt;HTTP 网关&lt;/strong&gt; 必须被路由到 &lt;code&gt;sa-frontend&lt;/code&gt;，&lt;code&gt;sa-web-app&lt;/code&gt; 和&lt;code&gt;sa-feedback&lt;/code&gt; 服务（出了如图 8）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-8使用-virtualservices-配置的路由&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 8.使用 VirtualServices 配置的路由&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2n39aj20m80gk75x_hub509a0a5f67f5ebf52d062c28f44f9e0_114931_c41431a1ae385578058bcc7ea5404ace.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2n39aj20m80gk75x_hub509a0a5f67f5ebf52d062c28f44f9e0_114931_68f6e8430621301aeb4548d185f0a310.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2n39aj20m80gk75x_hub509a0a5f67f5ebf52d062c28f44f9e0_114931_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2n39aj20m80gk75x_hub509a0a5f67f5ebf52d062c28f44f9e0_114931_c41431a1ae385578058bcc7ea5404ace.webp&#34;
               width=&#34;760&#34;
               height=&#34;566&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 8.使用 VirtualServices 配置的路由
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;让我们分解以下路由到 SA-Frontend 的请求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;**/**&lt;/code&gt; 应将&lt;strong&gt;精确路径&lt;/strong&gt; 路由到 SA-Frontend 以获取 Index.html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**/static/***&lt;/code&gt; 应将&lt;strong&gt;前缀路径&lt;/strong&gt; 路由到 SA-Frontend 以获取前端所需的任何静态文件，如 Css 和 JavaScript 文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;匹配正则表达式的路径&lt;/strong&gt;&lt;code&gt;&#39;^.*\.(ico|png|jpg)$&#39;&lt;/code&gt; 应该路由到 SA-Frontend，我们应该把图像资源路由到前端。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是通过以下配置实现的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;VirtualService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-external-services&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;gateways&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;http-gateway                     &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;exact&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;exact&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/callback&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;^.*\.(ico|png|jpg)$&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;destination&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-frontend            &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的重点是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;此 VirtualService 适用于通过&lt;strong&gt;http 网关&lt;/strong&gt; 发出的请求&lt;/li&gt;
&lt;li&gt;Destination 定义请求路由到的服务。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：上面的配置位于文件中 &lt;code&gt;sa-virtualservice-external.yaml&lt;/code&gt;，它还包含用于路由到 SA-WebApp 和 SA-Feedback 的配置，但为简洁起见，已缩短。&lt;/p&gt;
&lt;p&gt;通过执行以下命令应用 VirtualService：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/sa-virtualservice-external.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualservice.networking.istio.io/sa-external-services created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：当我们应用 Istio 资源时，Kubernetes API 服务器会创建一个由 Istio 控制平面接收的事件，然后将新配置应用于每个 pod 的 Envoy 代理。Ingress Gateway 控制器是另一个由控制平面配置的 Envoy，如图 9 所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-9配置-istio-ingressgateway-来路由请求&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 9.配置 &amp;lt;strong&amp;gt;Istio-IngressGateway&amp;lt;/strong&amp;gt; 来路由请求&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1t95sj20m80i2jt1_hu61ca71da704e1daab9b67ab5c6b5ed4a_168046_ac8be1d0ab5cff8779d57e33ffae3054.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1t95sj20m80i2jt1_hu61ca71da704e1daab9b67ab5c6b5ed4a_168046_a7398b5084576093b48fd4931a188c47.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1t95sj20m80i2jt1_hu61ca71da704e1daab9b67ab5c6b5ed4a_168046_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1t95sj20m80i2jt1_hu61ca71da704e1daab9b67ab5c6b5ed4a_168046_ac8be1d0ab5cff8779d57e33ffae3054.webp&#34;
               width=&#34;760&#34;
               height=&#34;618&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 9.配置 &amp;lt;strong&amp;gt;Istio-IngressGateway&amp;lt;/strong&amp;gt; 来路由请求
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;现在可以访问 Sentiment Analysis 应用程序了 &lt;code&gt;http://{EXTERNAL-IP}/&lt;/code&gt; 。如果您获得 Not Found 状态，请不要担心 &lt;em&gt;有时需要配置生效才能更新 envoy 的缓存&lt;/em&gt; 。&lt;/p&gt;
&lt;p&gt;在转到下一部分之前，请使用该应用程序生成一些流量。&lt;/p&gt;
&lt;h2 id=&#34;kiali---可观察性&#34;&gt;Kiali - 可观察性&lt;/h2&gt;
&lt;p&gt;要访问 Kiali 的 Admin UI，请执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl port-forward &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;kubectl get pod -n istio-system -l &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;kiali &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -n istio-system &lt;span class=&#34;m&#34;&gt;20001&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;并 &lt;a href=&#34;http://localhost:20001/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:20001/&lt;/a&gt; 使用“admin”（不含引号）为用户和密码打开登录。有很多有用的功能，例如检查 Istio 组件的配置，根据拦截网络请求和回答收集的信息可视化服务，“谁在调用谁？”，“哪个版本的服务有故障？”等等，花一些时间检验 Kiali 的功能，然后再转到下一节，用 Grafana 可视化指标！&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-10-kiali---服务可观察性&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 10. Kiali - 服务可观察性&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu28njyj20m80c7mye_hu53203e07e08d7db54e60dd016145dad8_105933_4f6b6af1439b21e31b5bb81b684b3429.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu28njyj20m80c7mye_hu53203e07e08d7db54e60dd016145dad8_105933_45523755960b3c6beecabe5f90ba3bed.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu28njyj20m80c7mye_hu53203e07e08d7db54e60dd016145dad8_105933_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu28njyj20m80c7mye_hu53203e07e08d7db54e60dd016145dad8_105933_4f6b6af1439b21e31b5bb81b684b3429.webp&#34;
               width=&#34;760&#34;
               height=&#34;417&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 10. Kiali - 服务可观察性
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;grafana---度量可视化&#34;&gt;Grafana - 度量可视化&lt;/h2&gt;
&lt;p&gt;使用 Grafana 将 Istio 收集的指标划分为 Prometheus 和 Visualized。要访问 Grafana 的 Admin UI，请执行以下命令并打开&lt;a href=&#34;http://localhost:3000&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:3000&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl -n istio-system port-forward &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get pod -l &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;grafana &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;.items&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.metadata.name&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在左上角单击菜单&lt;strong&gt;Home&lt;/strong&gt; 并选择 &lt;strong&gt;Istio Service Dashboard&lt;/strong&gt; 并在左上角选择以&lt;strong&gt;sa-web-app&lt;/strong&gt;开头的服务，您将看到收集的指标，如下图所示：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1z8vbj20m80cnabv_hu4b2d7ddc524bf6041faa8e77d7a7a076_121116_7e0b3e3a6d2dfa2c772e42610579740b.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1z8vbj20m80cnabv_hu4b2d7ddc524bf6041faa8e77d7a7a076_121116_8b9d662936dd275fec7783c73fc712a4.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1z8vbj20m80cnabv_hu4b2d7ddc524bf6041faa8e77d7a7a076_121116_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1z8vbj20m80cnabv_hu4b2d7ddc524bf6041faa8e77d7a7a076_121116_7e0b3e3a6d2dfa2c772e42610579740b.webp&#34;
               width=&#34;760&#34;
               height=&#34;432&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我的妈呀，这是一个没有任何数据的视图，管理层永远不会赞同这一点。让我们通过执行以下命令生成一些负载：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    curl -i http://&lt;span class=&#34;nv&#34;&gt;$EXTERNAL_IP&lt;/span&gt;/sentiment &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-type: application/json&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;sentence&amp;#34;: &amp;#34;I love yogobella&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    sleep .8&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在我们拥有更漂亮的图表，此外，我们拥有 Prometheus 用于监控和 Grafana 用于可视化指标这些令人惊讶的工具，使我们能够随时了解服务的性能，健康状况，升级或降级！&lt;/p&gt;
&lt;p&gt;最后，我们将研究整个服务中的跟踪请求。&lt;/p&gt;
&lt;h2 id=&#34;jaeger---追踪&#34;&gt;Jaeger - 追踪&lt;/h2&gt;
&lt;p&gt;我们需要跟踪，因为我们所拥有的服务越多，就越难找出失败的原因。我们来看下面图片中的简单案例：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-12通常随机失败的请求&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 12.通常随机失败的请求&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ht7hj20m804fjrw_hufeb3be4509712d3ef4cee337b2b46afd_48453_efe676da6fab581e60254ffb3c21d594.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ht7hj20m804fjrw_hufeb3be4509712d3ef4cee337b2b46afd_48453_2a5298549e0f1512a44a1542bcd6988b.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ht7hj20m804fjrw_hufeb3be4509712d3ef4cee337b2b46afd_48453_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2ht7hj20m804fjrw_hufeb3be4509712d3ef4cee337b2b46afd_48453_efe676da6fab581e60254ffb3c21d594.webp&#34;
               width=&#34;760&#34;
               height=&#34;151&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 12.通常随机失败的请求
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;请求进入，失败，&lt;em&gt;原因是什么&lt;/em&gt;？&lt;em&gt;第一次服务&lt;/em&gt;？&lt;em&gt;还是第二个&lt;/em&gt;？两者都有例外情况，让我们来看看每个日志。你发现自己这么做了多少次？我们的工作更像是软件侦探而不是开发人员。&lt;/p&gt;
&lt;p&gt;这是微服务中的一个普遍问题，它使用分布式跟踪系统解决，其中服务将唯一的 header 相互传递，然后将此信息转发到请求跟踪放在一起的分布式跟踪系统。一个例子如图 13 所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-13用于标识请求范围的-traceid&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 13.用于标识请求范围的 TraceId&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2k4zsj20rs06uwfz_hu57540032efbe04467ccd71e670c716de_87299_e7bfb3516ba93512f243a779c70df762.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2k4zsj20rs06uwfz_hu57540032efbe04467ccd71e670c716de_87299_125bcb4ef1d4197bb5dcc931c8c5baa5.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2k4zsj20rs06uwfz_hu57540032efbe04467ccd71e670c716de_87299_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2k4zsj20rs06uwfz_hu57540032efbe04467ccd71e670c716de_87299_e7bfb3516ba93512f243a779c70df762.webp&#34;
               width=&#34;760&#34;
               height=&#34;187&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 13.用于标识请求范围的 TraceId
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Istio 使用 Jaeger Tracer 实现 OpenTracing API，这是一个独立于供应商的框架。要访问 Jaegers UI，请执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl port-forward -n istio-system &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;kubectl get pod -n istio-system -l &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;jaeger &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16686&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在 &lt;a href=&#34;http://localhost:16686/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:16686&lt;/a&gt; 中打开 UI，选择 &lt;strong&gt;sa-web-app&lt;/strong&gt; 服务， &lt;em&gt;如果下拉列表中未显示该&lt;/em&gt;服务，&lt;em&gt;则在页面上生成一些活动并点击刷新&lt;/em&gt; 。随后单击该按钮 &lt;strong&gt;查找痕迹&lt;/strong&gt;，这显示最近的痕迹，选择任何和所有的痕迹的详细分类将会显示，如图 14 所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-14-jaeger---请求跟踪&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 14. Jaeger - 请求跟踪&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1ca17j20rs0bsgnr_hue99f4998151e31a13a008801aa511890_174066_f5d0bf3a53af4f5e27d9dd55c9f3a8f7.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1ca17j20rs0bsgnr_hue99f4998151e31a13a008801aa511890_174066_09ecd51c89a64393dca850c7852ba075.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1ca17j20rs0bsgnr_hue99f4998151e31a13a008801aa511890_174066_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1ca17j20rs0bsgnr_hue99f4998151e31a13a008801aa511890_174066_f5d0bf3a53af4f5e27d9dd55c9f3a8f7.webp&#34;
               width=&#34;760&#34;
               height=&#34;322&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 14. Jaeger - 请求跟踪
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;跟踪显示：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;请求来到 &lt;strong&gt;istio-ingressgateway&lt;/strong&gt; （它是第一次与其中一个服务联系，因此对于生成跟踪 ID 的请求）然后网关将请求转发给 &lt;code&gt;sa-web-app&lt;/code&gt; 服务。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;sa-web-app&lt;/code&gt; 服务中，请求由 Envoysidecar 拾取并创建一个 span（这就是我们在跟踪中看到它的原因）并转发到 &lt;code&gt;sa-web-app&lt;/code&gt; 容器实例。&lt;/li&gt;
&lt;li&gt;这里方法 &lt;strong&gt;sentimentAnalysis&lt;/strong&gt; 处理请求。这些跟踪由应用程序生成，这意味着需要更改代码）。&lt;/li&gt;
&lt;li&gt;从 POST 请求&lt;code&gt;sa-logic&lt;/code&gt;开始的位置。跟踪 ID 需要&lt;code&gt;sa-web-app&lt;/code&gt;传递。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;5. &amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; ：在第 4 点，我们的应用程序需要获取 Istio 生成的 header，并在下一个请求时将其传递下来，如下图所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1odduj20m8055q3r_hu6ced28e2a63f92eb42044ea119c9e44e_77417_887afe8a56e2aca784dcd82135707c70.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1odduj20m8055q3r_hu6ced28e2a63f92eb42044ea119c9e44e_77417_fd0d377f80470a0a3eb450e1ac5a2d47.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1odduj20m8055q3r_hu6ced28e2a63f92eb42044ea119c9e44e_77417_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1odduj20m8055q3r_hu6ced28e2a63f92eb42044ea119c9e44e_77417_887afe8a56e2aca784dcd82135707c70.webp&#34;
               width=&#34;760&#34;
               height=&#34;176&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Istio 做主要的繁重工作，因为它在传入的请求上生成 header，在每个 sidecar 上创建新的 span，传递它们，但是如果没有我们的服务传递 header，我们将失去请求的完整跟踪。&lt;/p&gt;
&lt;p&gt;要传递的 header 是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-request-id
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-traceid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-spanid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-parentspanid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-sampled
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-flags
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-ot-span-context
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;尽管这是一项简单的任务，但已经有&lt;a href=&#34;https://github.com/opentracing-contrib&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;许多库&lt;/a&gt; 可以简化这一过程，例如在 &lt;code&gt;sa-web-app&lt;/code&gt;服务中， &lt;strong&gt;RestTemplate&lt;/strong&gt; 客户端通过简单地&lt;a href=&#34;https://github.com/rinormaloku/istio-mastery/blob/master/sa-webapp/pom.xml#L36-L47&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;依赖项中&lt;/a&gt; 添加 Jaeger 和 OpenTracing 库来传递 header。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意：Sentiment Analysis 应用程序展示了 Flask，Spring 和 ASP.NET Core 的实现。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;现在，在调查我们开箱即用（或部分开箱即用）之后，让我们来看看这里的主题，细粒度路由，管理网络流量，安全性等等！&lt;/p&gt;
&lt;h2 id=&#34;流量管理&#34;&gt;流量管理&lt;/h2&gt;
&lt;p&gt;使用 Envoy 的 Istio 为您的集群提供了许多新功能，从而实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;动态请求路由&lt;/strong&gt; ：Canary 部署，A/B 测试，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;负载均衡：&lt;/strong&gt; 简单和一致的哈希平衡，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;故障恢复&lt;/strong&gt; ：超时，重试，熔断器，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;故障注入&lt;/strong&gt; ：延迟，中止请求等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在本文的序列中，我们将在我们的应用程序中展示这些功能，并在此过程中介绍一些新概念。我们将研究的第一个概念是 DestinationRules，并使用那些我们将启用 A/B 测试的概念。&lt;/p&gt;
&lt;h2 id=&#34;ab测试---实践中的目的地规则&#34;&gt;A/B测试 - 实践中的目的地规则&lt;/h2&gt;
&lt;p&gt;当我们有两个版本的应用程序（通常版本视觉上有所不同）时使用 A/B 测试，并且我们不是 100％肯定会增加用户交互，因此我们同时尝试两个版本并收集指标。&lt;/p&gt;
&lt;p&gt;执行以下命令以部署演示A/B测试所需的前端的第二个版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/kube/ab-testing/sa-frontend-green-deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions/sa-frontend-green created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;绿色版本的部署清单有两点不同：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;该 image 基于不同的标签： &lt;code&gt;istio-green&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pod 标有 &lt;code&gt;version: green&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而作为双方部署在标签 &lt;code&gt;app: sa-frontend&lt;/code&gt; 通过虚拟服务路由的请求 &lt;code&gt;sa-external-services&lt;/code&gt;  的服务 &lt;code&gt;sa-frontend&lt;/code&gt; 会被转发到所有的实例，并将于负载采用循环算法，这将导致在图 16 中提出的负载均衡问题。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-16找不到请求的文件&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 16.找不到请求的文件&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu30v6lj20m80do761_hu9a34d7f21ebb3b738fffa099c3064611_136022_2af8814cafca8db2e74b32b19fdcb24f.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu30v6lj20m80do761_hu9a34d7f21ebb3b738fffa099c3064611_136022_066e89aa6e33e987c90f622fd5277825.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu30v6lj20m80do761_hu9a34d7f21ebb3b738fffa099c3064611_136022_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu30v6lj20m80do761_hu9a34d7f21ebb3b738fffa099c3064611_136022_2af8814cafca8db2e74b32b19fdcb24f.webp&#34;
               width=&#34;760&#34;
               height=&#34;467&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 16.找不到请求的文件
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;找不到这些文件，因为它们在应用程序的不同版本中的命名方式不同。让我们验证一下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl --silent http://&lt;span class=&#34;nv&#34;&gt;$EXTERNAL_IP&lt;/span&gt;/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/static/css/main.c7071b22.css
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/static/js/main.059f8e9c.js
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl --silent http://&lt;span class=&#34;nv&#34;&gt;$EXTERNAL_IP&lt;/span&gt;/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/static/css/main.f87cd8c9.css
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/static/js/main.f7659dbb.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这意味着请求一个版本的静态文件的&lt;code&gt;index.html&lt;/code&gt;可以被负载均衡到提供另一个版本的 pod，其中可以理解的是其他文件不存在。&lt;/p&gt;
&lt;p&gt;这意味着，为了让我们的应用程序正常工作，我们需要引入限制“为 index.html 服务的应用程序的版本，必须为后续请求提供服务”。&lt;/p&gt;
&lt;p&gt;我们将使用 Consistent Hash Loadbalancing 来实现这一点，这 &lt;strong&gt;是&lt;/strong&gt; 使用预定义属性（例如 HTTP header）&lt;strong&gt;将来自同一客户端的请求转发到同一后端实例的过程&lt;/strong&gt;。由 DestionatioRules 提供。&lt;/p&gt;
&lt;h2 id=&#34;destinationrules&#34;&gt;DestinationRules&lt;/h2&gt;
&lt;p&gt;在 &lt;strong&gt;VirtualService&lt;/strong&gt; 将请求路由到正确的服务之后，然后使用 &lt;strong&gt;DestinationRules&lt;/strong&gt;，我们可以指定适用于此服务实例的流量的策略，如图 17 所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-17使用-istio-资源的流量管理&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 17.使用 Istio 资源的流量管理&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2yjsuj20rs09e75i_hub973b075210a5364025902e0934480e1_131002_7a8e3942555ca94197d7a98b8c96fe33.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2yjsuj20rs09e75i_hub973b075210a5364025902e0934480e1_131002_1295106d4c933312b5ad4528c369fa5f.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2yjsuj20rs09e75i_hub973b075210a5364025902e0934480e1_131002_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2yjsuj20rs09e75i_hub973b075210a5364025902e0934480e1_131002_7a8e3942555ca94197d7a98b8c96fe33.webp&#34;
               width=&#34;760&#34;
               height=&#34;257&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 17.使用 Istio 资源的流量管理
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：图 17 以易于理解的方式可视化 Istio 资源如何影响网络流量。但是，准确地说，决定将请求转发到哪个实例是由 CRD 配置的 Ingress Gateway 的 Envoy 做出的。&lt;/p&gt;
&lt;p&gt;使用目标规则，我们可以将负载均衡配置为具有一致性哈希，并确保同一用户由同一服务实例响应。通过以下配置实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;DestinationRule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-frontend&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-frontend&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;trafficPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;loadBalancer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;consistentHash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;httpHeaderName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;version  &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;根据“version”标头的内容生成一致的哈希。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过执行以下命令应用配置并尝试一下！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/ab-testing/destinationrule-sa-frontend.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;destinationrule.networking.istio.io/sa-frontend created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行以下命令并验证在指定版本 header 时是否获得相同的文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl --silent -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;version: yogo&amp;#34;&lt;/span&gt; http://&lt;span class=&#34;nv&#34;&gt;$EXTERNAL_IP&lt;/span&gt;/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：为了方便在浏览器中进行测试，您可以使用此 &lt;a href=&#34;https://chrome.google.com/webstore/detail/modheader/idgpnmonknjnojddfkpgkljpfnnfcklj&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chrome 扩展程序&lt;/a&gt; 向版本 header 添加不同的值，。&lt;/p&gt;
&lt;p&gt;DestinationRules 具有更多 LoadBalancing 功能，所有详细信息都可以查看 &lt;a href=&#34;https://preliminary.istio.io/docs/reference/config/istio.networking.v1alpha3.html#LoadBalancerSettings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;在继续更详细地探索 VirtualService 之前，请执行以下命令，删除应用程序的绿色版本和目标规则：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl delete -f resource-manifests/kube/ab-testing/sa-frontend-green-deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa-frontend-green&amp;#34;&lt;/span&gt; deleted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl delete -f resource-manifests/istio/ab-testing/destinationrule-sa-frontend.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;destinationrule.networking.istio.io “sa-frontend” deleted
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;镜像服务---实践中的虚拟服务&#34;&gt;镜像服务 - 实践中的虚拟服务&lt;/h2&gt;
&lt;p&gt;当我们想要测试生产中的更改但不影响最终用户时，会使用影子或镜像，因此我们将请求镜像到具有更改并评估它的第二个实例中。 &lt;em&gt;更简单的是，当你的一个同事选择最关键的问题并制作一个超大的合并请求，并且没人能真正审查。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;要测试此功能，可以 通过执行以下命令 创建 SA-Logic 的第二个实例（ &lt;em&gt;这是 buggy 的&lt;/em&gt; ）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/kube/shadowing/sa-logic-service-buggy.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions/sa-logic-buggy created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行以下命令并验证所有实例都标有相应的版本，另外还有&lt;code&gt;app=sa-logic&lt;/code&gt;标记：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get pods -l &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sa-logic --show-labels
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                              READY   LABELS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-logic-568498cb4d-2sjwj         2/2     &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sa-logic,version&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;v1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-logic-568498cb4d-p4f8c         2/2     &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sa-logic,version&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;v1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-logic-buggy-76dff55847-2fl66   2/2     &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sa-logic,version&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;v2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sa-logic-buggy-76dff55847-kx8zz   2/2     &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sa-logic,version&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;v2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当 &lt;code&gt;sa-logic&lt;/code&gt; 服务目标 pod 标记为 &lt;code&gt;app=sa-logic&lt;/code&gt;时，任何传入请求将在所有实例之间进行负载均衡，如图 18 所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-18-round-robin-负载均衡&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 18. Round Robin 负载均衡&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu199gtj20m80f5wgc_hu9807c05403cf459333b4e86795132b18_122694_680c257f452f51a54fd3970698f77873.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu199gtj20m80f5wgc_hu9807c05403cf459333b4e86795132b18_122694_7a42a26338f9201650f278cf78759391.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu199gtj20m80f5wgc_hu9807c05403cf459333b4e86795132b18_122694_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu199gtj20m80f5wgc_hu9807c05403cf459333b4e86795132b18_122694_680c257f452f51a54fd3970698f77873.webp&#34;
               width=&#34;760&#34;
               height=&#34;518&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 18. Round Robin 负载均衡
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;但我们希望将请求路由到版本为 v1 的实例，并镜像到版本为 v2 的实例，如图 19 所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-19路由到-v1-和镜像到-v2&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 19.路由到 v1 和镜像到 v2&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2f7y4j20m80b8q3y_hu342881a13cd2db999a82d45e2177d54d_98573_bc77f8534ddb02a1939d7a6ec3d1b500.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2f7y4j20m80b8q3y_hu342881a13cd2db999a82d45e2177d54d_98573_438e284689808f079e28d25e69f32b08.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2f7y4j20m80b8q3y_hu342881a13cd2db999a82d45e2177d54d_98573_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2f7y4j20m80b8q3y_hu342881a13cd2db999a82d45e2177d54d_98573_bc77f8534ddb02a1939d7a6ec3d1b500.webp&#34;
               width=&#34;760&#34;
               height=&#34;384&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 19.路由到 v1 和镜像到 v2
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这是使用 VirtualService 与 DestinationRule 结合实现的，其中目标规则指定到特定子集的子集和 VirtualService 路由。&lt;/p&gt;
&lt;h2 id=&#34;使用目标规则指定子集&#34;&gt;使用目标规则指定子集&lt;/h2&gt;
&lt;p&gt;我们使用以下配置定义子集：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;DestinationRule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic   &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1       &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1  &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v2  &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;主机定义此规则仅在向 &lt;code&gt;sa-logic&lt;/code&gt; 服务发生路由时适用&lt;/li&gt;
&lt;li&gt;路由到子集实例时使用的子集名称。&lt;/li&gt;
&lt;li&gt;Label 定义了需要匹配的键值对，以使实例成为子集的一部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用执行以下命令的配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/shadowing/sa-logic-subsets-destinationrule.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; destinationrule.networking.istio.io/sa-logic created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过定义子集，我们可以继续并配置 VirtualService 以应用于请求 &lt;code&gt;sa-logic&lt;/code&gt; 所在的请求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;路由到名为 v1 的子集，&lt;/li&gt;
&lt;li&gt;镜像到名为 v2 的子集。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是通过以下清单实现的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;VirtualService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;sa-logic          &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;destination&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic  &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1      &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mirror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic     &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于一切配置都是不言自明的，让我们看看它的执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/shadowing/sa-logic-subsets-shadowing-vs.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualservice.networking.istio.io/sa-logic created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过执行以下命令添加一些负载：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; curl -v http://&lt;span class=&#34;nv&#34;&gt;$EXTERNAL_IP&lt;/span&gt;/sentiment &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-type: application/json&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;sentence&amp;#34;: &amp;#34;I love yogobella&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    sleep .8&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查 Grafana 中的结果，在那里我们可以看到有错误的版本大约有 60％的请求失败，但没有一个失败影响最终用户，因为它们被当前活动的服务响应。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-20-sa-逻辑服务版本的成功率&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 20. sa 逻辑服务版本的成功率&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2vr8gj20m80b0t9z_hu50b069e5fd4b109ba3dbaa3150c4714a_83890_e3dd87c8b9b56c3c5aec62e8dcca4a04.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2vr8gj20m80b0t9z_hu50b069e5fd4b109ba3dbaa3150c4714a_83890_cb47a68700ac6cd6bf41e162da9edb37.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2vr8gj20m80b0t9z_hu50b069e5fd4b109ba3dbaa3150c4714a_83890_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu2vr8gj20m80b0t9z_hu50b069e5fd4b109ba3dbaa3150c4714a_83890_e3dd87c8b9b56c3c5aec62e8dcca4a04.webp&#34;
               width=&#34;760&#34;
               height=&#34;376&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 20. sa 逻辑服务版本的成功率
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在本节中，我们第一次看到应用于我们服务的 envoy 的 VirtualService，当对此 &lt;code&gt;sa-web-app&lt;/code&gt; 提出请求时， &lt;code&gt;sa-logic&lt;/code&gt;  通过 sidecar Envoy，通过 VirtualService 配置为路由到子集 v1 并镜像到服务的子集 v2 &lt;code&gt;sa-logic&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;我可以看到你在想“Darn man Virtual Services 很简单！”，在下一节中，我们将把句子扩展为“Simply Amazing！”。&lt;/p&gt;
&lt;h2 id=&#34;金丝雀部署&#34;&gt;金丝雀部署&lt;/h2&gt;
&lt;p&gt;Canary Deployment 是向少数用户推出新版本应用程序的过程，作为验证缺少问题的一个步骤，然后向更广泛的受众提供更高质量的发布保证。&lt;/p&gt;
&lt;p&gt;我们将继续使用相同的 buggy 子集 &lt;code&gt;sa-logic&lt;/code&gt; 来演示 canary 部署。&lt;/p&gt;
&lt;p&gt;让我们大胆地开始，通过应用下面的 VirtualService，将 20％的用户发送到有缺陷的版本（这代表金丝雀部署）和 80％的健康服务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;VirtualService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;sa-logic    &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;destination&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;destination&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;权重指定要转发到目标或目标子集的请求的百分比。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sa-logic&lt;/code&gt; 使用以下命令 更新以前的 虚拟服务配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/canary/sa-logic-subsets-canary-versusyaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; virtualservice.networking.istio.io/sa-logic configured
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们立即看到我们的一些请求失败了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   curl -i http://&lt;span class=&#34;nv&#34;&gt;$EXTERNAL_IP&lt;/span&gt;/sentiment &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   -H “Content-type: application/json” &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;sentence&amp;#34;: &amp;#34;I love yogobella&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --silent -w &lt;span class=&#34;s2&#34;&gt;&amp;#34;Time: %{time_total}s \t Status: %{http_code}\n&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   -o /dev/null&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; sleep .1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Time: 0.153075s Status: &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Time: 0.137581s Status: &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Time: 0.139345s Status: &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Time: 30.291806s Status: &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;VirtualServices 启用了 Canary Deployments，通过这种方法，我们将潜在的损害减少到了 20％的用户群。漂亮！现在，每当我们对代码不安全时，我们就可以使用 Shadowing 和 Canary Deployments，换句话说，总是如此。😜&lt;/p&gt;
&lt;h2 id=&#34;超时和重试&#34;&gt;超时和重试&lt;/h2&gt;
&lt;p&gt;代码并不总是错误的。在“ &lt;a href=&#34;https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing#The_fallacies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;分布式计算的 8 个谬误&lt;/a&gt; ”列表中，第一个谬论是“网络可靠”。网络不可靠，这就是我们需要超时和重试的原因。&lt;/p&gt;
&lt;p&gt;出于演示目的，我们将继续使用有缺陷的版本 &lt;code&gt;sa-logic&lt;/code&gt;，其中随机故障模拟网络的不可靠性。&lt;/p&gt;
&lt;p&gt;有缺陷的服务有三分之一的机会花费太长时间来响应，三分之一的机会以内部服务器错误结束，其余的成功完成。&lt;/p&gt;
&lt;p&gt;为了缓解这些问题并改善用户体验，我们可以：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果服务时间超过 8 秒，则超时&lt;/li&gt;
&lt;li&gt;重试失败的请求。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是通过以下资源定义实现的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;VirtualService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;destination&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;destination&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sa-logic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;8s          &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;attempts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;perTryTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;3s  &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;请求的超时时间为 8 秒，&lt;/li&gt;
&lt;li&gt;它尝试了 3 次，&lt;/li&gt;
&lt;li&gt;如果尝试时间超过 3 秒，则尝试将请求标记为失败。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是一种优化，因为用户不会等待超过 8 秒，并且我们在发生故障时重试三次，从而增加了导致响应成功的机会。&lt;/p&gt;
&lt;p&gt;使用以下命令应用更新的配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f resource-manifests/istio/retries/sa-logic-retries-timeouts-vs.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualservice.networking.istio.io/sa-logic configured
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;并查看 Grafana 图表，了解成功率的改善情况（如图 21 所示）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-图-21使用超时和重试后的改进&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;图 21.使用超时和重试后的改进&#34; srcset=&#34;
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1qjtxj20m80b63zk_hu08561a5de2fe5f3cccac09e1fefb947c_68253_b7aff203f90f541cfa81589369b55db3.webp 400w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1qjtxj20m80b63zk_hu08561a5de2fe5f3cccac09e1fefb947c_68253_0e7fd72b57cbf100368a1405ab627e2f.webp 760w,
               /blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1qjtxj20m80b63zk_hu08561a5de2fe5f3cccac09e1fefb947c_68253_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/back-to-microservices-with-istio-p1/61411417ly1g0exu1qjtxj20m80b63zk_hu08561a5de2fe5f3cccac09e1fefb947c_68253_b7aff203f90f541cfa81589369b55db3.webp&#34;
               width=&#34;760&#34;
               height=&#34;382&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      图 21.使用超时和重试后的改进
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;sa-logic-buggy&lt;/code&gt; 通过执行以下命令 进入下一部分 delete 和 VirtualService 之前：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl delete deployment sa-logic-buggy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deployment.extensions &lt;span class=&#34;s2&#34;&gt;&amp;#34;sa-logic-buggy&amp;#34;&lt;/span&gt; deleted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl delete virtualservice sa-logic
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualservice.networking.istio.io “sa-logic” deleted
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;熔断器和隔离模式&#34;&gt;熔断器和隔离模式&lt;/h2&gt;
&lt;p&gt;微服务架构中的两个重要模式，可以实现服务的自我修复。&lt;/p&gt;
&lt;p&gt;该 &lt;strong&gt;熔断器&lt;/strong&gt; 是用来阻止请求将视为不健康服务的一个实例，并使它能够恢复，在此期间客户端的请求转发到该服务的健康情况（增加成功率）。&lt;/p&gt;
&lt;p&gt;该 &lt;strong&gt;隔离模式&lt;/strong&gt; 整个系统降级来隔离错误，防止错误传播，举一个隔离故障例子，服务 B 处于损坏状态和其它服务（服务 B 的客户端）发出请求到服务 B，这将导致该客户端将使用了自己的线程池，将无法提供其他请求（即使这些请求与服务 B 无关）。&lt;/p&gt;
&lt;p&gt;我将跳过这些模式的实现，因为您可以查看 &lt;a href=&#34;https://istio.io/docs/tasks/traffic-management/circuit-breaking/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档中的实现&lt;/a&gt;，我很兴奋地展示身份验证和授权，这将是下一篇文章的主题。&lt;/p&gt;
&lt;h2 id=&#34;第一部分---摘要&#34;&gt;第一部分 - 摘要&lt;/h2&gt;
&lt;p&gt;在本文中，我们在 Kubernetes 集群中部署了 Istio，并使用其自定义资源定义（如 &lt;strong&gt;网关&lt;/strong&gt;， &lt;strong&gt;VirtualServices&lt;/strong&gt;， &lt;strong&gt;DestinationRules&lt;/strong&gt; 及其组件）启用了以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;strong&gt;Kiali&lt;/strong&gt;，通过查看正在运行的服务，它们如何执行，以及它们关系，来观察我们的服务。&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;Prometheus&lt;/strong&gt; 和 &lt;strong&gt;Grafana&lt;/strong&gt; 进行收集和可视化。&lt;/li&gt;
&lt;li&gt;请求 &lt;strong&gt;Jaeger&lt;/strong&gt; 跟踪（Hunter 的德语）。&lt;/li&gt;
&lt;li&gt;对网络流量进行全面细粒度控制，实现 &lt;strong&gt;Canary Deployments&lt;/strong&gt;， &lt;strong&gt;A/B测试和Shadowing&lt;/strong&gt; 。&lt;/li&gt;
&lt;li&gt;轻松实现 &lt;strong&gt;重试，超时和 CircuitBreakers&lt;/strong&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有这些都可以在没有代码更改或任何其他依赖性的情况下实现，从而使您的服务保持小巧，易于操作和维护&lt;/p&gt;
&lt;p&gt;对于您的开发团队来说，消除这些跨领域的问题并将它们集中到 Istio 的控制平面，意味着新服务很容易引入，它们不会占用大量资源，因为开发人员可以专注于解决业务问题。到目前为止，没有任何开发人员抱怨“必须解决有趣的业务问题！”。&lt;/p&gt;
&lt;p&gt;我很乐意在下面的评论中听到您的想法，并随时在 &lt;a href=&#34;https://twitter.com/rinormaloku&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Twitter&lt;/a&gt; 或我的页面 &lt;a href=&#34;https://rinormaloku.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rinormaloku.com&lt;/a&gt; 上与我 &lt;a href=&#34;https://rinormaloku.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;联系&lt;/a&gt;，并继续关注下一篇文章，我们将解决最后一层认证和授权问题！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
