<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub | 云原生社区（中国）</title>
    <link>https://cloudnativecn.com/author/github/</link>
      <atom:link href="https://cloudnativecn.com/author/github/index.xml" rel="self" type="application/rss+xml" />
    <description>GitHub</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Mon, 14 Apr 2025 10:37:31 +0800</lastBuildDate>
    <image>
      <url>https://cloudnativecn.com/media/sharing.png</url>
      <title>GitHub</title>
      <link>https://cloudnativecn.com/author/github/</link>
    </image>
    
    <item>
      <title>MCP 到底是什么，为什么每个人都在谈论它？</title>
      <link>https://cloudnativecn.com/blog/what-the-heck-is-mcp-and-why-is-everyone-talking-about-it/</link>
      <pubDate>Mon, 14 Apr 2025 10:37:31 +0800</pubDate>
      <guid>https://cloudnativecn.com/blog/what-the-heck-is-mcp-and-why-is-everyone-talking-about-it/</guid>
      <description>&lt;p&gt;本文译自：&lt;a href=&#34;https://github.blog/ai-and-ml/llms/what-the-heck-is-mcp-and-why-is-everyone-talking-about-it/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What the heck is MCP and why is everyone talking about it?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在大模型（LLM）相关的讨论中，最近“&lt;strong&gt;MCP（模型上下文协议，Model Context Protocol）&lt;/strong&gt;”这个词频频出现，几乎成了热门话题。但真正讲清楚它是什么的，反而不多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一句话总结：MCP 是一个开放标准，用来连接大模型与外部的数据和工具。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本文带你快速了解它的来龙去脉。&lt;/p&gt;
&lt;h2 id=&#34;llm-的上下文难题&#34;&gt;LLM 的上下文难题&lt;/h2&gt;
&lt;p&gt;大模型擅长生成内容，但一旦你问它一些训练数据之外的内容，它要么&lt;strong&gt;胡诌&lt;/strong&gt;（幻觉），要么说“我不知道”。&lt;/p&gt;
&lt;p&gt;这时，我们就需要在 Prompt 里提供“上下文信息”——无论是你的代码仓库、文档、数据源还是配置项，这些上下文对构建真正有用的 AI agent 来说是必不可少的。&lt;/p&gt;
&lt;p&gt;目前主流做法包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Prompt 中尽可能精细地嵌入上下文&lt;/li&gt;
&lt;li&gt;借助额外工具注入上下文，比如 GitHub Copilot 的 &lt;a href=&#34;https://code.visualstudio.com/docs/copilot/workspace-context&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@workspace&lt;/a&gt;，会把代码库中的信息传递给 LLM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种方式虽然很酷，但&lt;strong&gt;实现复杂、跨 API 和服务集成时更是困难重重&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;解决方案mcpmodel-context-protocol&#34;&gt;解决方案：MCP（Model Context Protocol）&lt;/h2&gt;
&lt;p&gt;2023 年 11 月，Anthropic &lt;a href=&#34;https://www.anthropic.com/news/model-context-protocol&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源了 MCP 协议&lt;/a&gt;，它是一个用于连接大模型和工具的数据交换标准。&lt;/p&gt;
&lt;p&gt;MCP 就像“你睡觉的样子”——起初慢慢发展，后来突然爆火。随着越来越多的组织采纳 MCP，它的价值也在迅速上升。&lt;/p&gt;
&lt;p&gt;✨ &lt;strong&gt;MCP 是模型无关的（model-agnostic）&lt;/strong&gt;，意味着任何厂商、平台或个人开发者都可以实现自己的 MCP 兼容系统。这种开放性让它在 AI 工具生态中大受欢迎。&lt;/p&gt;
&lt;p&gt;从云原生社区的角度看，它类似于我们熟悉的 &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Language Server Protocol（LSP）&lt;/a&gt;。LSP 诞生于 2016 年，标准化了代码编辑器和语言之间的通信方式，使编辑器对语言的支持变得“开箱即用”。&lt;/p&gt;
&lt;p&gt;如今，&lt;strong&gt;MCP 正在复刻这一成功路径，只不过对象变成了 AI 工具链。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;mcp-意味着什么&#34;&gt;MCP 意味着什么？&lt;/h2&gt;
&lt;p&gt;它让：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大厂 🏢&lt;/li&gt;
&lt;li&gt;初创团队 🚀&lt;/li&gt;
&lt;li&gt;独立开发者 👩‍💻&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;都能在自己的系统中&lt;strong&gt;快速集成上下文能力&lt;/strong&gt;，从而构建功能更强大的 AI 应用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它降低了 AI 工具链的集成门槛，提升了开发体验和用户体验&lt;/strong&gt;，在开放标准领域，MCP 有望成为“新一代基础设施”。&lt;/p&gt;
&lt;h2 id=&#34;github-正在行动&#34;&gt;GitHub 正在行动&lt;/h2&gt;
&lt;p&gt;GitHub 不只是聊 MCP，我们也在贡献！&lt;/p&gt;
&lt;p&gt;我们最近发布了一个官方开源项目：&lt;a href=&#34;https://github.com/github/github-mcp-server&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub MCP Server&lt;/a&gt;，它可以与 GitHub API 无缝集成，开发者可以基于它构建自动化和上下文增强工具。&lt;/p&gt;
&lt;p&gt;📢 查看 &lt;a href=&#34;https://github.blog/changelog/2025-04-04-github-mcp-server-public-preview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方公告&lt;/a&gt;，或加入 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/announcements&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub 社区讨论&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;如何参与-mcp-社区&#34;&gt;如何参与 MCP 社区？&lt;/h2&gt;
&lt;p&gt;非常欢迎你加入 MCP 社区并贡献力量，下面是一些推荐资源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MCP 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/modelcontextprotocol/servers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MCP 示例实现仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://spec.modelcontextprotocol.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MCP 协议规范&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/language-server-extension-guide#why-language-server&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LSP 背景资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，也别忘了：MCP 已可与 Agent 模式结合使用。是时候动手打造你的 AI 工具链了！&lt;/p&gt;
&lt;h2 id=&#34;-云原生视角总结&#34;&gt;🚀 云原生视角总结&lt;/h2&gt;
&lt;p&gt;MCP 是一个符合云原生价值观的协议标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开放&lt;/strong&gt;：人人可用，人人可贡献&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可组合&lt;/strong&gt;：可以集成到任何 AI 系统&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可移植&lt;/strong&gt;：不绑定任何平台或模型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生态驱动&lt;/strong&gt;：标准的普及带动工具和平台共同进化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它的崛起像当年的 Kubernetes、gRPC、LSP —— 正在为 AI 时代构建“可插拔”基础设施。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
