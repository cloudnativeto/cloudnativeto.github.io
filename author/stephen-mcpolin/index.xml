<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stephen Mcpolin | 云原生社区（中国）</title>
    <link>https://cloudnative.to/author/stephen-mcpolin/</link>
      <atom:link href="https://cloudnative.to/author/stephen-mcpolin/index.xml" rel="self" type="application/rss+xml" />
    <description>Stephen Mcpolin</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://cloudnative.to/author/stephen-mcpolin/avatar_hue38add62c87b7486d80c9f3fda25dfc1_12220_270x270_fill_q75_lanczos_center.jpg</url>
      <title>Stephen Mcpolin</title>
      <link>https://cloudnative.to/author/stephen-mcpolin/</link>
    </image>
    
    <item>
      <title>服务网格的未来 Part 2：Istio 1.0 之后何去何从？</title>
      <link>https://cloudnative.to/blog/the-future-of-service-mesh/</link>
      <pubDate>Thu, 01 Nov 2018 20:10:14 +0800</pubDate>
      <guid>https://cloudnative.to/blog/the-future-of-service-mesh/</guid>
      <description>&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://blogs.vmware.com/opensource/2018/10/23/service-mesh-whats-next&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在服务网格系列的第一部分中，我们认为服务网格是微服务体系架构发展的必然和有益的结果。随着 Istio 1.0 的发布，我们在服务网格领域已经经过了一个重要的里程碑，在这个重要的的时间节点上，我们需要思考服务网格的未来将如何发展。&lt;/p&gt;
&lt;p&gt;在 VMware 我们非常愿意花时间和精力支持开源的服务网格架构。我们已经成为 Istio 和 Envoy（Istio 用来动态控制微服务的特定的开源服务代理）的贡献成员。我们在改善网络方面投入了大量的精力，同时在其他领域贡献力量。&lt;/p&gt;
&lt;p&gt;我们考虑到几乎每个 Istio 的演示目前都是基于一个单一的示例。保加利亚的一位 VMware 同事目前正在构建一个全新的 Istio 演示示例，用于演示如何在封闭字幕等服务之间管理视频质量，并演示 Istio 在微服务环境中的动态路由的能力。&lt;/p&gt;
&lt;p&gt;因为我们认为服务网格是有价值的，而且可以一直存在，所以我们一只在寻求将 VMware 自己的世界级系统管理工具集与服务网格框架进行集成。这里有一个很好的例子，我们最近创建了一个适配器，将 Istio metrics 导出到 VMware 的 Wavefront 监测和分析工具中。如果我们能够将微服务中的更多信息合并到我们的系统管理工具中，我们相信这些工具能够更好的管理系统。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/the-future-of-service-mesh/006tNbRwgy1fwp4etrgwvj30sg0iz782_huf1d115b8f5bb3f46eff9dc7e53874001_203447_f7acf235c7571c8548f03299be523c75.webp 400w,
               /blog/the-future-of-service-mesh/006tNbRwgy1fwp4etrgwvj30sg0iz782_huf1d115b8f5bb3f46eff9dc7e53874001_203447_c4eb0431c824e8170ebd4d532be28ba4.webp 760w,
               /blog/the-future-of-service-mesh/006tNbRwgy1fwp4etrgwvj30sg0iz782_huf1d115b8f5bb3f46eff9dc7e53874001_203447_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/the-future-of-service-mesh/006tNbRwgy1fwp4etrgwvj30sg0iz782_huf1d115b8f5bb3f46eff9dc7e53874001_203447_f7acf235c7571c8548f03299be523c75.webp&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;从我们的角度来看，这样的工作是为了扩大微服务生态系统。然而，服务网格平台本身还不够完善。比如说，Istio 是一个复杂的软件，当它不能正常工作时很难调试。当它在工作，它能很好的帮助你监测你的微服务是否正常运行。当它不能正常工作，又很难弄清楚它为什么不能工作。这种复杂度已被社区中被广泛理解的，并且我们一直在花时间和精力思考如何克服这种复杂性，但目前我们还没有解决这个问题。&lt;/p&gt;
&lt;p&gt;目前服务网格平台刚开始处理多集群情况。如果你将应用部署在单集群上，可以使用 Istio 和 Envoy 这样的应用管理他们。但是当你希望将单集群扩展到多集群，并让服务在集群边界上进行通信（从安全的角度来看是一个好想法），那这将是一个挑战。社区理解 Istio 这样的情况，于我们而言，正在逐步改进设计以支持多集群管理。&lt;/p&gt;
&lt;p&gt;至此，我们正在关注一个新的提议，来自 Google 的 Knative。从根本上说，这是基于 Google 的“函数即服务”概念，从 Kubernetes 和 Istio 中衍生出来的。在不久的将来，它将向 Istio 提出更多的需求，但是目前还不清楚这些需求从何而来。例如，“事件”对于 Istio 来说是一个完全陌生的概念，但是对于处理临时数据还是必要的。Knative 则增加了这方面的组件，并推向 Istio 的下层。&lt;/p&gt;
&lt;p&gt;现在，我们只是在看到 Space—Knative 推出了大约一个半月，并且还有很多问题没有解决，在我们决定如何应对这些问题之前，我们也在寻求新的变革。因此，现在还有很多的事情要做，同时也有很多需要关注的地方。但是可以肯定的是，服务网格会有持续发展。&lt;/p&gt;
&lt;p&gt;请继续在 &lt;a href=&#34;https://blogs.vmware.com/opensource/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Source Blog&lt;/a&gt; 关注我们对服务网格系列后续的更新，并在 Twitter 上关注我们（@vmwopensource）。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>服务网格的未来 Part 1：服务网格架构是必然趋势并愈加重要</title>
      <link>https://cloudnative.to/blog/service-mesh-architectures-inevitable/</link>
      <pubDate>Mon, 29 Oct 2018 16:11:07 +0800</pubDate>
      <guid>https://cloudnative.to/blog/service-mesh-architectures-inevitable/</guid>
      <description>&lt;p&gt;当&lt;a href=&#34;https://istio.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 1.0&lt;/a&gt;在几个月前发布时，&lt;a href=&#34;https://techcrunch.com/2018/07/31/the-open-source-istio-service-mesh-for-microservices-hits-version-1-0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TechCrunch&lt;/a&gt;称它为“可能是目前最重要的开源项目之一”。它并不是完美的 (在本系列的第 2 部分会有详细介绍)，但是这个版本标志着服务网格架构开发的一个重要里程碑。&lt;/p&gt;
&lt;p&gt;尽管对 Istio 的发布给予了关注，但是，在开源社区服务网格还是不为人知。在这两篇文章中，我们首先提供一个窗口让读者了解服务网格的功能，然后在第二部分，展望在不久的会有何收获。&lt;/p&gt;
&lt;p&gt;关于服务网格，有一件重要的事情需要知道：那就是一旦微服务开始流行起来，服务网格基本上就变得不可避免了。这是因为本质上，它们运行并作为平台来解决服务之间通信的日益复杂的挑战。&lt;/p&gt;
&lt;p&gt;它们是这样工作的：假设你有一个微服务用来在客户数据库中查找支付方式，另一个来处理支付流程。如果你想确保信息不会泄露，或者你要将客户信息关联到正确的支付处理程序，那么你需要对它们之间的通信进行加密。服务网格可以处理加密而不需要任何一个服务知道如何加密。&lt;/p&gt;
&lt;p&gt;服务网格的作用远不止于此。总的来说，它们负责广泛的核心通信，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可观测性——在服务之间提供日志和度量数据&lt;/li&gt;
&lt;li&gt;发现——使服务连接在一起能够彼此发现&lt;/li&gt;
&lt;li&gt;通信——建立通信策略、方法和安全&lt;/li&gt;
&lt;li&gt;认证——建立服务和通信的访问权限&lt;/li&gt;
&lt;li&gt;平台支持——提供跨多个后端（Azure、AWS 等）和编排（Kubernetes、nginx 等）的能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你可以看到它对开发人员的吸引力——在每次构建微服务时，服务网格会处理掉他们不愿处理的所有事情。对系统管理员和部署团队来说也是福音：他们不必为想把需要的功能构建到特定的微服务而与开发人员讨价还价。而且，至少在理论上客户也会从中受益，因为他们可以更快地部署为市场定制的服务。&lt;/p&gt;
&lt;p&gt;考虑到这些优势，服务网格做到这一点将成为必然。一开始人们创造自己的通信网络。不久后公共的模式产生。统一的方法被整合在一起最终形成了平台解决方案。&lt;/p&gt;
&lt;p&gt;两年前谷歌开源了自己的服务网格 Istio。它不是第一个也不是最成熟的服务网格，但它是增长最快的，1.0 版本的发布标志着服务网格开启了新的篇章。&lt;/p&gt;
&lt;p&gt;再次引用 TechCrunch 的文章：“如果你不看好服务网络，这可以理解，的确有些人不看好他”。尽管目前情况是这样，但因为上述原因，我们认为这种情况很可能会改变。这就是为什么我们 VMware 花了大量的时间和精力在服务网格的开发上。&lt;/p&gt;
&lt;p&gt;在姊妹篇的第 2 部分，将讲述如何在 VMware 如何开发开源的服务网格，并描述我们认为架构在成熟后所面临的主要问题。&lt;/p&gt;
&lt;p&gt;请继续在&lt;a href=&#34;https://blogs.vmware.com/opensource/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Source Blog&lt;/a&gt;关注我们的服务网格系列的第二部分，并在 Twitter 上关注我们（@vmwopensource）。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
