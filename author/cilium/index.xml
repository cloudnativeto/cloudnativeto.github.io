<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cilium | 云原生社区（中国）</title>
    <link>https://cloudnative.to/author/cilium/</link>
      <atom:link href="https://cloudnative.to/author/cilium/index.xml" rel="self" type="application/rss+xml" />
    <description>Cilium</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://cloudnative.to/author/cilium/avatar_hue38add62c87b7486d80c9f3fda25dfc1_12220_270x270_fill_q75_lanczos_center.jpg</url>
      <title>Cilium</title>
      <link>https://cloudnative.to/author/cilium/</link>
    </image>
    
    <item>
      <title>深入了解 Cilium 多集群</title>
      <link>https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/</link>
      <pubDate>Wed, 03 Jul 2019 10:59:29 +0800</pubDate>
      <guid>https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/</guid>
      <description>&lt;p&gt;本文是对 ClusterMesh（Cilium 的多集群实现）的深入研究。简而言之，ClusterMesh 提供：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过隧道或直接路由，以本地性能对多个 Kubernetes 集群进行 Pod IP 路由，而无需任何网关或代理。&lt;/li&gt;
&lt;li&gt;使用标准Kubernetes服务和coredns/kube-dns的透明服务发现。&lt;/li&gt;
&lt;li&gt;跨多个集群的网络策略实施。策略可以指定为 Kubernetes NetworkPolicy 资源或扩展的 CiliumNetworkPolicy CRD。&lt;/li&gt;
&lt;li&gt;透明加密，用于本地集群中的节点之间以及跨集群边界的所有通信。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-f7dca3e31d252eb9_hu03c7b745d76382844e2f907ac6abb3f9_8392_8d4ddbf65febdaaed8ba5a4aacd2b485.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-f7dca3e31d252eb9_hu03c7b745d76382844e2f907ac6abb3f9_8392_152e3cf117fee90d069d21bef3a750b8.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-f7dca3e31d252eb9_hu03c7b745d76382844e2f907ac6abb3f9_8392_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-f7dca3e31d252eb9_hu03c7b745d76382844e2f907ac6abb3f9_8392_8d4ddbf65febdaaed8ba5a4aacd2b485.webp&#34;
               width=&#34;736&#34;
               height=&#34;213&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;多集群功能以层为单位构建，您可以选择使用所有层，也可以仅选择和使用所需的层。&lt;/p&gt;
&lt;h2 id=&#34;用例&#34;&gt;用例&lt;/h2&gt;
&lt;p&gt;在深入研究实现细节之前，让我们回顾一下连接多个 Kubernetes 集群的一些用例。&lt;/p&gt;
&lt;h3 id=&#34;用例高可用性&#34;&gt;用例：高可用性&lt;/h3&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-5d69ac8aba6c7b47_hufac25778e34418c908abbee77fef386b_88839_3acab47a5f69e318c73a2e99b849f03f.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-5d69ac8aba6c7b47_hufac25778e34418c908abbee77fef386b_88839_67318cf5f0d68d2c59ef90871f5b2763.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-5d69ac8aba6c7b47_hufac25778e34418c908abbee77fef386b_88839_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-5d69ac8aba6c7b47_hufac25778e34418c908abbee77fef386b_88839_3acab47a5f69e318c73a2e99b849f03f.webp&#34;
               width=&#34;760&#34;
               height=&#34;254&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;对于大多数人来说，高可用性是最明显的用例。此用例包括在多个区域（regions）或可用区（availability zones）中运行 Kubernetes 集群，并在每个集群中运行相同服务的副本。一旦失败，请求可以故障转移到其他集群。此用例中涵盖的故障情形主要不是整个区域或故障域的完全不可用。更可能的情况是一个集群中资源暂时不可用或配置错误导致无法在一个集群中运行或扩展特定服务。&lt;/p&gt;
&lt;h3 id=&#34;用例共享服务&#34;&gt;用例：共享服务&lt;/h3&gt;
&lt;p&gt;基于 Kubernetes 的平台的最初趋势是构建大型多租户 Kubernetes 集群。为每个租户构建单个集群或为不同类别的服务构建集群越来越普遍，例如，不同级别的安全敏感度。
















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-c950c8dfbc5a9b0d_hu2788677e28cb25fdd09edaefafc23c31_77373_0d1a260db892a88be33801f420836fab.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-c950c8dfbc5a9b0d_hu2788677e28cb25fdd09edaefafc23c31_77373_fd32605d6f2de02d7bf875c77581d7ea.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-c950c8dfbc5a9b0d_hu2788677e28cb25fdd09edaefafc23c31_77373_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-c950c8dfbc5a9b0d_hu2788677e28cb25fdd09edaefafc23c31_77373_0d1a260db892a88be33801f420836fab.webp&#34;
               width=&#34;760&#34;
               height=&#34;330&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;

但是，某些服务（如密钥管理，日志记录，监控或 DNS）通常仍在所有集群之间共享。这避免了在每个租户集群中维护这些服务的操作开销。&lt;/p&gt;
&lt;p&gt;此模型的主要动机是租户集群之间的隔离，为了维持该目标，租户集群连接到共享服务集群但未连接到其他租户集群。&lt;/p&gt;
&lt;h3 id=&#34;用例拆分有状态和无状态服务&#34;&gt;用例：拆分有状态和无状态服务&lt;/h3&gt;
&lt;p&gt;运行有状态或无状态服务的操作复杂性是非常不同的。无状态服务易于扩展，迁移和升级。完全使用无状态服务运行集群可使集群保持灵活和敏捷。从一个云提供商迁移到另一个云提供商非常简单。&lt;/p&gt;
&lt;p&gt;有状态服务可能会引入潜在的复杂依赖链。迁移服务通常涉及存储迁移。
















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-98e2a381af81e811_hu2e2cbe6d41af9b9e77ff23f9ddaaeb98_108463_ab119ad04a53004401751b7c5b050d4f.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-98e2a381af81e811_hu2e2cbe6d41af9b9e77ff23f9ddaaeb98_108463_266bf533c204851dda0cbd2a7f47255f.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-98e2a381af81e811_hu2e2cbe6d41af9b9e77ff23f9ddaaeb98_108463_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-98e2a381af81e811_hu2e2cbe6d41af9b9e77ff23f9ddaaeb98_108463_ab119ad04a53004401751b7c5b050d4f.webp&#34;
               width=&#34;760&#34;
               height=&#34;358&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;

为无状态和有状态分别运行独立的集群允许将依赖复杂性隔离到较少数量的集群，并使无状态集群依赖性保持自由。&lt;/p&gt;
&lt;h2 id=&#34;控制平面&#34;&gt;控制平面&lt;/h2&gt;
&lt;h3 id=&#34;要求&#34;&gt;要求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;必须为所有 Kubernetes 工作节点分配唯一的 IP 地址，并且所有工作节点必须在彼此之间具有 IP 连接。&lt;/li&gt;
&lt;li&gt;必须为所有集群分配唯一的 PodCIDR 区间。&lt;/li&gt;
&lt;li&gt;必须将 Cilium 配置为使用 etcd 的 kvstore。&lt;/li&gt;
&lt;li&gt;集群之间的网络必须允许集群间通信。防火墙的具体配置要求将取决于 Cilium 是否配置为以直接路由或隧道模式运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;架构&#34;&gt;架构&lt;/h3&gt;
&lt;p&gt;控制平面基于 etcd 并尽可能保持简约：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个 Kubernetes 集群都维护自己的 etcd 集群，包含该集群的状态。来自多个集群的状态永远不会在 etcd 本身中混淆。&lt;/li&gt;
&lt;li&gt;每个集群通过一组 etcd 代理公开它自己的 etcd。在其他集群中运行的 Cilium 代理连接到 etcd 代理以监视更改并将多集群相关状态复制到自己的集群中。使用 etcd 代理确保了 etcd 观察者的可扩展性。访问受 TLS 证书保护。&lt;/li&gt;
&lt;li&gt;从一个集群到另一个集群的访问始终是只读的。这确保了故障域保持不变，即一个集群中的故障永远不会传播到其他集群中。&lt;/li&gt;
&lt;li&gt;配置通过简单的 Kubernetes secrets 资源进行，该资源包含远程 etcd 代理的寻址信息以及访问 etcd 代理所需的集群名称和证书。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-47bf320d6635c354_hu533b6f661595074e9a3ce46f8098a343_122359_f7060cc1dc988407e53de15123a18bd3.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-47bf320d6635c354_hu533b6f661595074e9a3ce46f8098a343_122359_654dbdcd8f70422fd31b98381185ee72.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-47bf320d6635c354_hu533b6f661595074e9a3ce46f8098a343_122359_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-47bf320d6635c354_hu533b6f661595074e9a3ce46f8098a343_122359_f7060cc1dc988407e53de15123a18bd3.webp&#34;
               width=&#34;760&#34;
               height=&#34;261&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;pod-ip-路由&#34;&gt;Pod IP 路由&lt;/h2&gt;
&lt;p&gt;pod IP 路由是多集群能力的基础。它允许跨集群的 pod 通过其 pod IP 相互联系。Cilium 可以在多种模式下运行以执行 pod IP 路由。所有这些模式都能够执行多集群 pod IP 路由。&lt;/p&gt;
&lt;h3 id=&#34;隧道模式&#34;&gt;隧道模式&lt;/h3&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-1488d363a7db42ae_hud746943c5461e2b41613a320807f92c8_9034_9595b3d51326ac29f6edb1227beeeeb9.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-1488d363a7db42ae_hud746943c5461e2b41613a320807f92c8_9034_5b2b5c9ed3168673626a7352e4f11c65.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-1488d363a7db42ae_hud746943c5461e2b41613a320807f92c8_9034_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-1488d363a7db42ae_hud746943c5461e2b41613a320807f92c8_9034_9595b3d51326ac29f6edb1227beeeeb9.webp&#34;
               width=&#34;706&#34;
               height=&#34;239&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;隧道模式将 pod 中发出的所有网络数据包封装在所谓的封包头中。封包头可以包含 VXLAN 或 Geneve 帧。然后通过标准 UDP 包头传输该封装帧。该概念类似于 VPN 隧道。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：pod IP 在底层网络上永远不可见。网络只能看到工作节点的 IP 地址。这可以简化安装和防火墙规则。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：所需的额外网络标头将降低网络的理论最大吞吐量。确切的成本取决于配置的 MTU，与使用 MTU 9000 的巨型帧相比，使用 1500 的传统 MTU 时会更加明显。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：为了不消耗过多 CPU，包括底层硬件在内的整个网络堆栈必须支持校验和和分段卸载，以计算校验和并在硬件中执行分段，就像对“常规”网络数据包所做的那样。如今，这种卸载功能的可用性非常常见。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;直接路由模式&#34;&gt;直接路由模式&lt;/h3&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-51340f50bb80261e_hue93f7517bedffd09e7281d2bbad1d6ce_8123_82ba56d42dc3b58daaa7dc20d220d116.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-51340f50bb80261e_hue93f7517bedffd09e7281d2bbad1d6ce_8123_d14dc78a012223208fbccf8cbfccd735.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-51340f50bb80261e_hue93f7517bedffd09e7281d2bbad1d6ce_8123_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-51340f50bb80261e_hue93f7517bedffd09e7281d2bbad1d6ce_8123_82ba56d42dc3b58daaa7dc20d220d116.webp&#34;
               width=&#34;706&#34;
               height=&#34;240&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在直接路由模式中，所有网络数据包都直接路由到网络。这要求网络能够路由 pod IP。可以使用多个选项实现跨节点传播 pod IP 路由信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;--auto-direct-node-routes&lt;/code&gt;选项，这是通过 kvstore 的超轻量级路由传播方法，如果所有工作节点共享一个单一的 2 层网络，该选项将起作用。对于所有形式的基于云提供商的虚拟网络，通常都满足此要求。&lt;/li&gt;
&lt;li&gt;使用&lt;a href=&#34;http://docs.cilium.io/en/stable/gettingstarted/kube-router/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kube-router 集成&lt;/a&gt;运行 BGP 路由守护进程。&lt;/li&gt;
&lt;li&gt;使用任何其他路由守护进程将路由注入标准 Linux 路由表（bird，quagga，&amp;hellip;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当网络不再理解 pod IP 时，网络数据包地址需要伪装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：减少的网络数据包标头可以优化网络吞吐量和延迟。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：整个网络必须能够路由 pod IP，这会增加操作的复杂性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;混合路由模式&#34;&gt;混合路由模式&lt;/h3&gt;
&lt;p&gt;混合路由模式允许在可用时使用直接路由，这通常在本地集群或同一 VPC 中的其他集群中，而当跨越 VPC 或云提供商时可以回退到隧道模式。这可以限制操作复杂性并且允许仅在需要时支付优化成本。&lt;/p&gt;
&lt;h2 id=&#34;服务发现&#34;&gt;服务发现&lt;/h2&gt;
&lt;p&gt;Cilium 的多集群模型的服务发现是使用标准的 Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;services&lt;/a&gt; 构建的，旨在对现有的 Kubernetes 应用程序部署完全透明：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Service&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rebel-base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.cilium/global-service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterIP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rebel-base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Cilium 通过一个注释&lt;code&gt;io.cilium/global-service: &amp;quot;true&amp;quot;&lt;/code&gt; 来监控 Kubernetes 服务和端点以及监听服务。对于此类服务，具有相同名称和命名空间信息的所有服务将自动合并在一起，并形成跨集群可用的全局服务。&lt;/li&gt;
&lt;li&gt;根据标准 Kubernetes 运行状况检查逻辑，任何到全局服务的 ClusterIP 的流量都将自动负载平衡到所有集群中的端点。&lt;/li&gt;
&lt;li&gt;每个集群继续为每个服务维护自己的 ClusterIP，这意味着 Kubernetes 和 kube-dns / coredns 不知道其他集群。DNS 服务器继续返回仅在本地集群中有效的 ClusterIP，Cilium 将透明地执行负载平衡。&lt;/li&gt;
&lt;li&gt;对于细粒度控制存在若干附加注释，例如单向暴露或亲和策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-b027eb4bd91ead46_hufc8898f95aa4f70b93e92639776a738b_80555_9e7275b79637665a35511e404f8e623a.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-b027eb4bd91ead46_hufc8898f95aa4f70b93e92639776a738b_80555_89635a8e367235899410da6754d2d500.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-b027eb4bd91ead46_hufc8898f95aa4f70b93e92639776a738b_80555_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-b027eb4bd91ead46_hufc8898f95aa4f70b93e92639776a738b_80555_9e7275b79637665a35511e404f8e623a.webp&#34;
               width=&#34;760&#34;
               height=&#34;255&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;从&lt;code&gt;frontend-1&lt;/code&gt;到 ClusterIP &lt;code&gt;30.1.1.1&lt;/code&gt;的所有流量将自动负载均衡到集群 1 的后端 pod IP&lt;code&gt;[10.0.0.1,10.0.0.2]&lt;/code&gt;以及集群 2 的后端 pod IP&lt;code&gt;[20.0.0.1,20.0.0.2]&lt;/code&gt;。每个集群将执行本地后端实例的运行状况检查，并在容器创建，销毁或变得不健康时通知其他集群。&lt;/p&gt;
&lt;h2 id=&#34;透明加密&#34;&gt;透明加密&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cilium.io/blog/2019/02/12/cilium-14/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium 1.4&lt;/a&gt;中引入的透明加密与多集群兼容。确保使用公共密钥配置所有集群中的所有节点，如此节点之间的所有通信都会自动加密。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-be3e56c01fa1ef78_hua69c29a8d100a23bdbab8d054ad11322_7214_02727162994640930619d5d581da5c7b.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-be3e56c01fa1ef78_hua69c29a8d100a23bdbab8d054ad11322_7214_062879b77cb07c34a487b2f990f9bf01.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-be3e56c01fa1ef78_hua69c29a8d100a23bdbab8d054ad11322_7214_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-be3e56c01fa1ef78_hua69c29a8d100a23bdbab8d054ad11322_7214_02727162994640930619d5d581da5c7b.webp&#34;
               width=&#34;709&#34;
               height=&#34;209&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;多集群的网络策略&#34;&gt;多集群的网络策略&lt;/h2&gt;
&lt;p&gt;简单版本是您从单个集群中熟悉的策略实施将简单地扩展并跨集群工作。由于策略是使用 pod 标签指定的，因此允许&lt;code&gt;frontend&lt;/code&gt;与&lt;code&gt;backend&lt;/code&gt;通信的策略将应用于集群流量，就像流量跨越集群一样。&lt;/p&gt;
&lt;p&gt;Cilium&lt;strong&gt;不会&lt;/strong&gt;跨集群自动传播 NetworkPolicy 或 CiliumNetworkPolicy。用户有责任将策略导入所有集群。这是有意为之，因为这意味着每个集群都可以决定是否允许集群接收来自远程集群的通信或者发出到远程集群的通信。&lt;/p&gt;
&lt;h3 id=&#34;允许特定集群的交叉路径&#34;&gt;允许特定集群的交叉路径&lt;/h3&gt;
&lt;p&gt;可以仅建立适用于特定集群中的 pod 的策略。集群名称由 Cilium 表示为每个 pod 上的标签，允许匹配的集群名称可以是&lt;code&gt;endpointSelector&lt;/code&gt;或者是由&lt;code&gt;toEndpoints&lt;/code&gt;和&lt;code&gt;fromEndpoints&lt;/code&gt;构造的&lt;code&gt;matchLabels&lt;/code&gt;标签：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;allow-cross-cluster&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow x-wing in cluster1 to contact rebel-base in cluster2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;x-wing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.cilium.k8s.policy.cluster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cluster1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rebel-base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.cilium.k8s.policy.cluster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cluster2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的示例策略将允许 cluster1 中的&lt;code&gt;x-wing&lt;/code&gt;与 cluster2 中的&lt;code&gt;rebel-base&lt;/code&gt;对话。除非存在将通信列入白名单的附加策略，否则 x-wing 将无法与本地集群中的 rebel-base 通信。&lt;/p&gt;
&lt;h2 id=&#34;与-istio-多集群的关系&#34;&gt;与 Istio 多集群的关系&lt;/h2&gt;
&lt;p&gt;这两个项目都是独立的，但可以很好地相互补充。组合 Cilium 和 Istio 多集群的常用方法是使用 Cilium 的多集群 Pod IP 路由层来满足&lt;a href=&#34;https://istio.io/docs/setup/kubernetes/multicluster-install/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 多集群指南&lt;/a&gt;的以下要求：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;每个集群中的所有 pod CIDR 必须可以相互路由。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此外，Cilium 策略执行功能可用于保护与 Istio 控制平面之间的通信，以及通过不支持的协议（如 UDP 或 IPV6）保护 sidecar 的旁路尝试，以及防止受损的 sidecar 代理。&lt;/p&gt;
&lt;p&gt;还可以同时运行全局 Istio 服务和 Cilium 全局服务。所有 Istio 托管服务都可以获得 Cilium 的全局服务，因为它们可以像常规服务一样通过 DNS 发现。&lt;/p&gt;
&lt;h2 id=&#34;准备开始&#34;&gt;准备开始&lt;/h2&gt;
&lt;p&gt;要开始使用，请按照手把手的&lt;a href=&#34;http://docs.cilium.io/en/stable/gettingstarted/clustermesh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ClusterMesh 教程&lt;/a&gt;进行操作，该教程将指导您完成将集群连接在一起的过程。请务必加入我们的&lt;a href=&#34;https://cilium.herokuapp.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack 频道&lt;/a&gt;，提出问题并展示您的设置。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-imagepng&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /blog/deep-dive-into-cilium-multi-cluster/14871146-112faa9f90a9352b_hu06a8be1f573830a38848fe9dbdeb916c_86239_2c642dbf8bef45ac82ec78218c82cea6.webp 400w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-112faa9f90a9352b_hu06a8be1f573830a38848fe9dbdeb916c_86239_89115eea73759d4ce643395c816b8b7a.webp 760w,
               /blog/deep-dive-into-cilium-multi-cluster/14871146-112faa9f90a9352b_hu06a8be1f573830a38848fe9dbdeb916c_86239_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/deep-dive-into-cilium-multi-cluster/14871146-112faa9f90a9352b_hu06a8be1f573830a38848fe9dbdeb916c_86239_2c642dbf8bef45ac82ec78218c82cea6.webp&#34;
               width=&#34;760&#34;
               height=&#34;264&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      image.png
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cilium 1.4 发布了，新功能一览</title>
      <link>https://cloudnative.to/blog/cilium-1-4/</link>
      <pubDate>Mon, 18 Feb 2019 17:59:29 +0800</pubDate>
      <guid>https://cloudnative.to/blog/cilium-1-4/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-发布概述&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;发布概述&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_d2f3f35e934b005380fcaf5388558f3d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_75e445a1e02c9e39976cda89c640f04e.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmk6vqhj20jg08odga_hu1ed4b1232eba4ede288cff210f7ec5e9_42848_d2f3f35e934b005380fcaf5388558f3d.webp&#34;
               width=&#34;700&#34;
               height=&#34;312&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      发布概述
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://cilium.io/blog/2019/02/12/cilium-14/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们很高兴地宣布 Cilium 1.4 版本。该版本引入了几项新功能以及优化和可扩展性工作。重点包括增加全局服务，提供跨多个集群的 Kubernetes 服务路由、DNS 请求/响应感知授权和可见性、透明加密（beta）、IPVLAN 支持以获得更好的性能和延迟（beta）、与 Flannel 集成、GKE 在 COS 上支持、基于 AWS 元数据的策略实施（alpha）以及优化内存和 CPU 使用的重要工作。&lt;/p&gt;
&lt;p&gt;像往常一样，感谢过去 4 个月中在版本 1.3 和 1.4 之间贡献了 1048 次提交的 Cilium 开发人员及整个社区。&lt;/p&gt;
&lt;h2 id=&#34;cilium-是什么&#34;&gt;Cilium 是什么？&lt;/h2&gt;
&lt;p&gt;Cilium 是一个开源软件，用于透明地提供和保护使用 Kubernetes、Docker 和 Mesos 等 Linux 容器管理平台部署的应用程序服务之间的网络和 API 连接。&lt;/p&gt;
&lt;p&gt;Cilium 的基础是一种名为 BPF 的新 Linux 内核技术，它可以在 Linux 本身内动态插入强大的安全性、可见性和网络控制逻辑。BPF 用于提供诸如多集群路由，负载均衡以取代 kube-proxy，使用 X.509 证书的透明加密以及网络和服务安全性等功能。除了提供传统的网络级安全性之外，BPF 的灵活性还可以通过应用程序协议和 DNS 请求/响应的上下文实现安全性。Cilium 与 Envoy 紧密集成，并提供基于 Go 的扩展框架。由于 BPF 在 Linux 内核中运行，因此可以应用所有 Cilium 功能，而无需对应用程序代码或容器配置进行任何更改。&lt;/p&gt;
&lt;p&gt;有关 &lt;strong&gt;&lt;a href=&#34;https://cilium.readthedocs.io/en/stable/intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium&lt;/a&gt;&lt;/strong&gt; 的更详细的介绍，请参阅**&lt;a href=&#34;https://cilium.readthedocs.io/en/stable/intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium 简介&lt;/a&gt;** 一节。&lt;/p&gt;
&lt;h2 id=&#34;多集群服务路由&#34;&gt;多集群服务路由&lt;/h2&gt;
&lt;p&gt;Cilium 1.3 在多个集群之间引入了基本的 pod IP 路由功能。Cilium 1.4 引入了基于标准 Kubernetes 服务的全局服务概念。全局服务允许用户指定 Kubernetes 服务在多个集群中可用。然后，该服务可以在多个集群中具有后端 pod。&lt;/p&gt;
&lt;p&gt;用户体验就像在每个集群中定义具有相同名称和命名空间的 Kubernetes 服务并添加注释以将其标记为全局一样简单。 















&lt;figure  id=&#34;figure-多集群服务&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;多集群服务&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_460a0f32374978f9622b6bc2446a71b6.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_323e4e4b950309459499d3d82f07ca2d.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkdyp1j21fk0mggly_huef333eb31c10c197efe00cac8f18d52b_51780_460a0f32374978f9622b6bc2446a71b6.webp&#34;
               width=&#34;760&#34;
               height=&#34;331&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      多集群服务
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;当 pod 向上或向下扩展或变得不健康时，Kubernetes 运行状态检查信息可用于自动添加和删除后端服务。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-多集群故障转移&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;多集群故障转移&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_f1b1c0d82925f7315292c188f29ebfd7.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_d12925d932ffbdb81ff4689bad72fd94.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmk3324j21g80hkwev_hu21044c354d0617df230cc37e7e665930_45142_f1b1c0d82925f7315292c188f29ebfd7.webp&#34;
               width=&#34;760&#34;
               height=&#34;255&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      多集群故障转移
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;控制平面建立在 etcd 之上，类似于 Kubernetes 原生的操作方式，具有弹性和简单性作为其基本设计模式。每个集群继续运行其自己的 etcd 集群，并且复制以只读方式进行，这可确保集群中的故障不会影响其他集群。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-集群控制平面&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;集群控制平面&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_507810fa8567808ac2f9dbe72b39bb81.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_a78750920b24e86c68d7d3ac9b6e986c.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjzw1jj20jg09ljrn_hu3c42a894a92e460dc7ba5bf5dcf5b266_33649_507810fa8567808ac2f9dbe72b39bb81.webp&#34;
               width=&#34;700&#34;
               height=&#34;345&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      集群控制平面
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;将集群连接在一起就像使用云供应商的标准路由 API 或基于常规 IP 地址的 VPN 网关和隧道的本地基础设施在 VPC 之间提供路由，然后通过内部 Kubernetes 负载均衡器暴露 Cilium 控制平面以将其暴露给内部 VPC 一样简单。TLS 用于使用作为 Kubernetes Secret 管理的证书和密钥对客户端和服务器进行身份验证。&lt;/p&gt;
&lt;h2 id=&#34;ipvlan-支持测试版&#34;&gt;IPVLAN 支持（测试版）&lt;/h2&gt;
&lt;p&gt;添加了一种新的基于 IPVLAN 的数据路径模式。与基于 veth 的体系结构相比，IPVLAN 具有低延迟优势。使用 netperf 在 3.40Ghz Xeon 上的两个本地容器之间测量了以下基准测试，并使用单核禁用超线程。与 veth 相比，IPVLAN 的 P99 延迟相对较低（越低越好）：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ipvlan-性能-延迟&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;IPVLAN 性能 (延迟)&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_58fdf6153b8057e977662716d0e6b70b.webp 400w,
               /blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_be8511b7d97c062aa90e0a13ee8d5b5a.webp 760w,
               /blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05ygz1tuxj20wa0iu3yo_hu19e74b920267a5e7ed635bee080ced54_65131_58fdf6153b8057e977662716d0e6b70b.webp&#34;
               width=&#34;760&#34;
               height=&#34;443&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      IPVLAN 性能 (延迟)
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;IPVLAN 和 veth 之间的最大吞吐量（越高越好）非常相似，但是通过从内核编译 netfilter/iptables 可以实现非常显着的性能提升。如果您不使用 NodePort 服务并且在离开 Kubernete worker node 时不需要伪装网络流量，则已经可以完全运行您的 Kubernetes 集群。我们将在接下来的几周内提供有关如何运行 iptables 和 kube-proxy 的指南。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-ipvlan-性能&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;IPVLAN 性能&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_9972362f02080a035c74c029ff86c1b8.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_6bcbca9f8d3e5e8b4e39c81b5fd64e3e.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkwgobj20gs0abdfq_hu64ec8352c0baec13ec8b73ba7d13f500_24908_9972362f02080a035c74c029ff86c1b8.webp&#34;
               width=&#34;604&#34;
               height=&#34;371&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      IPVLAN 性能
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;IPVLAN 是 1.4 中的 beta 级功能，有关如何启用和配置该功能的说明，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/ipvlan/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IPVLAN 入门指南&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;dns请求响应的安全性和可见性&#34;&gt;DNS请求/响应的安全性和可见性&lt;/h2&gt;
&lt;p&gt;Cilium 1.4 扩展了现有的 DNS 安全策略模型，以了解各个 pod 发出的 DNS 请求以及它们收到的 DNS 响应。这显着提高了访问集群外部服务的 pod 的安全性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在执行 DNS 查找时，可以将 Pod 限制为具有最小权限，即 pod 可以仅限于查找匹配模式的 DNS 名称，例如 &lt;code&gt;*.domain.com&lt;/code&gt; 。任何超出允许模式的请求都将收到 &lt;code&gt;request refused&lt;/code&gt; DNS 响应。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS 查找后的通信可以限制为特定 pod 接收的 DNS 响应中返回的 IP 地址。这显着降低了受损应用程序的权限，并提高了基于 DNS 的策略规则的可靠性，因为执行逻辑不再需要知道 DNS 名称可以映射到的所有可能的 IP 地址。&lt;/p&gt;
&lt;p&gt;特别是对于云供应商提供的流行存储，消息传递和数据库服务，单个 DNS 名称可以映射到数百或数千个 IP 地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在可以通过 API 访问的 Cilium 授权日志记录层记录 DNS 查找和响应。这提供了 pod 执行的每个 DNS 请求和响应的精确日志。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-dns&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;DNS&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_2c154926a343b88310bf2b9d42643b8f.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_146386a96e365a2751edbebd59f5cef2.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmku6whj217i09c3yk_hue0b5158bbbb8cf9a4422a23d10cc0cb9_29395_2c154926a343b88310bf2b9d42643b8f.webp&#34;
               width=&#34;760&#34;
               height=&#34;163&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      DNS
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;上面的示例显示了一个成功的 DNS 序列，然后是 DNS 服务器响应的对 IP 的 HTTP 请求。这是应用程序的行为方式和允许的方式。后续 HTTP 请求可以使用缓存的 DNS 信息，允许此类请求。DNS 信息将根据记录中的 TTL 信息超时。&lt;/p&gt;
&lt;p&gt;右侧是应用程序在允许的 DNS 策略之外执行 DNS 查找的序列。它还显示，如果应用程序无法执行 DNS 查找，则在应用程序无法在以下位置查找 DNS 名称时，即使 IP 地址实际映射到允许的 DNS 名称，也会阻止任何尝试联系 IP 地址的尝试。一点。&lt;/p&gt;
&lt;h3 id=&#34;策略示例&#34;&gt;策略示例&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;egress-domain-wildcard&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;myService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#39;k8s:io.kubernetes.pod.namespace&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k8s-app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-dns&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;53&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;UDP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchPattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*.domain.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toFQDNs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchPattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*.domain.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;443&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述策略示例授予 pod 或容器通过 kube-dns 执行 DNS 请求的权限，但将允许的 DNS 查找限制为 &lt;code&gt;*.domain.com&lt;/code&gt; 。与模式不匹配的请求将收到 &lt;code&gt;request refused&lt;/code&gt; DNS 响应。它进一步授予端口 443/TCP 上的 pod 出口访问权限到 DNS 响应中返回的 IP。任何尝试访问先前未在 DNS 响应中返回的任何 IP 地址的请求都将被拒绝。&lt;/p&gt;
&lt;p&gt;要开始使用基于 DNS 的策略，请遵循 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/dns/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基于 DNS 的入门指南&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;透明加密和身份验证测试版&#34;&gt;透明加密和身份验证（测试版）&lt;/h2&gt;
&lt;p&gt;为集群内和集群之间的所有服务到服务通信提供透明加密是一种经常被要求的功能。加密允许在不受信任的网络中运行 Kubernetes，透明地加密集群中服务之间的所有通信。身份验证可确保只有受信任的工作节点才能参与集群。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-加密&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;加密&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_1aac3022826d3e5883fe2a32fb7e2f3d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_fe53d4de641de3ed55f905108b103494.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkyg5yj20w80dijrg_hub8b09e1e3f930f38c00cfbf2b0031469_45725_1aac3022826d3e5883fe2a32fb7e2f3d.webp&#34;
               width=&#34;760&#34;
               height=&#34;318&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      加密
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;加密基于 X.509 证书和密钥。目前，使用 PSK，使用 Kubernetes Secret 分发给所有节点。但是，基础结构与 SPIFFE 兼容，并允许在将来的版本中在每个服务级别上使用 SPIFFE 证书提供服务身份验证。数据路径实现使用 Linux 内核的 IPSec 实现，它避免了作为所有服务的一部分运行 sidecar 代理的需要，并确保通过现代处理器中的专用 CPU 指令集有效和自动地使用硬件辅助加密加速。&lt;/p&gt;
&lt;p&gt;透明加密是一种 beta 级功能。要启用该功能，请将 &lt;code&gt;--enable-ipsec&lt;/code&gt; 选项传递给代理，并通过 &lt;code&gt;--ipsec-key-file&lt;/code&gt; 选项或使用 Kubernetes Secret 提供预共享密钥（PSK） 。&lt;/p&gt;
&lt;h2 id=&#34;基于-sockmap-bpf-的-sidecar-加速alpha&#34;&gt;基于 Sockmap BPF 的 sidecar 加速（alpha）&lt;/h2&gt;
&lt;p&gt;正如&lt;a href=&#34;https://www.youtube.com/watch?v=ER9eIXL2_14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在 KubeCon 上宣布的那样&lt;/a&gt; ，我们正在使用 Cilium 1.4 进行本地进程通信加速。&lt;/p&gt;
&lt;p&gt;Sockmap 加速本地进程通信主要用于 sidecar 代理和本地进程之间的通信，但适用于所有本地进程。 















&lt;figure  id=&#34;figure-sockmap-加速了延迟&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;SockMap 加速了延迟&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_5cec80b47c097fe1f896ac4b3337bc5f.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp&#34;
               width=&#34;760&#34;
               height=&#34;454&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      SockMap 加速了延迟
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;启用 sockmap 时，请求数/s 和最大吞吐量都加倍： 















&lt;figure  id=&#34;figure-sockmap-加速了请求处理&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;SockMap 加速了请求处​​理&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_4e9397559eadb93e404c13b1d042aeaf.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_5042f4d7f1b7e702c5118f951cdb3c66.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkb7mbj20w20j00su_huab39bc6ef8339d1db7216a9ecd7794cf_46948_4e9397559eadb93e404c13b1d042aeaf.webp&#34;
               width=&#34;760&#34;
               height=&#34;451&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      SockMap 加速了请求处​​理
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-sockmap-加速了吞吐量&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;SockMap 加速了吞吐量&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_6121247749ab4f339c12f77f17b494f9.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp&#34;
               width=&#34;579&#34;
               height=&#34;343&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      SockMap 加速了吞吐量
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;请注意，所有这些性能数字均为每个 CPU 核心。&lt;/p&gt;
&lt;p&gt;Sockmap 加速是 1.4 中的 alpha 级别功能。可以使用该 &lt;code&gt;--sockops-enable&lt;/code&gt; 选项启用它。&lt;/p&gt;
&lt;h2 id=&#34;新-grafana-仪表板&#34;&gt;新 Grafana 仪表板&lt;/h2&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-grafana&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Grafana&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_27095b32a2ad527a94c5db8d445c0817.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_cdf4e6ff1ef22fe4157dcf87489900d7.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjnwpaj22fu0jywfi_hu5c5880398767345f5915cca0b09044d7_51976_27095b32a2ad527a94c5db8d445c0817.webp&#34;
               width=&#34;760&#34;
               height=&#34;173&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Grafana
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;添加了几个新的 Prometheus 指标，并且可以使用单个命令将新的 Grafana 仪表板部署到任何 Kubernetes 集群中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v1.4/examples/kubernetes/addons/prometheus/monitoring-example.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  id=&#34;figure-grafana&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Grafana&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_81523ae34279bf42cf96802df9acf992.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_ce0dbaa6db5f231c28e1bd439b71f1db.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjiv1kj22f40z6di3_hu251d36ddcf767f5fe758e9a170eace76_71459_81523ae34279bf42cf96802df9acf992.webp&#34;
               width=&#34;760&#34;
               height=&#34;307&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Grafana
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;flannel-整合测试版&#34;&gt;Flannel 整合（测试版）&lt;/h2&gt;
&lt;p&gt;与使用 Flannel CNI 插件配置的现有集群的 Cilium 的安全策略实施和负载平衡功能的用户经常要求与 Flannel 集成。&lt;/p&gt;
&lt;p&gt;Cilium 1.4 引入了一个新的配置选项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;flannel-master-device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cni0&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这使得 Cilium 可以使用 CNI 链接在 flannel 上运行。通过启用以下选项，还可以自动获取工作节点上的现有容器/容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;flannel-manage-existing-containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该选项还需要编辑 Cilium DaemonSet 以启用该 &lt;code&gt;hostPID: true&lt;/code&gt; 选项，以便 Cilium 可以查看附加到现有容器的所有进程。&lt;/p&gt;
&lt;p&gt;Flannel 集成主要用于在现有集群中尝试 Cilium 功能或用于迁移目的。有些大规模有用的功能将无法运行，这包括将源的安全身份嵌入网络数据包的能力，这需要回退到基于 IP 的识别。&lt;/p&gt;
&lt;p&gt;有关详细信息，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/flannel-integration/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flannel 入门指南&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;与其他-cni-的基准测试&#34;&gt;与其他 CNI 的基准测试&lt;/h2&gt;
&lt;p&gt;在过去的两个月里，我们已经接触过很多 Cilium 与其他 CNI 插件的比较。因此，我们针对其他流行的 CNI 插件运行了几个基准测试。&lt;/p&gt;
&lt;p&gt;在我们进入实际数字之前的两个单词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基准测试很难。我们并未声称我们可以在理想配置中配置其他 CNI 插件。如果您有意见，请联系我们，我们很乐意进行调整。这些基准测试的目标是表明，通过改变架构和在堆栈中使用不同的技术，而不是仅仅将一个 CNI 与另一个 CNI 进行比较，可以产生最大的影响。即使是 Cilium，其性能也会因配置而异。&lt;/li&gt;
&lt;li&gt;我们专注于测量网络开销，因此我们在两个本地容器之间运行基准测试，以尽可能多地消除硬件限制。&lt;/li&gt;
&lt;li&gt;目标不是达到最大或最低的数量。我们使用单个 CPU 核心进行测量，限制 CPU 的数量。系统的 CPU 越多那么上限可能会更高。而我们关注在单核下数字之间的差异，而不是测试结果数的最大值。&lt;/li&gt;
&lt;li&gt;通常采取几个重点来做基准。基准测试总是在特定的环境中完成。理解上下文很重要。如果您不清楚我们在这里发布的数字，请联系我们，我们会澄清它。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说了那么多，接下来让我们深入研究数字：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cni-延迟&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CNI 延迟&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_153dbbae5ba90c73ebe2f4ff46da17b6.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_d4547099fa258f8bf367f1fcd5ce910f.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkgwo1j20fz09ta9z_hu314f8bcde0b3d16e1a2ed6a3771a3958_36787_153dbbae5ba90c73ebe2f4ff46da17b6.webp&#34;
               width=&#34;575&#34;
               height=&#34;353&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CNI 延迟
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;以上数字显示了两个容器在单个连接上交换尽可能多的 1 字节请求和响应消息时的各种延迟测量。此测试主要显示特定转发路径是否非常有利于吞吐量而非延迟。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cilium Sockmap 正在大力利用其能够在套接字级别上运行的优势。这仅适用于节点内的连接。&lt;/li&gt;
&lt;li&gt;下一个最佳类别是在 IPVLAN 模式下运行的 Cilium，netfilter/iptables 已完全删除。Cilium 是否在加载安全策略规则时运行是有区别的，但这种差异很小。这是因为用于策略实施的高效的每 CPU 哈希表可以最大限度地减少开销。请注意，此数字已包含负载平衡 BPF 映射查找，因此此模式允许替换其他测试未考虑的 kube-proxy。&lt;/li&gt;
&lt;li&gt;接下来是 Flannel 和 Cilium 以 veth 模式运行。Flannel 是一个使用 Linux 路由表的最小网络插件。极简主义得到了回报，但这也意味着 flannel 不能执行任何策略执行，并且必须依赖于 iptables 或 IPVS 模式的 kube-proxy。由于执行了一些工作以在连接过程中启用策略实施，即使之前未加载任何策略规则，Cilium 也会略微恶化。&lt;/li&gt;
&lt;li&gt;Calico 在我们的测试中显示出略微增加的开销。可能由于添加了更多的 iptables 规则并且正在使用更多的 netfilter 链。我们没有为此特定测试加载任何策略规则到 Calico 但是假设使用 ipset 将允许缩放 OK。不如每个 CPU 哈希表好。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些基准测试的典型敌人是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上下文在内核和用户空间之间切换。这些数字会由于 &lt;strong&gt;很多&lt;/strong&gt; 当L4/L7代理会现实的更糟。&lt;/li&gt;
&lt;li&gt;任何每个数据包开销都会产生巨大影响。冷缓存和数据结构也会产生负面影响。必须遍历的代码越少越好。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cni-rr&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CNI RR&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_5cec80b47c097fe1f896ac4b3337bc5f.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkn6wfj20vs0j0glt_hudab1c7056fb0add85b269aca11fcadd2_69502_dea5f0ee9db6a8649b009b109d45407d.webp&#34;
               width=&#34;760&#34;
               height=&#34;454&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CNI RR
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;上图显示了执行相同基准测试的每秒请求数。每秒请求与延迟相当重叠。对于之前的测试，这些数字是按 CPU 核心测量的。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cni-stream&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;CNI Stream&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_1357166b6d837c917cde0689319cf2c2.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_b4c0415214fa37828f4994be0c467cae.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmjsdpnj20wk0iuaa4_hu15fc1a14d7e718733c1779eddffdb842_40597_1357166b6d837c917cde0689319cf2c2.webp&#34;
               width=&#34;760&#34;
               height=&#34;439&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      CNI Stream
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最后一张图说明了频谱的相反情况。TCP_STREAM 测试试图通过单个 TCP 连接抽取尽可能多的字节。这是内存带宽可以发挥作用的地方，网络硬件或云供应商限制通常可以人为地限制基准。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抛开 Sockmap 的数据，我们可以看到 IPVLAN 模式比其他所有模式都有明显的优势。&lt;/li&gt;
&lt;li&gt;我们预计 Calico 与 Cilium 的数字相似，所以我们可能会错误地配置一些东西。任何帮助表示赞赏。Calico 在 TCP_STREAM 中表现更差并没有多大意义，因为此测试中的 iptables 开销在大量数据中分摊。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-带有-sockmap-的-cni-stream&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;带有 SockMap 的 CNI Stream&#34; srcset=&#34;
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp 400w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_6121247749ab4f339c12f77f17b494f9.webp 760w,
               /blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-1-4/61411417ly1g05xmkrc2cj20g309jgli_hu721a92323b42f22d19b4b9b61590c325_23729_8c3dca11ac76ba16aae9f9fda24d0d54.webp&#34;
               width=&#34;579&#34;
               height=&#34;343&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      带有 SockMap 的 CNI Stream
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;将 Sockmap 添加回图片证明了在套接字级别进行网络连接的性能优势。同样，这种好处仅在本地进程之间获得，因为当 sidecar 代理生效时或者当服务被调度到同一节点上以便改进本地通信时，它经常发生。&lt;/p&gt;
&lt;h2 id=&#34;用-cos-支持-gke&#34;&gt;用 COS 支持 GKE&lt;/h2&gt;
&lt;p&gt;一个全新的 &lt;a href=&#34;https://docs.cilium.io/en/v1.4/gettingstarted/k8s-install-gke/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;指南&lt;/a&gt; 记录了如何使用 COS 在 GKE 上运行 Cilium。一个全新的 &lt;a href=&#34;https://github.com/cilium/cilium/tree/master/examples/kubernetes/node-init&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;node-init DaemonSet&lt;/a&gt; 可以通过安装 BPF 文件系统并重新配置 kubelet 以在 CNI 模式下运行来准备 GKE 节点。使用 &lt;a href=&#34;https://github.com/cilium/cilium-etcd-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cilium-etcd-operator&lt;/a&gt; 提供 kvstore 要求，同时保持安装简单。&lt;/p&gt;
&lt;h2 id=&#34;14-发布亮点&#34;&gt;1.4 发布亮点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多集群&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;增加全球服务，通过注释实现跨多个 Kubernetes 服务的 Kubernetes 服务。 （测试版）&lt;/li&gt;
&lt;li&gt;许多改进的安装指南，包括在使用 &lt;a href=&#34;https://github.com/cilium/cilium-etcd-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cilium-etcd-operator&lt;/a&gt; 时自动提取 SSL 证书的工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;透明加密（测试版）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;使用带有PSK的IPsec将所有pod/host加密到pod/host通信。&lt;/li&gt;
&lt;li&gt;IPv4 和 IPv6&lt;/li&gt;
&lt;li&gt;PSK 通过 Kubernetes Secret 配置&lt;/li&gt;
&lt;li&gt;无需修改 app 或 pod。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IPVLAN 支持（测试版）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;利用 IPVLAN 的新的替代数据路径模式取代了 veth 对的使用，以改善延迟和性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS请求/响应授权&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;现在，基于每个服务执行的实际 DNS 请求和响应，强制执行基于 FQDN 的安全策略。&lt;/li&gt;
&lt;li&gt;能够指定服务可以执行的 DNS 请求的策略。&lt;/li&gt;
&lt;li&gt;用于查询各个端点执行的 FQDN 主机名查找的 API 和 CLI&lt;/li&gt;
&lt;li&gt;能够在代理还原上恢复 FQDN 映射以进行持久映射&lt;/li&gt;
&lt;li&gt;每个端点可配置的最小 TTL 和最大 FQDN 主机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flannel 整合（测试版）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;能够在 flannel 上运行 Cilium。Flannel 提供网络，Cilium 提供负载平衡和策略实施。&lt;/li&gt;
&lt;li&gt;能够挂钩现有的 Flannel 部署而无需重新启动任何 pod。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于 AWS 元数据的策略实施（alpha）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;能够根据 AWS 元数据指定策略规则，例如 EC2 标签，安全组名称，VPC 名称，子网名称等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他指标和监控&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;联网&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;通过 kvstore 实现新的简单 PodCIDR 路由传播模式。通过 --auto-direct-node-routes`启用。&lt;/li&gt;
&lt;li&gt;现在，对于新安装，IPv6 现在已禁用。现有的 ConfigMaps 将继续当前行为。启用通过 &lt;code&gt;--enable-ipv6=true&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;能够在不使用该 &lt;code&gt;--enable-ipv4=false&lt;/code&gt; 选项 分配任何 IPv4 地址的情况下运行仅 IPv6 集群。&lt;/li&gt;
&lt;li&gt;改进了负载均衡器的持久行为&lt;/li&gt;
&lt;li&gt;BPF sockmap 支持加速本地进程通信。可通过选项 &lt;code&gt;--sockops-enable&lt;/code&gt; （alpha）获得&lt;/li&gt;
&lt;li&gt;从 IP 地址识别的解耦端点，以支持任意 IP 寻址模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率和规模&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;大大提高了 CiliumEndpoint CRD 的可扩展性。不再需要为大型部署禁用 CEP。&lt;/li&gt;
&lt;li&gt;引入基于CIDR/DNS的规则的每节点本地标识，不需要集群或全局范围。在节点 23 上执行 DNS 请求的 pod 导致该 pod 的白名单 IP 不再对集群中的其他节点产生任何影响。&lt;/li&gt;
&lt;li&gt;现在，默认情况下禁用 IPv6 以减少小型部署中的内存占用。&lt;/li&gt;
&lt;li&gt;现在，默认情况下禁用 BPF 映射预分配，以减少小型部署中的内存占用。&lt;/li&gt;
&lt;li&gt;用于代理和客户端命令的单个二进制文件以减少容器图像大&lt;/li&gt;
&lt;li&gt;将 bugtool 编译为静态二进制文件&lt;/li&gt;
&lt;li&gt;新的 cilium-operator 提供单例任务，如 CEP 垃圾收集。&lt;/li&gt;
&lt;li&gt;CNI ADD 上的同步 pod 标签检索。这可以稍微降低 pod 调度速率，但避免在没有 init 策略的情况下启动 pod 的策略丢失。&lt;/li&gt;
&lt;li&gt;状态探测器现在同时收集状态以提高准确性。&lt;/li&gt;
&lt;li&gt;终止时更好的信号处理和新的 terminationGracePeriodSeconds 默认值为 1 秒，以最大限度地减少代理的停机时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;增加了对 Kubernetes 1.13 的支持&lt;/li&gt;
&lt;li&gt;支持自动挂载 BPF 文件系统的新 CRI-O 版本&lt;/li&gt;
&lt;li&gt;新的 NodeInit DaemonSet 为 Cilium 安装自动准备 GKE 节点。这样可以使用 COS 和自动缩放。&lt;/li&gt;
&lt;li&gt;当 cilium 不管理 kube-dns 时，cilium-operator 现在会自动重启 kube-dns。这简化了托管 Kubernetes 产品的初始安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Istio&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;改进了 Istio 集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;观测&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;新指标：kvstore 操作，代理上游/处理延迟，转发和丢弃字节，节点事件，节点数，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;标准安装现在使用 &lt;a href=&#34;https://github.com/cilium/cilium-etcd-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cilium-etcd-operator&lt;/a&gt; ，不再依赖于提供外部 kvstore 的用户。&lt;/li&gt;
&lt;li&gt;新的 GKE 指南，包括 COS 支持&lt;/li&gt;
&lt;li&gt;使用 eksctl 的简化 EKS 指南&lt;/li&gt;
&lt;li&gt;使用自动化工具改进了集群网格指南&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;升级说明&#34;&gt;升级说明&lt;/h2&gt;
&lt;p&gt;像往常一样，请按照&lt;a href=&#34;https://cilium.readthedocs.io/en/v1.4/install/upgrade/#upgrading-minor-versions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;升级指南&lt;/a&gt; 升级您的 Cilium 部署。随意在 &lt;a href=&#34;https://cilium.herokuapp.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack&lt;/a&gt; 上 ping 我们。&lt;/p&gt;
&lt;h2 id=&#34;发布&#34;&gt;发布&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;发行说明和二进制文件： &lt;a href=&#34;https://github.com/cilium/cilium/releases/tag/1.4.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1.4.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;容器 image： &lt;code&gt;docker.io/cilium/cilium:v1.4.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cilium 1.3：支持 Envoy、Cassandra 和 Memcached 的 Go 语言扩展</title>
      <link>https://cloudnative.to/blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/</link>
      <pubDate>Tue, 06 Nov 2018 12:20:51 +0800</pubDate>
      <guid>https://cloudnative.to/blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-cilium-kubernetes&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Cilium Kubernetes&#34; srcset=&#34;
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwqjul334zj30je07p0t1_hu8927cc2bd94d87da94805321119c1a29_21818_c623a4cc26b25c537dc0a07694b69fd2.webp 400w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwqjul334zj30je07p0t1_hu8927cc2bd94d87da94805321119c1a29_21818_29ce53db41a0a0cf82e9bdc3eb8a97f2.webp 760w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwqjul334zj30je07p0t1_hu8927cc2bd94d87da94805321119c1a29_21818_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwqjul334zj30je07p0t1_hu8927cc2bd94d87da94805321119c1a29_21818_c623a4cc26b25c537dc0a07694b69fd2.webp&#34;
               width=&#34;698&#34;
               height=&#34;277&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Cilium Kubernetes
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://cilium.io/blog/2018/10/23/cilium-13-envoy-go/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们很高兴地宣布 Cilium 1.3 发布了。这个版本加入了几个新特性。主要的亮点是实现了 Cassandra 和带有策略执行能力的 Memcached 协议解析器，作为&lt;a href=&#34;https://github.com/envoyproxy/envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;的 Go 语言扩展包。&lt;/p&gt;
&lt;p&gt;和往常一样，整个 Cilium 社区的开发者贡献巨大，他们在 1.2 到 1.3 版本的这段时间贡献了 785 个提交。&lt;/p&gt;
&lt;h2 id=&#34;什么是-envoy-的-go-语言扩展&#34;&gt;什么是 Envoy 的 Go 语言扩展？&lt;/h2&gt;
&lt;p&gt;从 1.0 版本开始，我们一直依赖&lt;a href=&#34;https://github.com/envoyproxy/envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;处理所有的 HTTP、gRPC 以及 HTTP 的派生如 Elasticsearch 的请求。社区讨论如何扩大支持 7 层协议的范围，Envoy 作为推动未来协议补充的首选平台是显而易见的。焦点迅速转移到寻找简化 Envoy 可扩展性的方法，并且允许重用现有的开源项目，如 CNCF 项目&lt;a href=&#34;https://vitess.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vitess&lt;/a&gt;。于是实现 Envoy 的 Go 扩展的想法就诞生了。&lt;/p&gt;
&lt;p&gt;在 Cilium 1.3 中，我们引入了 Envoy 的 Go 扩展作为其 Beta 特性。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-envoy-golang-extension-architecture&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Envoy Golang Extension Architecture&#34; srcset=&#34;
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwql07xp02j30lp0buaay_huf05ead5c8973182e89d3d74e94fdf282_40716_462a96612ed76edb1df81a1a449d1b12.webp 400w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwql07xp02j30lp0buaay_huf05ead5c8973182e89d3d74e94fdf282_40716_161114a896a05db10634dbb722a585f1.webp 760w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwql07xp02j30lp0buaay_huf05ead5c8973182e89d3d74e94fdf282_40716_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwql07xp02j30lp0buaay_huf05ead5c8973182e89d3d74e94fdf282_40716_462a96612ed76edb1df81a1a449d1b12.webp&#34;
               width=&#34;760&#34;
               height=&#34;415&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Envoy Golang Extension Architecture
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**扩展的透明注入：**在 Cilium 的帮助下，连接被透明地重定向到 Envoy，而不需要修改应用程序或 pod。重定向基于目标端口配置，可以根据 labels、IPs、DNS 以及 ingress 和 egress 连接的服务名称限定到源或目标服务，并通过扩展的名称将连接映射到扩展。重定向是通过 CiliumNetworkPolicy CRD 或 REST API 配置的。Envoy 可以被配置为在每个 pod 中作为 sidecar 或作为每个 node 的独立代理运行。&lt;/li&gt;
&lt;li&gt;**完全分布式：**Go 扩展完全分布在每个 Envoy 节点或 pod 内部，不需要为一个数据处理的集中化控制面板。当然，go 扩展本身可以调用任意的外部控制面板组件来报告遥测数据或验证请求。&lt;/li&gt;
&lt;li&gt;**动态扩展映射：**Go 扩展被设计为共享库提供给 Envoy。Cilium 可以根据设置好的重定向自动加载相应的 Go 扩展来配置 Envoy，并在连接数据时调用它。未来的版本将支持在运行时更新和重新加载扩展，而无需重启 Envoy 并且也不会丢失连接状态。&lt;/li&gt;
&lt;li&gt;**通过 CRD 配置扩展：**通过 CRD 或 REST API 使用通用键值对配置 Go 扩展。这允许传递如安全策略、安全令牌或其他的配置，而无需让 Envoy 知道。&lt;/li&gt;
&lt;li&gt;**通用访问日志：**与配置类似，扩展可以返回通用键值对，这些键值对将提取的可见性传递到访问日志层。&lt;/li&gt;
&lt;li&gt;**沙盒化：**沙盒确保任何解析器的不稳定性都不会破坏 Envoy 的核心。受 Matt Klein 发表的文章&lt;a href=&#34;https://medium.com/@mattklein123/exceptional-go-1dd1488a6a47&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exceptional Go&lt;/a&gt;启发，解析器被容许 panic 或抛出异常。当 panic 发生时，信息被记录到访问日志中，TCP 连接与被关闭的请求关联。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cilium-是什么&#34;&gt;Cilium 是什么？&lt;/h2&gt;
&lt;p&gt;Cilium 是一个开源软件，可以透明地提供和保护部署在诸如 Kubernetes、Docker 和 Mesos 等 Linux 容器管理平台的应用程服务之间的网络和 API 连接。&lt;/p&gt;
&lt;p&gt;Cilium 的基础是一种新的 Linux 内核技术 BPF，它支持在 Linux 内部动态的注入安全、可见性和网络控制逻辑。除了提供传统的网络层安全，BPF 的灵活性还让 API 和流程级别的安全，保护容器或 pod 间通信成为了可能。因为 BPF 在 Linux 内核中运行，Cilium 的安全策略可以在不修改程序代码或容器配置的情况下使用和更新。&lt;/p&gt;
&lt;p&gt;有关 Cilium 更详细的介绍请参见**&lt;a href=&#34;https://cilium.readthedocs.io/en/v1.3/intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Cilium&lt;/a&gt;**&lt;/p&gt;
&lt;h2 id=&#34;envoy-是什么&#34;&gt;Envoy 是什么？&lt;/h2&gt;
&lt;p&gt;Envoy 是一个 7 层代理和通信总线，被设计用于大型的面向服务的架构。这个项目诞生于以下理念：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网络应该对应用程序透明。当网络和应用程序出现问题时，应该很容易确定问题的根源。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你可以通过 Envoy 的文档 &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/intro/what_is_envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is Envoy&lt;/a&gt;了解更多关于 Envoy 的内容。&lt;/p&gt;
&lt;h1 id=&#34;怎样编写-envoy-的-go-语言扩展&#34;&gt;怎样编写 Envoy 的 Go 语言扩展&lt;/h1&gt;
&lt;p&gt;编写 Envoy 的 Go 扩展很简单。为说明这一点，我们将为 R2-D2 控制协议实现一个基本的协议解析器，并实现过滤逻辑用来排除任何包含字符串”C-3PO”的控制请求。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-envoy-golang-extension-architecture&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Envoy Golang Extension Architecture&#34; srcset=&#34;
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwvz4inau1j30kg09waal_hu97114ae48a52a816f5620d5d3457241c_28551_0c2ad15ae5886cb75022562039cfbfb2.webp 400w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwvz4inau1j30kg09waal_hu97114ae48a52a816f5620d5d3457241c_28551_69fb463ea257605e293f31dfa8e481cf.webp 760w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwvz4inau1j30kg09waal_hu97114ae48a52a816f5620d5d3457241c_28551_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwvz4inau1j30kg09waal_hu97114ae48a52a816f5620d5d3457241c_28551_0c2ad15ae5886cb75022562039cfbfb2.webp&#34;
               width=&#34;736&#34;
               height=&#34;356&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Envoy Golang Extension Architecture
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;要实现扩展的主要 API 是&lt;code&gt;OnData()&lt;/code&gt;函数，当 Envoy 收到通过&lt;code&gt;CiliumNetworkPolicy&lt;/code&gt;映射到扩展连接的数据时，就会调用这个函数。函数必须解析数据并返回下面的断言之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MORE&lt;/strong&gt;：解析器需要更多的字节来继续解析。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PASS&lt;/strong&gt;：传递&lt;em&gt;n&lt;/em&gt;字节数据流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DROP&lt;/strong&gt;：删除&lt;em&gt;n&lt;/em&gt;字节数据流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;INJECT&lt;/strong&gt;：向指定的方向注入&lt;em&gt;n&lt;/em&gt;字节的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ERROR&lt;/strong&gt;：发生了解析错误，连接必须关闭。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NOP&lt;/strong&gt;：什么也没发生。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了注册扩展，需要创建一个必须实现&lt;code&gt;Create()&lt;/code&gt;函数的解析器工厂。当 Envoy 建立了一个新的连接并使用解析器时就会调用该函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/cilium/cilium/proxylib/proxylib&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;connection&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Connection&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;OnData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;endStream&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dataArray&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[][]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;OpType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dataArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;msgLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msgLen&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MORE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// No delimiter, request more data
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;msgStr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msgLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;msgLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Inlcude the &amp;#34;\r\n&amp;#34; in the request
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;reply&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;PASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msgLen&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Pass responses without additional parsing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msgStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;C-3PO&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DROP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msgLen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;PASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msgLen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;factory&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;connection&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Parser&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;proxylib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;RegisterParserFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;r2d2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，将新的解析器导入到 proxylib 包中。&lt;code&gt;libcilium.so&lt;/code&gt;将包含解析器并被 Envoy 加载。编辑文件&lt;code&gt;proxylib/proxylib.go&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/cilium/cilium/proxylib/r2d2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的示例省略了扩展配置、集成到策略代码库以及访问日志等内容。学习如何编写 Go 扩展，请参阅指南&lt;a href=&#34;https://cilium.readthedocs.io/en/v1.3/envoy/extensions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy Go Extensions&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;cassandra-支持beta&#34;&gt;Cassandra 支持（Beta）&lt;/h1&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cassandra-logo&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Cassandra Logo&#34; srcset=&#34;
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc47hgkbj30io07edgp_hu77121d70581001ee81a80228e08f3b22_27568_e4a63e46f573b2ab89d5a5afaa63374e.webp 400w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc47hgkbj30io07edgp_hu77121d70581001ee81a80228e08f3b22_27568_25def539110fa253d028863cc3b1ae18.webp 760w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc47hgkbj30io07edgp_hu77121d70581001ee81a80228e08f3b22_27568_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc47hgkbj30io07edgp_hu77121d70581001ee81a80228e08f3b22_27568_e4a63e46f573b2ab89d5a5afaa63374e.webp&#34;
               width=&#34;672&#34;
               height=&#34;266&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Cassandra Logo
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apache/cassandra&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cassandra&lt;/a&gt; 是一个流行的 NoSQL 数据库管理系统。它通常被多个服务大规模的访问并在团队间共享。Cilium 1.3 引入了对 Apache &lt;a href=&#34;https://github.com/apache/cassandra&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cassandra&lt;/a&gt; 协议的支持，并提供了可见性和策略执行能力。&lt;/p&gt;
&lt;p&gt;Cassandra 的 Go 扩展能够在以下协议字段上提供可见性和执行能力：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;query_action&lt;/strong&gt;：这个行为在数据库的&lt;code&gt;SELECT&lt;/code&gt;， &lt;code&gt;INSERT&lt;/code&gt;， &lt;code&gt;UPDATE&lt;/code&gt;等操作上执行，字段总是精确匹配。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;query_table&lt;/strong&gt;：查询执行的表，以正则表达式进行匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;例子empire-如何通过表限制-cassandra-访问&#34;&gt;例子：Empire 如何通过表限制 Cassandra 访问&lt;/h3&gt;
&lt;p&gt;下面的示例展示了 Empire 如何暴露有限的访问给运行在端口 9042 的 Empire Cassandra 集群。Outposts 被标签&lt;code&gt;app=empire-outpost&lt;/code&gt;标识，并具有以下权限：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT&lt;/code&gt; 操作在表&amp;quot;system.&lt;em&gt;”和”system_schema.&lt;/em&gt;“上执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INSERT&lt;/code&gt;操作在表&amp;quot;attendance.daily_records&amp;quot;上执行。注意 outposts 不能从这些表读取，因此不能从其他 outposts 读取每日记录。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow only permitted requests to empire Cassandra server&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;secure-empire-cassandra&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;specs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cass-server&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;empire-outpost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;9042&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7proto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cassandra&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;query_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;query_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;system\\..*&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;query_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;query_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;system_schema\\..*&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;query_action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;insert&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;query_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;attendance.daily_records&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是一个简单的例子，更多复杂示例请参阅 &lt;a href=&#34;https://cilium.readthedocs.io/en/v1.3/gettingstarted/cassandra/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cassandra getting started guide &lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;memcached-支持beta&#34;&gt;Memcached 支持（Beta）&lt;/h1&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-memcached-logo&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Memcached Logo&#34; srcset=&#34;
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc9b9qp7j30g607gt97_hu1439491928f289d7198cace2b4e837ea_17102_6f14f4a5c6663843d0ffc53586fca2f7.webp 400w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc9b9qp7j30g607gt97_hu1439491928f289d7198cace2b4e837ea_17102_f9145b8d8cb597412a8d371fad0964ae.webp 760w,
               /blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc9b9qp7j30g607gt97_hu1439491928f289d7198cace2b4e837ea_17102_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium-13-go-extensions-for-envoy-cassandra-memcached-support/006tNbRwly1fwxc9b9qp7j30g607gt97_hu1439491928f289d7198cace2b4e837ea_17102_6f14f4a5c6663843d0ffc53586fca2f7.webp&#34;
               width=&#34;582&#34;
               height=&#34;268&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Memcached Logo
    &lt;/figcaption&gt;&lt;/figure&gt;

Memcached 是一种流行的基于内存的分布式缓存，通常用于缓存或在服务之间共享数据。随着 memcached 解析器的 golang 扩展加入 Envoy，Cilium 现在可以执行安全规则去限制 memcached 客户端的某些命令，比如读写，也可以根据 key 前缀进行限制。&lt;/p&gt;
&lt;h2 id=&#34;例子rebels-如何保护共享的-memcached-服务&#34;&gt;例子：Rebels 如何保护共享的 memcached 服务&lt;/h2&gt;
&lt;p&gt;在下面的示例中，Rebels 运行了一个标签为&lt;code&gt;app=memcached&lt;/code&gt;的 memcached 服务，几个服务与 memcached 交互并应用不同的规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;function=fleet-maintenance&lt;/code&gt; 标识的维护服务被授予对前缀为&lt;code&gt;alliance/fleet&lt;/code&gt;的所有 key 的读写权限。禁止访问任何其他 key。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;function=fleet-monitoring&lt;/code&gt;标识的监控服务仅对前缀为&lt;code&gt;alliance/fleet&lt;/code&gt;的 key 授予读权限。禁止对前缀中的 key 进行写入访问或访问前缀之外的任何 key。&lt;/li&gt;
&lt;li&gt;所有 Jedis 被标签&lt;code&gt;role=jedi&lt;/code&gt;标识，拥有完整的 Memcached 服务，可以访问所有的 key。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Secure the Rebel memcached service&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;secure-rebel-alliance-memcache&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;specs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;memcached&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;fleet-maintanence&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;11211&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7proto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;memcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;writeGroup&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;keyPrefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;alliance/fleet/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;keyPrefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;alliance/fleet/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;fleet-monitoring&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;11211&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7proto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;memcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;keyPrefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;alliance/fleet/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;role&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;jedi&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;11211&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7proto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;memcache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;l7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 memcached 的完整示例，请参阅 &lt;a href=&#34;https://cilium.readthedocs.io/en/v1.3/gettingstarted/memcached/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Memcached getting started guide&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;社区&#34;&gt;社区&lt;/h1&gt;
&lt;h2 id=&#34;linux-基金会core-infrastructure-initiative最佳实践&#34;&gt;Linux 基金会&amp;quot;Core Infrastructure Initiative&amp;quot;最佳实践&lt;/h2&gt;
&lt;p&gt;我们致力于在开放和最好的开源实践中开发 Cilium，包括对安全的坚定承诺。我们很高兴地宣布，我们已经完成了所有工作，获得了 Linux 基金会 &lt;a href=&#34;https://www.coreinfrastructure.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Core Infrastructure Initiative&lt;/a&gt;的 &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CII Best Practices&lt;/a&gt;殊荣。在 &lt;a href=&#34;https://www.coreinfrastructure.org/programs/badge-program/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;了解更多关于奖章的信息。&lt;/p&gt;
&lt;h2 id=&#34;特别兴趣组sig介绍&#34;&gt;特别兴趣组（SIG）介绍&lt;/h2&gt;
&lt;p&gt;社区的关注点越来越多样化。为了确保项目的可伸缩性，我们正式引入了特殊兴趣组（SIGs）来帮助提供一些组织结构。已经创建了以下的 SIGs：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Datapath&lt;/strong&gt;： (#sig-datapath) 所有 BPF 和 Linux 内核相关的数据通路代码拥有者。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;： (#sig-docs) 所有文档相关的讨论。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Envoy&lt;/strong&gt;： (#sig-envoy) Envoy，Istio 和所有 7 层协议解析器的维护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Policy&lt;/strong&gt;： (#sig-policy) 所有策略相关的主题。这个 SIG 负责所有与安全相关的 API 和实现逻辑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Release Management&lt;/strong&gt;： (#launchpad) 负责发布管理和向后移植的过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任何人都可以建立额外的 SIGs。这个过程很简单有&lt;a href=&#34;https://cilium.readthedocs.io/en/v1.3/community/#how-to-create-a-sig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;文档说明&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;13-版本新特性&#34;&gt;1.3 版本新特性&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Envoy 的 Go 语言扩展&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;令人兴奋的全新的 Envoy Go 扩展 API，包括通用配置和访问日志 API（Beta 版本）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cassandra 和 Memcached 协议支持&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;使用新的 Envoy Go 扩展实现了 Cassandra 和 Memcached 的新协议解析器。这两个解析器都使用精确匹配、前缀匹配和正则表达式为操作类型和键/表名提供可见性和强制安全策略。（Beta）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;为DNS/FQDN策略规则提供TTLs支持。&lt;/li&gt;
&lt;li&gt;引入 kube-dns、coredns 和 etcd 操作符的标识。&lt;/li&gt;
&lt;li&gt;新的安全标识&amp;quot;unmanaged&amp;quot;代表没有被 Cilium 管理的 pod。&lt;/li&gt;
&lt;li&gt;改进的安全实体“集群”，允许为集群中的所有 pod 定义策略（已管理、未管理和主机网络的）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;额外的遥测指标和监控&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;新的&amp;quot;cilium metrics list&amp;quot;命令通过 CLI 查看 metrics 列表。&lt;/li&gt;
&lt;li&gt;许多额外的 metrics：连接跟踪垃圾回收，Kubernetes 资源事件，IPAM，再生节点，服务，错误和警告计数器。&lt;/li&gt;
&lt;li&gt;具有更高效的编解码协议的新监控接口。默认情况下用于较老的客户端。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络改进&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;将连接跟踪表划分为 TCP 和非 TCP，以更好地处理每个协议的长短连接的混合。&lt;/li&gt;
&lt;li&gt;通过 ConfigMap 描述连接表大小的能力。&lt;/li&gt;
&lt;li&gt;通过 NodePort 和 HostPort 更好的伪装流量行为，容许 pods 可以查看原始源 IP。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全键值存储弹性&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;引入了在任何状态丢失后立即重新构造键值存储内容的能力。允许从备份中恢复 etcd，或者在运行的集群中完全删除它，并影响最小。(Beta)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率和扩展&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;在计算独立 endpoint 策略的成本方面有重大改进。关于这方面的工作还在继续。&lt;/li&gt;
&lt;li&gt;新的宽限期，通过工作负载更改身份最小化连接影响。&lt;/li&gt;
&lt;li&gt;更高效的安全身份分配算法。&lt;/li&gt;
&lt;li&gt;新的通用框架检测和忽略 Kubernetes 事件通知，Cilium 不需要动作。&lt;/li&gt;
&lt;li&gt;在避免不必要的 BPF 编译方面的改进，以减少由此导致的 CPU 负载。初始化 BPF 模板以避免全编译。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;增加对 Kubernetes 1.12 的支持&lt;/li&gt;
&lt;li&gt;为 CiliumEndpoints CRD 自定义列（需要 Kubernetes 1.11 支持）&lt;/li&gt;
&lt;li&gt;为 ulibc 的兼容性从 cilium-cni 移除 cgo&lt;/li&gt;
&lt;li&gt;移除对 Kubernetes 1.7 的支持&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;新的 Ubuntu 18.04 手册&lt;/li&gt;
&lt;li&gt;对最新的 BPF 运行时特性的覆盖，例如 BTF（BPF Type Format）&lt;/li&gt;
&lt;li&gt;针对运行多主机网络的虚拟机/主机防火墙需求的文档&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;长期稳定版本 (LTS)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;1.3 已经声明为 LTS 版本，在后续的 6 个月将作为向后移植的版本继续支持&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;更新指导&#34;&gt;更新指导&lt;/h2&gt;
&lt;p&gt;请查阅&lt;a href=&#34;https://cilium.readthedocs.io/en/v1.3/install/upgrade/#upgrading-minor-versions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;upgrade guide&lt;/a&gt;去更新你的 Cilium 部署，可以随时在&lt;a href=&#34;http://cilium.io/slack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack&lt;/a&gt;上联系我们。&lt;/p&gt;
&lt;h2 id=&#34;发布&#34;&gt;发布&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;发布记录和二进制文件 &lt;a href=&#34;https://github.com/cilium/cilium/releases/tag/1.3.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1.3.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;容器镜像： &lt;code&gt;docker.io/cilium/cilium:v1.3.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cilium 1.2 发布—DNS 安全性策略、EKS 支持、ClusterMesh、kube-router 集成等</title>
      <link>https://cloudnative.to/blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/</link>
      <pubDate>Mon, 27 Aug 2018 19:52:29 +0800</pubDate>
      <guid>https://cloudnative.to/blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/</guid>
      <description>&lt;p&gt;















&lt;figure  id=&#34;figure-cilium&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Cilium&#34; srcset=&#34;
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqoaw4wj310o0qegwa_hub354935b8f37ca538501760c3d465a37_132898_66d48d72c8aad20c794c493b69bf630c.webp 400w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqoaw4wj310o0qegwa_hub354935b8f37ca538501760c3d465a37_132898_7d267e0f0b33efd1e559cc3cb9ce93c3.webp 760w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqoaw4wj310o0qegwa_hub354935b8f37ca538501760c3d465a37_132898_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqoaw4wj310o0qegwa_hub354935b8f37ca538501760c3d465a37_132898_66d48d72c8aad20c794c493b69bf630c.webp&#34;
               width=&#34;760&#34;
               height=&#34;547&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Cilium
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://cilium.io/blog/2018/08/21/cilium-12/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们很高兴地宣布推出 Cilium 1.2。该版本引入了几个新功能实现了 Cilium 用户和社区成员最迫切想要的功能。其中最吸引人的功能之一是引入基于 DNS 名称的安全策略，目的是保护对集群外服务的访问。另一个最受关注的问题是加入了连接和保护多个 Kubernetes 集群的能力。我们将 ClusterMesh 功能进入 Alpha 版本。它可以连接和保护在多个 Kubernetes 集群中运行的 pod。Kube-router 与 Cilium 的集成同等重要。DigitalOcean 团队的努力使 kube-router 提供 BGP 网络与 Cilium 提供的基于 BPF 的安全性和负载均衡相结合。整个 Cilium 开发者社区贡献者总数已增加到 85 个，在 1.1 到 1.2 版本内贡献了 579 个 PR。&lt;/p&gt;
&lt;h2 id=&#34;cilium-是什么&#34;&gt;Cilium 是什么？&lt;/h2&gt;
&lt;p&gt;Cilium 是一个开源软件，用于在 Kubernetes、Docker 和 Mesos 等 Linux 容器管理平台部署的应用程序服务之间提供透明连接、保护网络和 API。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohq4pg7kj31kw0cjtcq_hu401f256a9bbed7b3eda53a74f591e37c_42135_08dc42985d665778f483781fc0c444c0.webp 400w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohq4pg7kj31kw0cjtcq_hu401f256a9bbed7b3eda53a74f591e37c_42135_ca8a662cb4bba6e442cac5ccdeb10a76.webp 760w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohq4pg7kj31kw0cjtcq_hu401f256a9bbed7b3eda53a74f591e37c_42135_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohq4pg7kj31kw0cjtcq_hu401f256a9bbed7b3eda53a74f591e37c_42135_08dc42985d665778f483781fc0c444c0.webp&#34;
               width=&#34;760&#34;
               height=&#34;167&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Cilium 是基于一种叫 BPF 的新内核技术，它使得能够在 Linux 自身内部动态插入强大的安全性、可见性和网络控制逻辑。除了提供传统的网络级安全性之外，BPF 的灵活性还可以在 API 和进程级别实现安全性，以保护容器或 pod 内的通信。&lt;/p&gt;
&lt;p&gt;有关 Cilium 的更详细的介绍，请参阅&lt;a href=&#34;http://docs.cilium.io/en/v1.1/intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium 简介&lt;/a&gt;部分。&lt;/p&gt;
&lt;h2 id=&#34;12-版本的重要功能&#34;&gt;1.2 版本的重要功能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;基于DNS/FQDN的安全策略
&lt;ul&gt;
&lt;li&gt;基于FQDN/DNS命名定义网络安全规则，表示允许连接到外部服务。例如，允许访问foo.com。（处于Beta版）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;支持 AWS EKS
&lt;ul&gt;
&lt;li&gt;为管理 Kubernetes 集成量身定制的 etcd operator，消除了对需要外部 kvstore 的依赖。（处于 Beta 版）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clustermesh（集群间连接）
&lt;ul&gt;
&lt;li&gt;跨多个 Kubernetes 集群的 pod 间网络连接。（处于 Alpha 版）&lt;/li&gt;
&lt;li&gt;跨集群的基于 label 的网络安全策略实施，例如允许 cluster1 中的 pod foo 与 cluster2 中的 pod bar 通信。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;为支持 BPF 集成 Kube-route
&lt;ul&gt;
&lt;li&gt;与 kube-router 一起协作运行以启用 BGP 网络。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基于节点发现的 KV 存储
&lt;ul&gt;
&lt;li&gt;在非 Kubernetes 环境中启用自动节点发现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;负载均衡
&lt;ul&gt;
&lt;li&gt;支持一致的后端 selection 用于服务后端扩缩容&lt;/li&gt;
&lt;li&gt;支持基于服务label/name的策略以及L4规则&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;高效性 &amp;amp; 扩缩容
&lt;ul&gt;
&lt;li&gt;对于大型和多集群规模的环境，安全身份认证空间从 16bits 增加到 24bits。&lt;/li&gt;
&lt;li&gt;首次实现基于 BPF 的数据路径通知聚合。&lt;/li&gt;
&lt;li&gt;取得持续高效的 CPU 利用进展。&lt;/li&gt;
&lt;li&gt;自动检测 underlying 网络的 MTU。&lt;/li&gt;
&lt;li&gt;禁用 DSR 时使用本地 service ID 分配以提高负载均衡可伸缩性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;文档
&lt;ul&gt;
&lt;li&gt;新的 AWS EKS 安装指南。&lt;/li&gt;
&lt;li&gt;参考 kubespray 安装指南。&lt;/li&gt;
&lt;li&gt;新的简化安装和升级说明。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基于-dns-的安全策略&#34;&gt;基于 DNS 的安全策略&lt;/h2&gt;
&lt;p&gt;在 Kubernetes 集群中运行的服务通常与集群外部的一系列服务进行交互。常见示例包括 SaaS 服务，如 S3、RDS、DynamoDB 等。基于 API 的服务，例如 Google 地图、Salesforce API、Twilio 等。或自托管服务，如 Oracle 数据库集群、基于 Windows 的应用程序等。到目前为止，Cilium 支持基于 CIDR 的策略，以便与此类外部服务进行交互。然而，基于 CIDR 的策略很难定义和维护，因为服务的 IP 地址可能经常发生变化。Cilium 1.2 现在支持基于 DNS 名称的特定策略。当前实现支持基于其 FQDN 的白名单外部服务的核心实例。考虑到 DNS 解决方案（例如 TTL、CNAME 等）和相关策略要求（例如&lt;code&gt;*.google.com&lt;/code&gt;等基于通配符的规范）的复杂性，对于基于 DNS 的综合策略，后续版本中还有更多工作要做。&lt;/p&gt;
&lt;h2 id=&#34;示例允许访问-my-remote-servicecom&#34;&gt;示例：允许访问 my-remote-service.com&lt;/h2&gt;
&lt;p&gt;下面的简单示例演示了如何定义网络安全策略，该策略允许所有 label 为&lt;code&gt;app = test-app&lt;/code&gt;的 pod 通过 kube-dns 解析 DNS 名称，并向服务&lt;code&gt;my-remote-service.com&lt;/code&gt;发出外部请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;to-fqdn-example&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;test-app&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toFQDNs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;my-remote-service.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;k8s:io.cilium.k8s.policy.serviceaccount&amp;#34;: &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-dns&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;k8s:io.kubernetes.pod.namespace&amp;#34;: &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;k8s:k8s-app&amp;#34;: &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-dns&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;53&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;UDP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cilium 将自动维护相应的基于 CIDR 的规则，以允许所有 pod 与所有为该 DNS 名称返回的 IP 地址进行通信。&lt;/p&gt;
&lt;h2 id=&#34;支持-aws-eks&#34;&gt;支持 AWS EKS&lt;/h2&gt;
&lt;p&gt;按照&lt;a href=&#34;http://docs.cilium.io/en/v1.2/kubernetes/install/eks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS EKS 上使用 etcd operator 的新指南&lt;/a&gt;，在 AWS EKS 托管的 Kubernetes 集群上安装 Cilium。&lt;/p&gt;
&lt;p&gt;安装指南为 Cilium 提供全新的集成 etcd operator，以管理自己的 etcd 集群。在许多情况下，Kubernetes 使用的 etcd 无法被 Cilium 使用。例如，在管理的 Kubernetes 中，例如 EKS、GKE、AKS 等。可以有限地访问 Kubernetes etcd 服务。在 Cilium 1.2 中，我们使用了一个 etcd operator，它将安装和管理一个高度可用的 etcd 集群供 Cilium 使用。这将使 Cilium 的安装和使用变得更加容易，而不依赖于 Kubernetes 等，并且不需要对 etcd 集群进行额外管理。我们正在积极致力于 AKS 整合，并将在未来几周内发布关于如何在 GKE 上运行的指南。如果您有任何问题或需要帮助，请使用&lt;a href=&#34;http://cilium.io/slack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack&lt;/a&gt;联系。&lt;/p&gt;
&lt;h2 id=&#34;clustermesh跨多个-kubernetes-集群的网络连通和安全性&#34;&gt;ClusterMesh：跨多个 Kubernetes 集群的网络连通和安全性&lt;/h2&gt;
&lt;p&gt;运行多个 Kubernetes 集群变得越来越普遍。运行在不同可用区或 Regions 服务的高可用实例；在多个集群中运行的 point-of-presence，服务于不同的地理位置；组织原因如分离 PCI 与非 PCI 兼容服务；或者简单地分离 dev、test 和 prod 工作负载。&lt;/p&gt;
&lt;p&gt;运行多个 Kubernetes 集群的基本要求之一是如何连接服务以及如何为跨集群交互保证东西流量安全。在 Cilium 1.2 中，我们将引入多集群中不请求 ingress controller 或者负载均衡实现不同集群 pod 之间连接的能力。由于 pod 间可以直接交互，因此 Cilium 能够保留其身份认证并对东西向流量实施完整的 L3/L4 和 L7 访问控制。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqzj9tnj30jg08a0ts_hu06f78f15ca5d41bb5680a1197da378db_30196_3bc63a72ba0efe7ba4f3d05d39b1632f.webp 400w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqzj9tnj30jg08a0ts_hu06f78f15ca5d41bb5680a1197da378db_30196_aef2141206639a94d6ce4941b9ffb866.webp 760w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqzj9tnj30jg08a0ts_hu06f78f15ca5d41bb5680a1197da378db_30196_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohqzj9tnj30jg08a0ts_hu06f78f15ca5d41bb5680a1197da378db_30196_3bc63a72ba0efe7ba4f3d05d39b1632f.webp&#34;
               width=&#34;700&#34;
               height=&#34;298&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Cilium 使用去中心化的方式创建 Cluster Mesh 并建立 pod 身份认证，而不是为所有集群使用单个集中式 etcd。用这种方式，每个集群都能独立管理它们 pod 的身份。每个集群都被赋予一个独立的标识作为身份命名空间。因此 pod 身份成为集群身份 + pod 身份的组合。这种方法易于管理和扩展，而不用协调所有集群中的身份。这种方式与多集群高可用目标保持一致，每个集群的生命周期独立于其他集群的生命周期。查看&lt;a href=&#34;https://cilium.readthedocs.io/en/stable/install/guides/clustermesh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;多集群安装指南&lt;/a&gt;试着体验 Cilium cluster-mesh。&lt;/p&gt;
&lt;h2 id=&#34;bgp-支持基于-kube-router--cilium&#34;&gt;BGP 支持：基于 Kube-router + Cilium&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrg84iaj30du03ojrm_hu5d29f4d525b496ac10e818c402bb17a6_10798_75e6ae583560098f4e4971494df9bccc.webp 400w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrg84iaj30du03ojrm_hu5d29f4d525b496ac10e818c402bb17a6_10798_70378b9468e1dfa50ac3a8f487cab909.webp 760w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrg84iaj30du03ojrm_hu5d29f4d525b496ac10e818c402bb17a6_10798_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrg84iaj30du03ojrm_hu5d29f4d525b496ac10e818c402bb17a6_10798_75e6ae583560098f4e4971494df9bccc.webp&#34;
               width=&#34;498&#34;
               height=&#34;132&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Kube-router 是一个由 cloudnativelabs 倡议，旨在满足各种 Kubernetes 网络需求并提供统一的解决方案。从数据转发的角度来看，Kube-router 使用 BGP 来广播和管理集群中所有 pod 的路由。通过与外部路由器进行 BGP 配对，Kube-router 可以轻松地在 Kubernetes pod 与集群外部运行的服务之间建立连接。此外，Kube-router 创建服务时告知 cluster IP，这意味着可以使用单个 cluster IP 和标准端口从集群外部访问服务。&lt;/p&gt;
&lt;p&gt;由 DigitalOcean 团队领导的社区工作，Cilium 现已集成 Kube-router，整合了 BPF 和基于 BGP 路由。查看&lt;a href=&#34;http://docs.cilium.io/en/v1.2/kubernetes/install/kube-router/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用 kube-router 运行 BGP 指南&lt;/a&gt;去了解如何并行运行 kube-router 和 Cilium 以运行拥有 Cilium L3-L7 策略和负载均衡的 BGP 网络。&lt;/p&gt;
&lt;h2 id=&#34;支持-istio-10&#34;&gt;支持 Istio 1.0&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrvd6guj30e204lweo_hu0403c18ee2d1818891acd807da9436f2_9273_e201e3b0de09864202ec51c55e5a3555.webp 400w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrvd6guj30e204lweo_hu0403c18ee2d1818891acd807da9436f2_9273_7eae3c4962a2857ddd002ac0cd7d9550.webp 760w,
               /blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrvd6guj30e204lweo_hu0403c18ee2d1818891acd807da9436f2_9273_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/cilium1-2-dns-security-policies-eks-support-clustermesh-kube-router-integration/006tNbRwly1fuohrvd6guj30e204lweo_hu0403c18ee2d1818891acd807da9436f2_9273_e201e3b0de09864202ec51c55e5a3555.webp&#34;
               width=&#34;506&#34;
               height=&#34;165&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Istio 1.0 发布了快一个月了。Cilium 已与 Istio 完美集成，可为 Service Mesh架构提供高效的数据转发以及L3/L4和L7安全性。我们在博客 中详细介绍了这一点&lt;a href=&#34;http://www.servicemesher.com/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 1.0：Cilium 如何通过 socket 感知 BPF 程序增强 Istio&lt;/a&gt;。Cilium 1.2 包含了与 Istio 1.0 集成的几项改进。&lt;/p&gt;
&lt;h2 id=&#34;可扩展性和高效&#34;&gt;可扩展性和高效&lt;/h2&gt;
&lt;p&gt;同样，通过在各种环境中大量分析 Cilium 性能指标和并优化连接跟踪和其他关键数据结构的操作，继续大力改进已经很好的可扩展性并提高 CPU 效率。如果您想了解更多，请在&lt;a href=&#34;http://cilium.io/slack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack&lt;/a&gt;上跟我们联系。&lt;/p&gt;
&lt;h2 id=&#34;升级说明&#34;&gt;升级说明&lt;/h2&gt;
&lt;p&gt;同样，请按照&lt;a href=&#34;https://cilium.readthedocs.io/en/v1.2/install/upgrade/#upgrading-minor-versions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;指南升级&lt;/a&gt;升级你的 Cilium deployment。随意在&lt;a href=&#34;http://cilium.io/slack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack&lt;/a&gt;上联系我们。&lt;/p&gt;
&lt;h2 id=&#34;发布&#34;&gt;发布&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;容器镜像：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker.io/cilium/cilium:v1.2.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Google 加持 Istio：这可能比 Kubernetes 和 Serverless 产生更大影响力</title>
      <link>https://cloudnative.to/blog/google-istio-bigger-kubernetes-serverless/</link>
      <pubDate>Mon, 20 Aug 2018 16:14:16 +0800</pubDate>
      <guid>https://cloudnative.to/blog/google-istio-bigger-kubernetes-serverless/</guid>
      <description>&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/servicemesher/website/master/content/blog/google-istio-bigger-kubernetes-serverless/00704eQkly1fug8z3tpgcj30lc0ao44a.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://diginomica.com/2018/08/03/google-istio-bigger-kubernetes-serverless/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Google Cloud 采用了 Istio 服务网格技术来管理微服务，这可能比 Kubernetes 和无服务器产生更大的影响。&lt;/p&gt;
&lt;p&gt;随着现代数字计算基础设施的不断发展，新的自动化层加速了创新和提升了适应性。一旦实现容器化微服务几秒之内部署一个新功能成为可能。那么 Kubernetes 和类似工具的出现增加了一层业务流程，以便大规模协调容器部署。在基础设施中一个功能很容易抽象成为一个满足需求的 serverless 模型。现在，正在形成一个称为“service mesh”的新层，以便在所有这些功能中添加服务间治理、管理和通信功能。8 月 1 号一个名为 Istio 的 service mesh 的新开源框架 1.0 版本发布生产版本，像之前的 Kubernetes 一样，由谷歌以及 IBM 支持。&lt;/p&gt;
&lt;h2 id=&#34;比-kubernetes-更有价值&#34;&gt;比 Kubernetes 更有价值&lt;/h2&gt;
&lt;p&gt;您可能没有听说过 Istio，但如果您进行任何形式的敏捷数字开发或运维工作，您很快就会知道 Istio。Google 云计算 CTO（UrsHölzle）上周告诉我，他预计 service mesh 将会被普遍采用：“我希望看到的是，在两年后 90％的 Kubernetes 用户将会使用 Istio。Istio 与 Kubernetes 提供的产品非常吻合，几乎感觉就像 Kubernetes 的下一次迭代。这是由同一个团队完成的，Istio 和 Kubernetes 的功能能够很好的互补。”&lt;/p&gt;
&lt;p&gt;Hölzle 没有明确地说 Istio 一定会比 Kubernetes 更大，但他非常确信 Istio 会和 Kubernetes 具有一样大的应用前景，甚至超过 Kubernetes。&lt;/p&gt;
&lt;h2 id=&#34;istiokubernetes-和-serverless&#34;&gt;Istio、Kubernetes 和 Serverless&lt;/h2&gt;
&lt;p&gt;在某种程度上，Hölzle 的信心源于谷歌决定将 Istio 标准化为其云服务平台（&lt;a href=&#34;https://cloudplatform.googleblog.com/2018/07/cloud-services-platform-bringing-the-best-of-the-cloud-to-you.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Services Platform &lt;/a&gt;）的管理层，该服务于上周在 Cloud Next 会议上宣布。这与上周推出的另外两个新项目同时启动。一个是&lt;a href=&#34;https://www.infoq.com/news/2018/07/knative-kubernetes-serverless&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Knative&lt;/a&gt;—一个基于 Kubernetes 的开源框架，用于构建、部署和管理 serverless 工作负载，正如 Kurt Marko 本周早些时候在他的&lt;a href=&#34;https://diginomica.com/2018/07/30/google-cloud-platform-removes-barriers-between-it-business/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Next 文章&lt;/a&gt;中所解释的那样，“Knative 不仅仅是一个 serverless 的容器包装器，而是一个容器化应用的开发框架“。另一个是谷歌 GKE（Google Kubernetes Engine）私有云版本，是云供应商的容器管理工具。结合 Istio 的管理层，这实际上意味着组织可以从私有云到公有云使用 CSP 管理整个 IT 基础架构中的容器生态系统和 serverless。&lt;/p&gt;
&lt;p&gt;Istio 是 Google、IBM 和 Lyft 共同努力在一年多前推出的一项开放式技术框架，用于连接、保护、管理和监控云的服务网络。这三家公司都贡献了他们单独开发的现有技术。&lt;/p&gt;
&lt;h2 id=&#34;减轻企业上云难度&#34;&gt;减轻企业上云难度&lt;/h2&gt;
&lt;p&gt;Hölzle 认为，Istio 将加速企业采用公有云，因为它可以在私有化部署和云之间实现更高的同质化：“公司决定将所有内容（包括他们不想重写的旧代码）移至 Istio，去包装旧代码而不去重写它这是非常合理的。我们相信 GKE 私有化部署将带领更多客户深入云技术。因为它与现代云思维非常融合，它保留了它们的地址以及何时何地去迁移的选择机会。你可以在任何你喜欢的云提供商之间自由迁移，且使你上云之路更加平稳。一旦人们熟悉了 Kubernetes 和 Istio 的管理和编排方式，上云就不会变得可怕了。”&lt;/p&gt;
&lt;p&gt;Hölzle 认为 BigQuery 这样的云原生功能将继续为它们提供最终结果。与此同时，它依靠思科等合作伙伴提供 GKE 和 Knative 的私有化版本，而不是成为该技术本身的直销商。&lt;/p&gt;
&lt;h2 id=&#34;合作伙伴和开发者&#34;&gt;合作伙伴和开发者&lt;/h2&gt;
&lt;p&gt;合作伙伴还将发现 Istio 有助于他们从硬件产品转向安全等领域的软件和服务云转型。Hölzle 认为：“许多合作伙伴正在转向销售软件和销售服务，这是进入该领域的理想切入点。如果您是正在使用 Istio 的服务安全提供商，将服务从本地迁移到云将不受影响，只有位置发生变化了。在当前模型中，如果您是本地提供商，所有 API 都不同，所有需要回答的问题都是新的，您可能会失去现任状态，因为您无法轻松移植到云端”。&lt;/p&gt;
&lt;p&gt;开发人员也需要得到说服。但谷歌开发者关系部副总裁亚当·塞利格曼认为，他对 Istio 为他们开放的东西感到很兴奋：“使用 Istio 不需要大量的重新编程。现有的应用程序、功能和服务可以使用 Istio 进行流量路由，并立即看到当前各维度的运行状态。你将没有使用 Istio 的应用程序加入 Istio，你会获得以前无法获得的所有可见性。我认为这会刺激很多开发人员，加速 Istio 被采用的速度。我认为开发人员需要接受 SLO（服务级别目标）监控、金丝雀部署、流量控制、A/B 测试甚至多变量测试等技术培训。”&lt;/p&gt;
&lt;h2 id=&#34;我的见解&#34;&gt;我的见解&lt;/h2&gt;
&lt;p&gt;Istio 不是唯一实现 service mesh 的技术框架，linkerd—由 Buoyant 支持的开源项目，早于 Istio，已经投入生产。但谷歌、IBM 和思科等重量级合作伙伴给 Istio 带来了比 Bouyant 对 linkerd 更大的支持。最后，重要的是服务网格的原则而不是具体的实现。一直存在着反对过度使用微服务的争论，因为你拥有的自主服务越多，管理它们就越复杂。在 Istio 的支持下，Google 正在验证解决这个棘手问题的微服务架构，以便所有这些松散耦合的端点可以合理地协调以产生有用的业务成果。这似乎应该是云计算发展中非常重要的进展。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用 Cilium 增强 Istio—通过 Socket 感知 BPF 程序</title>
      <link>https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/</link>
      <pubDate>Mon, 13 Aug 2018 16:19:59 +0800</pubDate>
      <guid>https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/</guid>
      <description>&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu84zi0tigj30td0gk75e_hu6f98d2c293b324054f6b7ab381be8fdc_31422_aed12ec6fc79638ec307efde3c8721fc.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu84zi0tigj30td0gk75e_hu6f98d2c293b324054f6b7ab381be8fdc_31422_bdce18d43692d383b042889648dc3f16.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu84zi0tigj30td0gk75e_hu6f98d2c293b324054f6b7ab381be8fdc_31422_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu84zi0tigj30td0gk75e_hu6f98d2c293b324054f6b7ab381be8fdc_31422_aed12ec6fc79638ec307efde3c8721fc.webp&#34;
               width=&#34;760&#34;
               height=&#34;429&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文为翻译文章，&lt;a href=&#34;https://cilium.io/blog/2018/08/07/istio-10-cilium/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;点击查看原文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;8 月 1 日 Istio 1.0 发布，Cilium 社区感谢所有 Istio 贡献者为此付出的巨大努力。我们很幸运能够参与社区活动，为 Istio 做出贡献，并帮助一些用户通过 Istio 和 Cilium 进行生产部署。如果您有兴趣在深入了解技术细节之前了解 Istio + Cilium 的用户故事，请考虑阅读 HP FitStation 团队（最大的 Cilium + Istio 用户之一）发布的以下 Istio 博客：&lt;a href=&#34;https://istio.io/blog/2018/hp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 是惠普 FitStation 平台的游戏规则的改变者&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本博客将介绍 BPF 和 Cilium 如何增强 Istio 的一些细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增强安全
&lt;ul&gt;
&lt;li&gt;使用 socket 感知 BPF 程序为多容器 pod 提供最小权限&lt;/li&gt;
&lt;li&gt;防止受损的 sidecar 代理和绕过 sidecar 协议&lt;/li&gt;
&lt;li&gt;使用 BPF 强制所有应用程序流量经过 sidecar 代理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;开启 Istio 对外部服务的支持
&lt;ul&gt;
&lt;li&gt;使用 socket 感知 BPF 程序和 kTLS 提供 TLS 链接加密的可视化和控制管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;性能
&lt;ul&gt;
&lt;li&gt;高效网络和 socket 重定向加速 istio 性能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cilium-是什么&#34;&gt;Cilium 是什么？&lt;/h2&gt;
&lt;p&gt;Cilium 是一个开源软件，用于透明保护在使用 Kubernetes、Docker 和 Mesos 等 Linux 容器管理平台部署的应用程序服务之间的网络和 API 连接。&lt;/p&gt;
&lt;p&gt;Cilium 的基础是一种名为 BPF 的新 Linux 内核技术，这使得能够在 Linux 自身内动态植入强大的安全性，可见性和网络控制逻辑。除了提供传统的网络级安全性之外，BPF 的灵活性还可以在 API 和进程级别上实现安全性，以保护容器或容器内的通信。由于 BPF 在 Linux 内核中运行，因此无需对应用程序代码或容器配置进行任何更改便可以应用和更新 Cilium 安全策略。&lt;/p&gt;
&lt;p&gt;有关 Cilium 的更详细的介绍，请参阅&lt;a href=&#34;http://docs.cilium.io/en/v1.1/intro/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium 简介&lt;/a&gt;部分。&lt;/p&gt;
&lt;h2 id=&#34;istio-是什么&#34;&gt;Istio 是什么？&lt;/h2&gt;
&lt;p&gt;Istio 提供了一种通过负载均衡、服务间身份验证、监控等且没有侵入性创建部署服务网络的简便方法。可以通过在整个环境中部署特殊的 sidecar 代理来添加对服务的支持，该代理拦截微服务之间的所有网络通信，使用 Istio 的控制平面功能进行配置和管理。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853bzn1aj311o0rs426_hu30304713123cc254280987ebd3dcd2d7_65436_4aaa895cb87b5f85e63265ba7c0a4d73.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853bzn1aj311o0rs426_hu30304713123cc254280987ebd3dcd2d7_65436_46eec2f6fe4e781ac40e277fc9b64689.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853bzn1aj311o0rs426_hu30304713123cc254280987ebd3dcd2d7_65436_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853bzn1aj311o0rs426_hu30304713123cc254280987ebd3dcd2d7_65436_4aaa895cb87b5f85e63265ba7c0a4d73.webp&#34;
               width=&#34;760&#34;
               height=&#34;560&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;您可以在&lt;a href=&#34;https://istio.io/zh/docs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 文档&lt;/a&gt;中阅读有关 Istio 概念和架构的更多信息。&lt;/p&gt;
&lt;h2 id=&#34;istio-高效网络&#34;&gt;Istio 高效网络&lt;/h2&gt;
&lt;p&gt;Istio 和 Cilium 之间最基本的协作形式是 Cilium CNI 插件通过将所有 sidecar 代理连接在一起并通过提供代理和 Istio 控制平面之间的连接，为 Istio 提供网络连接。Cilium 还确保 Istio 托管服务可以与不受 Istio 管理的 pod 进行通信。&lt;/p&gt;
&lt;p&gt;下图说明了 Istio 控制平面、sidecar 代理和 CNI 插件如何相互叠加：&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-cilium--istio-networking-architecture&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://cilium.io/static/cilium_istio_networking-68a7e3c5272d030e8ca3a717cc348631-84ad3.png&#34; alt=&#34;Cilium &amp;#43; Istio networking architecture&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Cilium &amp;#43; Istio networking architecture
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在这种模式下，所有 Istio 系统组件都受益于 Cilium 在 Linux 内核中基于 BPF 的高效网络功能。BPF 是网络和数据包过滤技术（如 iptables 等）的替代方案。您可以在以下博客文章中找到有关 BPF 推动这一转变的原因的更多信息：&lt;a href=&#34;https://cilium.io/blog/2018/04/17/why-is-the-kernel-community-replacing-iptables/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;为什么内核社区用 BPF 替换 iptables？&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;socket-级别重定向加速-istio-和-envoy&#34;&gt;Socket 级别重定向加速 Istio 和 Envoy&lt;/h2&gt;
&lt;p&gt;Istio 服务网格架构要求将参与服务网格的所有 pod 的出站和入站请求的所有网络流量都要重定向到 sidecar 代理。Sidecar 代理将终止所有 TCP 连接并执行诸如遥测、重试、路由、双向 TLS 之类的服务和代表服务的授权，并使用辅助所谓的上游 TCP 连接来到达目的地服务，这正是服务之间支持双向 TLS，没有代码侵入性原因所在。然而，当使用标准的基于 IP 的工具（如 iptables）实现重定向时，这种重定向可能会很费事，因为必须多次遍历整个 TCP/IP 堆栈。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853qn3w1j30fi0bo0tx_hu692e5c47dc3f65c42a2b78a8cbe83a6b_34613_6b886bbcecbd4f46da8588c7080ac65a.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853qn3w1j30fi0bo0tx_hu692e5c47dc3f65c42a2b78a8cbe83a6b_34613_96ccfec7ea8aa251589fe2ea5ef3e55d.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853qn3w1j30fi0bo0tx_hu692e5c47dc3f65c42a2b78a8cbe83a6b_34613_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu853qn3w1j30fi0bo0tx_hu692e5c47dc3f65c42a2b78a8cbe83a6b_34613_6b886bbcecbd4f46da8588c7080ac65a.webp&#34;
               width=&#34;558&#34;
               height=&#34;420&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Cilium 充分使用了一个叫 sockmap 的令人兴奋的 BPF 功能。它允许过滤和重定向，基于套接字级别，使 Cilium 可以 socket 感知。此 socket 是应用程序用于发送和接收网络流量的接口。这允许在相同节点上实质上短路 TCP socket，从而以完全透明的方式大幅加速应用程序和服务网格的 sidecar 代理的通信速度。应用程序和 sidecar 代理都不需要以任何方式进行修改。如果您有兴趣了解有关此用例的更多信息，请参阅位于奥斯汀的 KubeCon 2018 上的演示文稿——&lt;strong&gt;使用 CIlium 加速 Envoy、Istio 和 Linux 内核（&lt;a href=&#34;https://t.co/cx6CQhn1xl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;录像&lt;/a&gt;、&lt;a href=&#34;https://www.slideshare.net/ThomasGraf5/accelerating-envoy-and-istio-with-cilium-and-the-linux-kernel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;幻灯片&lt;/a&gt;）&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;用-cilium-增强-istio-安全性&#34;&gt;用 Cilium 增强 Istio 安全性&lt;/h2&gt;
&lt;p&gt;Cilium 与 Istio 整合，以增强 Istio 的安全性。我们来看看 Istio 提供的安全属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双向 TLS：如果发送者由 Istio 控制，则能够验证发件人的身份。这可以保护服务免受来自非法源服务欺骗 IP 地址的攻击请求。它还可以在 Istio 管理的所有服务之间启用基于 TLS/SSL 的加密。&lt;/li&gt;
&lt;li&gt;授权：能够授权请求，包括过滤元数据（如 HTTP 协议字段，IP 寻址和身份信息）以及调用其他授权插件（例如，执行令牌验证）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;level-1-保护不受支持的协议和受损的-sidecarcilium-10&#34;&gt;LEVEL 1: 保护不受支持的协议和受损的 sidecar（Cilium 1.0）&lt;/h2&gt;
&lt;p&gt;所需的第一个基本保护级别是将安全策略应用于 Istio 不支持的所有网络协议，包括 UDP、ICMP 和所有 IPv6 流量。任何此类流量都会绕过 sidecar 代理，从而通过 Istio 强制执行任何最终安全策略。无论协议如何，Cilium 将 pod 之外所有网络流量应用 L3/L4 安全策略。如果遇到不支持的协议，则将丢弃该数据包。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-slide&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://cilium.io/static/cilium_istio_security-36e68cf344d09a1df787a22e4035d045-84ad3.png&#34; alt=&#34;Slide&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Slide
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安全化非IPv4/TCP协议&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cilium 在 pod 之外提供安全策略，对于协议不受支持、重定向或由于某些其他原因而失败，将完全阻止或应用细粒度的安全规则到任何绕过代理的流量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;防止受损的 sidecar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sidecar 代理本身不受 Istio 安全规则的约束。受损的 sidecar 可以不受限制地访问网络。它还可以操纵自己的安全规则以变得更加宽松。除了 Istio 之外，Cilium 还允许定义服务级别安全策略，并确保受损的 sidecar 代理只能以最小权限运行。&lt;/p&gt;
&lt;h2 id=&#34;level2-安全的多容器-pod正在开发中&#34;&gt;LEVEL2: 安全的多容器 Pod（正在开发中）&lt;/h2&gt;
&lt;p&gt;Level 1 安全级别以 pod、service 为级别保护服务网格。它不提供容器内部的任何安全性，例如用于应用容器和 sidecar 容器之间的通信。&lt;/p&gt;
&lt;p&gt;Level 2 安全级别通过使用 socket 感知 BPF 程序在 socket 级别提供分段，在同一个 pod 中引入容器和进程之间的分段。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854newqhj312w0iijud_huac26f751b8ec3b49e277c7557426ccdb_52513_708199db51d050f53d0aba590ea9d34c.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854newqhj312w0iijud_huac26f751b8ec3b49e277c7557426ccdb_52513_ab1e28075a02e609d6a3f2ab088642d2.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854newqhj312w0iijud_huac26f751b8ec3b49e277c7557426ccdb_52513_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854newqhj312w0iijud_huac26f751b8ec3b49e277c7557426ccdb_52513_708199db51d050f53d0aba590ea9d34c.webp&#34;
               width=&#34;760&#34;
               height=&#34;362&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;强制所有应用流量流经 sidecar: 通过使用 socket 感知 BPF 策略，Cilium 可以确保应用程序的所有通信都必须通过 sidecar 进行入站和出站连接。保证应用程序容器本身不能从 pod 外部接收连接，或者在不通过 sidecar 代理的情况下向 pod 外部发出请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pod 中的最小安全权限：通过使用 socket 感知 BPF 程序锁定容器内部和进程级别的通信，其中一个容器中的安全漏洞不再导致整个容器被泄露。这尤其重要，因为 sidecar 容器可以直接访问 pod 中的任何其他容器，并且可以访问潜在的敏感信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;有趣的事实&#34;&gt;有趣的事实&lt;/h2&gt;
&lt;p&gt;支持 socket 的 BPF 程序不仅限于基于 IP 的 socket。安全策略也可以扩展到涵盖 UNIX 域 socket。&lt;/p&gt;
&lt;h2 id=&#34;外部服务的-tls-可见性正在开发中&#34;&gt;外部服务的 TLS 可见性（正在开发中）&lt;/h2&gt;
&lt;p&gt;Istio 依赖于对应用程序协议层（如 HTTP）的可见性，以提供诸如基于 URI 的路由，基于 HTTP 头的授权和 API 请求级别遥测和跟踪等功能。通过将双向 TLS 与 Istio Citadel 管理的证书相互应用，可以在未加密的服务之间保持应用程序流量并在源服务器和目标服务的 sidecar 代理之间执行 TLS 加密来实现此可见性。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854xy8csj312w0f2jsu_hu420353e74709ec34eae808600413c535_26932_7ad07d0836dc82fb2a7d4faeb8d87e50.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854xy8csj312w0f2jsu_hu420353e74709ec34eae808600413c535_26932_7ecc17fe739b7ceab844bb6b346596a7.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854xy8csj312w0f2jsu_hu420353e74709ec34eae808600413c535_26932_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu854xy8csj312w0f2jsu_hu420353e74709ec34eae808600413c535_26932_7ad07d0836dc82fb2a7d4faeb8d87e50.webp&#34;
               width=&#34;760&#34;
               height=&#34;294&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这适用于网格内部服务之间的连接。与网格之外的服务的通信几乎由应用程序本身进行 TLS 加密保证，以便在不可信的因特网上保护通信。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu8555b0z3j312w0e8t9y_hufe61675fc6fc11ba4375983dcd4aa966_22477_4cb781716396ac4d81db1fb850602ec8.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu8555b0z3j312w0e8t9y_hufe61675fc6fc11ba4375983dcd4aa966_22477_a93e6c1856665699a14fe08db01cfe23.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu8555b0z3j312w0e8t9y_hufe61675fc6fc11ba4375983dcd4aa966_22477_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu8555b0z3j312w0e8t9y_hufe61675fc6fc11ba4375983dcd4aa966_22477_4cb781716396ac4d81db1fb850602ec8.webp&#34;
               width=&#34;760&#34;
               height=&#34;278&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Linux 的 kTLS（内核 TLS）工作原理最初是由 Facebook 的 Dave Watson 提出。它包括将数据的对称加密从应用程序中的 SSL 库迁移到 Linux 内核中的 socket 功能。这项工作的最初动机是纯粹的性能优化，因为使用 kTLS 比 SSL 库快 3-4％。这对于经过 SSL 静态数据的提供者有足够的兴趣去继续。这项工作已经合并，并且可以在最新的 Linux 内核中使用。结合在 Linux socket 层注入的 BPF 程序的功能，kTLS 实现了数据的透明可见性，否则此时已加密。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855axcscj312w0gdgn4_hu4666024fd363dc6e45489e65fcad93c4_27775_64f93596f132177aeaf126a6d522895a.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855axcscj312w0gdgn4_hu4666024fd363dc6e45489e65fcad93c4_27775_ca1c00c6f576f83b678be14fb31958b5.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855axcscj312w0gdgn4_hu4666024fd363dc6e45489e65fcad93c4_27775_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855axcscj312w0gdgn4_hu4666024fd363dc6e45489e65fcad93c4_27775_64f93596f132177aeaf126a6d522895a.webp&#34;
               width=&#34;760&#34;
               height=&#34;320&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我们仍在研究这个功能，但有一个初始的功能原型，证明了获得可见性和控制数据的概念，这些数据通常是在应用程序本身中进行 TLS 加密的。下一步是将此数据提供给 sidecar，以便在与外部服务的连接上释放 Istio。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855mb70uj312w0lm77l_hufc565f9e81daee614f2898d44e658957_56070_1a31162ba13983db173e9ed1dd24ad8e.webp 400w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855mb70uj312w0lm77l_hufc565f9e81daee614f2898d44e658957_56070_9246c19063f84eeaa8d3fc22ac92766e.webp 760w,
               /blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855mb70uj312w0lm77l_hufc565f9e81daee614f2898d44e658957_56070_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/how-cilium-enhances-istio-with-socket-aware-bpf-programs/0069RVTdly1fu855mb70uj312w0lm77l_hufc565f9e81daee614f2898d44e658957_56070_1a31162ba13983db173e9ed1dd24ad8e.webp&#34;
               width=&#34;760&#34;
               height=&#34;423&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;在没侵入应用程序的情况下-ktls-是如何实现透明化的&#34;&gt;在没侵入应用程序的情况下 kTLS 是如何实现透明化的？&lt;/h2&gt;
&lt;p&gt;公平地说，应用程序使用的 SSL 库必须感知 kTLS，并且用户必须选择系统级别的行为。在应用程序运行时升级 SSL 版本和启动可视化一样简单，没有侵入应用程序。由于可见性是在 socket 级别获得的，这也意味着应用程序在排队后无法再更改此数据。如果数据用于授权请求，则这一点至关重要。&lt;/p&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;增强 Istio 安全
&lt;ul&gt;
&lt;li&gt;pod 中最小权限：通过使用 socket 感知 BPF 程序锁定容器内部和进程级别的通信，其中一个容器中的安全漏洞不再导致整个容器被泄露。&lt;/li&gt;
&lt;li&gt;安全化非IPv4/TCP协议：目前，Istio仅支持TCP和IPv4。任何其他协议（如UDP或IPv6）都将绕过sidecar代理和任何Istio安全规则，Cilium将通过完全阻止这些协议或应用细粒度的安全规则来介入。&lt;/li&gt;
&lt;li&gt;防止受损的 sidecar：sidecar 代理本身不受 Istio 安全规则的约束。受损的 sidecar 可以不受限制地访问网络。它还可以操纵自己的安全规则以变得更加宽松。除了 Istio 之外，Cilium 还允许定义服务级别安全策略，并确保受损的边车代理只能以最小的权限运行。&lt;/li&gt;
&lt;li&gt;前置应用流量经过 sidecar：通过使用 socket 感知 BPF 策略，Cilium 可以确保应用程序的所有通信都必须通过 sidecar 进行入站和出站连接。保证应用程序容器本身不能从 pod 外部接收连接，或者在不通过 sidecar 代理的情况下向 pod 外部发出请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;外部服务
&lt;ul&gt;
&lt;li&gt;使用 SSL 为 Istio 加密链接：与群集外部服务的 TCP 连接通常是 TLS 加密的，并且 Istio 无法检查此类连接的 HTTP 头。通过利用 kTLS 集成到内核中的 BPF，Cilium 将能够提供对 TLS 加密数据的可见性和控制管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;性能
&lt;ul&gt;
&lt;li&gt;高效网络：Istio 需要一个 CNI 插件来提供 pod 之间的网络连接。Cilium 实现了 CNI 插件接口，并利用 BPF 在 sidecar 代理和 Istio 控制平面之间提供高效的数据路径。&lt;/li&gt;
&lt;li&gt;socket 重定向加速 Istio：通过使用 socket 感知 BPF 程序在 Linux socket 级别执行流量重定向，Cilium 可以加速流量重定向到 sidecar 代理。这允许绕过很费事的 TCP/IP 堆栈遍历而且对应用程序或 sidecar 代码没有侵入性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;如果您有兴趣了解更多信息&#34;&gt;如果您有兴趣了解更多信息：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.cilium.io/en/stable/gettingstarted/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;试用入门指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.cilium.io/en/stable/concepts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;了解有关 Cilium 概念的更多信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cilium.io/slack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;加入我们的 Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
