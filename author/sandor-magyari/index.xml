<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sandor Magyari | 云原生社区（中国）</title>
    <link>https://cloudnative.to/author/sandor-magyari/</link>
      <atom:link href="https://cloudnative.to/author/sandor-magyari/index.xml" rel="self" type="application/rss+xml" />
    <description>Sandor Magyari</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language>
    <image>
      <url>https://cloudnative.to/author/sandor-magyari/avatar_hue38add62c87b7486d80c9f3fda25dfc1_12220_270x270_fill_q75_lanczos_center.jpg</url>
      <title>Sandor Magyari</title>
      <link>https://cloudnative.to/author/sandor-magyari/</link>
    </image>
    
    <item>
      <title>基于自定义 Istio 指标的 Pod 水平自动缩放</title>
      <link>https://cloudnative.to/blog/horizontal-pod-autoscaling-based-on-custom-istio-metrics/</link>
      <pubDate>Fri, 11 Oct 2019 18:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/horizontal-pod-autoscaling-based-on-custom-istio-metrics/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文通过 spotguides——一个示例 spring-boot 应用，讲了 Banzai Cloud 是如何通过 Istio operator 来实现 pod 水平扩展。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;基于自定义-istio-指标的-pod-水平自动缩放&#34;&gt;基于自定义 Istio 指标的 Pod 水平自动缩放&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/banzaicloud/pipeline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pipeline&lt;/a&gt;的核心功能之一，Banzai Cloud 的应用程序和 devops 容器管理&lt;a href=&#34;https://beta.banzaicloud.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;平台&lt;/a&gt;，是多维的并可以基于默认和自定义指标进行自动调节。在我们引入自定义指标后，我们选择了通过&lt;a href=&#34;https://github.com/DirectXMan12/k8s-prometheus-adapter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prometheus 适配器&lt;/a&gt;从&lt;strong&gt;Prometheus&lt;/strong&gt;收集指标。从那时起，我们的许多客户开始使用 Hoizontal Pod Autoscaling，他们中的大多数人只对基本的 CPU 和内存指标感到满意。&lt;/p&gt;
&lt;p&gt;我们一直都知道这不是一个理想的解决方案，我们一直在努力寻求更灵活的解决方案，以便：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于自定义&lt;strong&gt;Prometheus 指标&lt;/strong&gt;的扩展&lt;/li&gt;
&lt;li&gt;为更复杂的&lt;strong&gt;Prometheus 查询&lt;/strong&gt;提供扩展支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着我们的开源&lt;a href=&#34;https://banzaicloud.com/blog/istio-operator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio operator&lt;/a&gt;的发布以及在&lt;a href=&#34;https://beta.banzaicloud.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pipeline 平台&lt;/a&gt;上广泛引入基于 Istio 的&lt;a href=&#34;https://beta.banzaicloud.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;服务网格&lt;/a&gt;，我们也提供了根据自定义的 Istio 指标的自动缩放功能。Prometheus 现在提供网络指标，延迟，故障率以及更多指标 (默认情况下从 Istio 中删除)。我们的&lt;a href=&#34;https://banzaicloud.com/blog/k8s-hpa-operator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HPA operator&lt;/a&gt;根据这些指标决定是否扩展。&lt;/p&gt;
&lt;p&gt;但是，在使用&lt;a href=&#34;https://github.com/DirectXMan12/k8s-prometheus-adapter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prometheus Adapter&lt;/a&gt;时，我们的方法已不再可行，因此我们决定探索替代方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果您错过了我们关于&lt;a href=&#34;https://github.com/banzaicloud/pipeline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pipeline&lt;/a&gt;平台所支持和自动化不同类型的&lt;strong&gt;自动缩放&lt;/strong&gt;功能的系列博客，请查看这些早先的帖子：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://banzaicloud.com/blog/k8s-cluster-autoscaler/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Autoscaling Kubernetes 集群&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://banzaicloud.com/blog/k8s-vertical-pod-autoscaler/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vertical pod autoscaler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://banzaicloud.com/blog/k8s-horizontal-pod-autoscaler/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;自定义指标上的水平自动缩放 Kubernetes 部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://banzaicloud.com/blog/k8s-hpa-operator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Horizontal Pod Autoscaler Kubernetes Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://banzaicloud.com/blog/k8s-hpa-operator-reloaded/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;重新加载水平 Pod 自动调节器操作员&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;tldr&#34;&gt;TL;DR&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/banzaicloud/pipeline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pipeline&lt;/a&gt;及其&lt;a href=&#34;https://banzaicloud.com/blog/k8s-hpa-operator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HPA Operator&lt;/a&gt;中对重新设计的自定义指标支持的介绍。&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;来自 Prometheus 的 Istio 指标&lt;/strong&gt;自动调整 Spring Boot 部署的示例&lt;/li&gt;
&lt;li&gt;深入了解添加自定义指标后发生了什么&lt;/li&gt;
&lt;li&gt;切换到另一个&lt;strong&gt;自定义指标适配器&lt;/strong&gt;，&lt;a href=&#34;https://github.com/zalando-incubator/kube-metrics-adapter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kube-metrics-adapter&lt;/a&gt;的介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重新支持自定义指标&#34;&gt;重新支持自定义指标&lt;/h3&gt;
&lt;p&gt;由于上面列出的原因，我们决定使用另一个&lt;strong&gt;自定义指标适配器&lt;/strong&gt;，&lt;a href=&#34;https://github.com/zalando-incubator/kube-metrics-adapter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kube-metrics-adapter&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kube-metrics-adapter&lt;/strong&gt; 是一种通用指标适配器，可以从多个来源收集和提供指标。对于每个源，都有一个&lt;code&gt;Collector&lt;/code&gt;实现;目前，我们对其&lt;strong&gt;Prometheus&lt;/strong&gt;收集器最感兴趣。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Prometheus Collector&lt;/code&gt;是一个通用收集器。它将&lt;strong&gt;Prometheus&lt;/strong&gt; 查询映射到可由&lt;strong&gt;HPA&lt;/strong&gt; 控制器用于部署自动扩展的度量标准。它的方法不同于&lt;strong&gt;Prometheus Adapter&lt;/strong&gt; ，它具有预定义的规则集 - 包含针对&lt;strong&gt;Prometheus&lt;/strong&gt; 运行的查询，用于将指标转换为自定义指标 - 定期执行。获取所有匹配的指标标准 (因为这些查询必须是通用的并且定位所有 pod 和部署)，并作为自定义指标进行转换和公开。相比之下，“Prometheus collector”仅收集自定义查询返回的指标结果，其定义因部署而异，并且仅针对单个部署/ pod 或服务，从而减少了存储的指标总数。该解决方案的一个缺点是，目前，用户应该避免执行性能不佳的查询。&lt;/p&gt;
&lt;h3 id=&#34;使用-istio-自动伸缩-spring-boot-应用&#34;&gt;使用 ISTIO 自动伸缩 Spring Boot 应用&lt;/h3&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-hpa-operator&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./hpa_cust_metrics_istio.png&#34; alt=&#34;HPA Operator&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      HPA Operator
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我选择了流行的&lt;code&gt;spotguides&lt;/code&gt;，&lt;a href=&#34;https://github.com/spotguides/spring-boot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基于 MySQL 的 Sprint Boot 应用&lt;/a&gt;，以便在 MySQL 服务器旁，快速启动一个轻量级 Web 应用程序容器。我使用&lt;a href=&#34;https://beta.banzaicloud.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Banzai Pipeline Beta&lt;/a&gt;，它支持在六个云提供商中或在本地快速启动 Kubernetes 集群。Prometheus &amp;amp; Grafana Monitoring 以及 Istio 是默认功能，可以通过 UI 开关轻松打开 (Pipeline 处理其余部分)。在这个例子中，我将在 Google Cloud 上启动一个 Kubernetes 集群，并打开&lt;strong&gt;Monitoring and Service Mesh&lt;/strong&gt;，并在其上部署&lt;strong&gt;Spring Boot Spotguide&lt;/strong&gt;。群集创建是我们的&lt;code&gt;spotguide&lt;/code&gt;向导的一部分，但是，因为&lt;code&gt;Service Mesh&lt;/code&gt;是&lt;strong&gt;Pipeline&lt;/strong&gt;中的一个相对较新的功能，我们不能 (迄今为止) 从&lt;code&gt;spotguide&lt;/code&gt;的流程中启用它，所以我们必须事先创建集群。&lt;/p&gt;
&lt;p&gt;我在&lt;a href=&#34;https://banzaicloud.com/img/blog/k8s-hpa-prom-istio/spring_boot_spotguide.mp4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这个视频&lt;/a&gt;中记录了这些步骤：&lt;/p&gt;
&lt;p&gt;一旦你的 Spring Boot&lt;code&gt;容器&lt;/code&gt;和&lt;code&gt;MySQL&lt;/code&gt;服务器启动并运行，你就可以从&lt;strong&gt;Spotguid 总览&lt;/strong&gt;打开&lt;a href=&#34;https://spring-boot-custom-metrics-demo.sancyx5g25.sancyx.beta.banzaicloud.io/actuator/health/kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;演示程序&lt;/a&gt;。这是一个演示应用程序，是典型的&lt;code&gt;Spring Web&lt;/code&gt;应用程序。我们已经创建了一个&lt;code&gt;GitHub&lt;/code&gt;代码库，你可以在里面找到示意代码（就像我们的其他&lt;code&gt;spotguides&lt;/code&gt;一样）。默认情况下，应用程序 URL 将仅返回运行状况检查状态，该状态连接到&lt;code&gt;Kubernetes&lt;/code&gt;活动和准备情况检查。然后，JVM 指标将暴露给&lt;strong&gt;Prometheus&lt;/strong&gt;，并且 repo 将集成到我们的 CI/CD 流中，因此，一旦您提交业务逻辑，它将自动部署到集群。在&lt;a href=&#34;http://localhost/blog/spotguides-revisited/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;阅读更多关于我们的 spotguides。&lt;/p&gt;
&lt;p&gt;您可以从群集列表或详细信息页面下载&lt;code&gt;Kubernetes&lt;/code&gt;配置，以便稍后从本地计算机获取对群集的&lt;code&gt;kubectl&lt;/code&gt;访问权限。&lt;/p&gt;
&lt;p&gt;我正在使用&lt;code&gt;hey&lt;/code&gt;工具（&lt;code&gt;go get -u github.com/rakyll/hey&lt;/code&gt;）来生成针对 Spring 应用程序的负载;下面的命令将&lt;code&gt;每秒发出50个请求&lt;/code&gt;，总计&lt;code&gt;10000&lt;/code&gt;个请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hey -n &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt; -q &lt;span class=&#34;m&#34;&gt;50&lt;/span&gt; https://spring-boot-custom-metrics-demo.sancyx5g25.sancyx.beta.banzaicloud.io/actuator/health/kubernetes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，打开监控（我们的&lt;strong&gt;Spotguide 摘要&lt;/strong&gt;或群集详细信息页面中提供的链接）以查看可用的指标并确定您的&lt;strong&gt;Prometheus&lt;/strong&gt; 查询。因为我们启用了 Service Mesh，所有网络通信都将通过 Envoy 代理，将指标发送到 Istio 遥测服务，该服务由&lt;strong&gt;Prometheus&lt;/strong&gt;抓取。&lt;/p&gt;
&lt;p&gt;我将基于我的示例，查询基于&lt;strong&gt;istio_requests_total&lt;/strong&gt;指标，该指标与 Spring 容器相关：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sum&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rate&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;istio_requests_total&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;destination_service&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;spring-boot-custom-metrics-demo-spotguide-spring-boot.default.svc.cluster.local&amp;#34;&lt;/span&gt;,destination_service_name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;spring-boot-custom-metrics-demo-spotguide-spring-boot&amp;#34;&lt;/span&gt;,destination_service_namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;,destination_workload&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;spring-boot-custom-metrics-demo-spotguide-spring-boot&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}[&lt;/span&gt;1m&lt;span class=&#34;o&#34;&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请务必添加相应的标签过滤器，以便专门选择与您的 pod/部署相关的指标。&lt;/p&gt;
&lt;p&gt;从部署列表页面上的&lt;strong&gt;Horizontal Pod Autoscaler&lt;/strong&gt;菜单中选择&lt;strong&gt;spring-boot-custom-metrics-demo-spotguide-spring-boot&lt;/strong&gt;部署，以访问&lt;em&gt;HPA Edit&lt;/em&gt;页面。在那里，您可以通过输入自定义指标或查询的名称来设置 cpu，内存和自定义指标。&lt;/p&gt;
&lt;p&gt;现在，如果您在更长的时间内生成另一个负载（50 个请求/秒），则应在属于部署的 HPA 中增加副本计数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hey -n &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt; -q &lt;span class=&#34;m&#34;&gt;50&lt;/span&gt; https://spring-boot-custom-metrics-demo.sancyx5g25.sancyx.beta.banzaicloud.io/actuator/health/kubernetes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get hpa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                                                   REFERENCE                                                 TARGETS      MINPODS   MAXPODS   REPLICAS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spring-boot-custom-metrics-demo-spotguide-spring-boot   Deployment/spring-boot-custom-metrics-demo-spotguide-spring-boot   245866m/40   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;          80s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加载结束后，副本数将慢慢减少到默认的最小值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get hpa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                                                   REFERENCE                                                 TARGETS   MINPODS   MAXPODS   REPLICAS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spring-boot-custom-metrics-demo-spotguide-spring-boot   Deployment/spring-boot-custom-metrics-demo-spotguide-spring-boot   266m/40   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;背后的场景&#34;&gt;背后的场景&lt;/h3&gt;
&lt;p&gt;让我们深入了解使用 Pipeline UI 向部署添加自定义指标时幕后发生的情况。这个流程非常类似于资源指标，您可能会从之前的一系列帖子中熟悉这些指标，但是现在，让我们关注与自定义指标相关的 API。&lt;/p&gt;
&lt;p&gt;Pipeline UI 使用 HPA API创建/更新指标：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PUT &lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;pipeline_url&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;/api/v1/orgs/:orgId/clusters/:clusterId/hpa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;scaleTarget&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;example-deployment-name&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;minReplicas&amp;#34;&lt;/span&gt;: 1,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;maxReplicas&amp;#34;&lt;/span&gt;: 10,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;customMetrics&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;customMetricName&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;sum({kubernetes_pod_name=~\&amp;#34;^example-deployment-name-pod.*\&amp;#34;,__name__=~\&amp;#34;example-metric-name\&amp;#34;})&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;targetAverageValue&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果要指定绝对值，可以使用&lt;code&gt;targetValue&lt;/code&gt;而不是&lt;code&gt;targetAverageValue&lt;/code&gt;。不同之处在于，&lt;code&gt;targetAverageValue&lt;/code&gt;使用当前 pod 副本计数对获取的度量值进行平均。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/banzaicloud/pipeline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pipeline&lt;/a&gt;实际上做的是为您的部署添加以下注释：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    hpa.autoscaling.banzaicloud.io/maxReplicas&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    hpa.autoscaling.banzaicloud.io/minReplicas&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    prometheus.customMetricName.hpa.autoscaling.banzaicloud.io/query&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sum&lt;span class=&#34;o&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;kubernetes_pod_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;^example-deployment-name-pod.*&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;,__name__&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;example-metric-name&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所有这些都是通过&lt;a href=&#34;https://github.com/banzaicloud/hpa-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HPA operator&lt;/a&gt;实现的，它根据部署注释管理 HPA 资源。 &lt;a href=&#34;https://github.com/banzaicloud/pipeline&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pipeline&lt;/a&gt;在群集创建完成后，通过一个 post hook，部署&lt;a href=&#34;https://github.com/banzaicloud/hpa-operator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HPA operator&lt;/a&gt;，然后，如果&lt;code&gt;metrics.api&lt;/code&gt;尚未注册，则部署&lt;code&gt;kube-metrics-adapter&lt;/code&gt;和&lt;code&gt;metrics-server&lt;/code&gt;。此过程可能会有所不同，具体取决于您的云提供商和 K8s 版本，这些版本可能已安装了某些功能。在我们的例子中，新创建的 HPA 对象将如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;autoscaling/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HorizontalPodAutoscaler&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;autoscaling.alpha.kubernetes.io/current-metrics&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[{&amp;#34;type&amp;#34;:&amp;#34;Object&amp;#34;,&amp;#34;object&amp;#34;:{&amp;#34;target&amp;#34;:{&amp;#34;kind&amp;#34;:&amp;#34;Pod&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;example-deployment-name-customMetricName&amp;#34;,&amp;#34;apiVersion&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;metricName&amp;#34;:&amp;#34;customMetricName&amp;#34;,&amp;#34;currentValue&amp;#34;:&amp;#34;222m&amp;#34;}}]&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;autoscaling.alpha.kubernetes.io/metrics&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[{&amp;#34;type&amp;#34;:&amp;#34;Object&amp;#34;,&amp;#34;object&amp;#34;:{&amp;#34;target&amp;#34;:{&amp;#34;kind&amp;#34;:&amp;#34;Pod&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;example-deployment-name-customMetricName&amp;#34;,&amp;#34;apiVersion&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;metricName&amp;#34;:&amp;#34;customMetricName&amp;#34;,&amp;#34;targetValue&amp;#34;:&amp;#34;40&amp;#34;}}]&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metric-config.object.customMetricName.prometheus/per-replica&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metric-config.object.customMetricName.prometheus/query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sum({kubernetes_pod_name=~\&amp;#34;^example-deployment-name-pod.*\&amp;#34;,__name__=~\&amp;#34;example-metric-name\&amp;#34;})&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;minReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scaleTargetRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;example-deployment-name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;currentReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;desiredReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resourceVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfLink&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，自定义度量标准是&lt;code&gt;Object&lt;/code&gt;类型，并绑定到名为&lt;code&gt;example-deployment-name-customMetricName&lt;/code&gt;的 Pod 资源。 &lt;code&gt;Kube-metrics-adapter&lt;/code&gt;也使用注释查询来获取度量值，该值在以下端点公开&lt;code&gt;/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/example-deployment-name -customMetricName/customMetricName&lt;/code&gt;，并且它正是 HPA 控制器将要查找的位置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get --raw &lt;span class=&#34;s2&#34;&gt;&amp;#34;/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/*/customMetricName&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;MetricValueList&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;custom.metrics.k8s.io/v1beta1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;selfLink&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;/apis/custom.metrics.k8s.io/v1beta1/namespaces/default/pods/%2A/customMetricName&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;describedObject&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;Pod&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;namespace&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;example-deployment-name-customMetricName&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;v1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;metricName&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;customMetricName&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-03-13T20:23:32Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;222m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;很高兴你阅读本文，希望你有一个关于&lt;strong&gt;自动缩放&lt;/strong&gt;愉快的实践体验！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
