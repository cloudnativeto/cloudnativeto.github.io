<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sysdig | 云原生社区（中国）</title>
    <link>https://cloudnative.to/author/sysdig/</link>
      <atom:link href="https://cloudnative.to/author/sysdig/index.xml" rel="self" type="application/rss+xml" />
    <description>Sysdig</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Thu, 12 Oct 2023 10:00:00 +0800</lastBuildDate>
    <image>
      <url>https://cloudnative.to/media/sharing.png</url>
      <title>Sysdig</title>
      <link>https://cloudnative.to/author/sysdig/</link>
    </image>
    
    <item>
      <title>构建安全的 Kubernetes 环境：OWASP Kubernetes Top 10</title>
      <link>https://cloudnative.to/blog/top-owasp-kubernetes/</link>
      <pubDate>Thu, 12 Oct 2023 10:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/top-owasp-kubernetes/</guid>
      <description>&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/featured_hubf9157d733e5865b7420640d9145af30_19673_5e13e17c7b9e684ceb33a5bb499975b8.webp 400w,
               /blog/top-owasp-kubernetes/featured_hubf9157d733e5865b7420640d9145af30_19673_1509ac94e17a56ef956ee33219fee7eb.webp 760w,
               /blog/top-owasp-kubernetes/featured_hubf9157d733e5865b7420640d9145af30_19673_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/featured_hubf9157d733e5865b7420640d9145af30_19673_5e13e17c7b9e684ceb33a5bb499975b8.webp&#34;
               width=&#34;760&#34;
               height=&#34;419&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;本文译自：&lt;a href=&#34;https://sysdig.com/blog/top-owasp-kubernetes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sysdig.com/blog/top-owasp-kubernetes/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;摘要：OWASP Kubernetes Top 10 强调了 Kubernetes 生态系统中的关键风险和漏洞。它涵盖了诸如准入控制器中的配置错误，密钥管理故障，漏洞管理，身份验证机制失效以及过时和易受攻击的 Kubernetes 组件等主题。建议包括使用像 Falco 这样的工具来检测安全问题，对静态密钥进行加密，解决安全配置问题，确保日志记录和审计，扫描容器镜像以检测漏洞，管理依赖关系，保护对 Kubernetes 的访问以及及时了解 CVE 情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;使用 Kubernetes 时最大的关切之一是是否符合安全态势，并考虑到所有可能的威胁。因此，OWASP 创造了 OWASP Kubernetes Top 10，以帮助识别最可能的风险。&lt;/p&gt;
&lt;p&gt;OWASP Top 10 项目是对安全从业人员和工程师非常有用的认知和指导资源。它们也可以映射到其他安全框架，帮助事件响应工程师了解 Kubernetes 的威胁。MITRE ATT&amp;amp;CK 技术也常用于记录攻击者的技术，并帮助蓝队了解保护环境的最佳方法。此外，我们可以检查 Kubernetes 的威胁模型，了解所有的攻击面和主要的攻击向量。&lt;/p&gt;
&lt;p&gt;OWASP Kubernetes Top 10 将所有可能的风险按照总体普遍性或可能性排序。在这项研究中，我们略微修改了顺序。我们将其中一些风险分组到同一类别中，如配置错误、监控或漏洞。我们还推荐一些工具或技术来审计您的配置，并确保您的安全态势是最合适的。&lt;/p&gt;
&lt;h2 id=&#34;什么是-owasp-kubernetes&#34;&gt;什么是 OWASP Kubernetes？&lt;/h2&gt;
&lt;p&gt;OWASP（Open Web Application Security Project）是一个致力于改善软件安全的非营利基金会。OWASP 侧重于 Web 应用程序安全（故其名称），但随着现代系统设计的特性，它的范围已经扩大。&lt;/p&gt;
&lt;p&gt;随着应用程序开发从传统运行在虚拟机后面的单片架构转向在云基础设施上运行的现代微服务工作负载，重要的是为每个应用程序环境更新安全要求。&lt;/p&gt;
&lt;p&gt;这就是为什么 OWASP 基金会创建了 OWASP Kubernetes Top 10 - 专为 Kubernetes 环境设计的十大最常见攻击向量列表。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-owasp-kubernetes-top-10&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;OWASP Kubernetes Top 10&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-6_hu127e6f33183b84c5464d523f248eec0e_60906_2a881728b367d5d53efe3ad2b3bc8ab6.webp 400w,
               /blog/top-owasp-kubernetes/image-6_hu127e6f33183b84c5464d523f248eec0e_60906_ee771d850d191b9647c6b615cea64b79.webp 760w,
               /blog/top-owasp-kubernetes/image-6_hu127e6f33183b84c5464d523f248eec0e_60906_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-6_hu127e6f33183b84c5464d523f248eec0e_60906_2a881728b367d5d53efe3ad2b3bc8ab6.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      OWASP Kubernetes Top 10
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在上图中，我们突出显示了 OWASP Kubernetes 中的每个风险影响的组件或部分，映射到一个通用的 Kubernetes 威胁模型以帮助理解。这项分析还深入研究了每个 OWASP 风险，提供了关于为何该威胁突出的技术细节，以及常见的缓解措施。将风险分组成三类并按可能性排序也很有帮助。风险类别包括：&lt;/p&gt;
&lt;h3 id=&#34;配置错误&#34;&gt;配置错误&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;K01:2022 不安全的工作负载配置&lt;/li&gt;
&lt;li&gt;K09:2022 集群组件配置错误&lt;/li&gt;
&lt;li&gt;K03:2022 过于宽松的 RBAC 配置&lt;/li&gt;
&lt;li&gt;K07:2022 缺失网络分割控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;缺乏可见性&#34;&gt;缺乏可见性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;K05:2022 日志和监控不足&lt;/li&gt;
&lt;li&gt;K04:2022 缺乏集中策略强制执行&lt;/li&gt;
&lt;li&gt;K08:2022 机密管理故障&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;漏洞管理&#34;&gt;漏洞管理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;K02:2022 供应链漏洞&lt;/li&gt;
&lt;li&gt;K06:2022 身份验证机制失效&lt;/li&gt;
&lt;li&gt;K10:2022 过时且容易受攻击的 Kubernetes 组件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置错误-1&#34;&gt;配置错误&lt;/h3&gt;
&lt;h3 id=&#34;不安全的工作负载配置&#34;&gt;不安全的工作负载配置&lt;/h3&gt;
&lt;p&gt;安全始终是云服务提供商提供的所有服务的首要考虑因素。像 AWS、GCP 和 Azure 这样的云服务提供商实施了一系列沙盒功能、虚拟防火墙功能以及对底层服务的自动更新，以确保您的业务在任何时间和地点都保持安全。这些措施也减轻了在本地环境中传统安全负担的一些压力。然而，云环境应用了所谓的共享安全模型，这意味着部分责任在云服务的消费者身上，需要在其响应环境中实施这些安全防护措施。责任也会根据云消费模型和提供类型而变化。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-os&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;OS&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-7_hue37c58340c95c6d54cf909e69ef7c68c_25660_978fa53aee0d054649c14ee6237e39ba.webp 400w,
               /blog/top-owasp-kubernetes/image-7_hue37c58340c95c6d54cf909e69ef7c68c_25660_74221301ea7aea2dd26163c0f3beed5a.webp 760w,
               /blog/top-owasp-kubernetes/image-7_hue37c58340c95c6d54cf909e69ef7c68c_25660_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-7_hue37c58340c95c6d54cf909e69ef7c68c_25660_978fa53aee0d054649c14ee6237e39ba.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      OS
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;租户的管理员最终必须确保工作负载使用安全镜像，在已打补丁/更新的操作系统（OS）上运行，并确保基础设施配置持续进行审核和补救。云原生工作负载中的配置错误是对敌手获取访问您环境的最常见途径之一。&lt;/p&gt;
&lt;p&gt;操作系统&lt;/p&gt;
&lt;p&gt;容器化工作负载的好处之一是您选择的镜像通常已预先加载了与您的应用程序基础镜像功能相匹配的依赖关系。这些镜像预先打包了一些通用系统库和其他第三方组件，这些组件对于工作负载并非必需。在某些情况下，例如在微服务体系结构（MSA）中，给定的容器镜像可能太臃肿，无法提供性能良好的操作该微服务的容器。&lt;/p&gt;
&lt;p&gt;我们建议在容器化工作负载中使用最小化、精简的镜像，例如文件大小要小得多的 Alpine Linux 镜像。这些轻量级镜像在大多数情况下都非常理想。由于其中打包的组件较少，也就&lt;/p&gt;
&lt;p&gt;减少了被攻击的可能性。如果需要额外的软件包或库，可以考虑从基本的 Alpine 镜像开始，并逐渐添加所需的软件包/库，以保持预期的行为/性能。&lt;/p&gt;
&lt;p&gt;审核工作负载&lt;/p&gt;
&lt;p&gt;CIS Kubernetes Benchmark 可以作为发现配置错误的起点。比如，开源项目 kube-bench 可以使用 YAML 文件设置测试来检查您的集群是否符合 CIS Kubernetes Benchmark。&lt;/p&gt;
&lt;p&gt;示例 CIS Benchmark 控制&lt;/p&gt;
&lt;p&gt;最小化 root 容器的准入（5.2.6）&lt;/p&gt;
&lt;p&gt;Linux 容器工作负载可以作为任何 Linux 用户运行。然而，作为 root 用户运行的容器会增加容器逃逸（特权升级，然后在 Linux 主机中进行侧向移动）的可能性。CIS 基准建议所有容器应作为定义的非 UID 0 用户运行。&lt;/p&gt;
&lt;p&gt;减少 root 容器准入的 Kubernetes 审核工具之一是 kube-admission-webhook。这是一个 Kubernetes 准入控制器 Webhook，允许您验证和变更传入的 Kubernetes API 请求。您可以使用它来强制执行安全策略，例如禁止在您的集群中创建 root 容器。&lt;/p&gt;
&lt;p&gt;如何使用 OPA 防止工作负载配置错误&lt;/p&gt;
&lt;p&gt;诸如 Open Policy Agent（OPA）之类的工具可用作策略引擎，用于检测这些常见的配置错误。OPA 准入控制器为您提供了高级别的声明性语言，以在整个堆栈上编写和强制执行策略。&lt;/p&gt;
&lt;p&gt;假设您想为前面提到的 Alpine 镜像构建一个准入控制器。但是，Kubernetes 的某些用户想将 securityContext 设置为 privileged=true。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;alpine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;alpine:3.2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;/bin/sh&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;-c&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;sleep 60m&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;IfNotPresent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;alpine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;securityContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;privileged&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restartPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是 Kubernetes 中的一个特权 pod 的示例。在特权模式下运行 pod 意味着该 pod 可以访问主机的资源和内核功能。为了防止特权 pod，OPA Gatekeeper 准入控制器的 .rego 文件应该看起来类似于：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-rego&#34; data-lang=&#34;rego&#34;&gt;package kubernetes.admission
deny[msg] {
    c := input.containers[_]
    c.securityContext.privileged
    msg := sprintf(&amp;#34;Privileged container is not allowed: %v, securityContext: %v&amp;#34;, [c.name, c.securityContext])
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在这种情况下，输出应该类似于以下内容：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error from server (Privileged container is not allowed: alpine, securityContext: {&amp;#34;privileged&amp;#34;: true}): error when creating &amp;#34;STDIN&amp;#34;: admission webhook &amp;#34;validating-webhook.openpolicyagent.org&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;集群组件配置错误&#34;&gt;集群组件配置错误&lt;/h3&gt;
&lt;p&gt;核心 Kubernetes 组件中的配置错误比预期的要常见得多。为了防止这种情况，持续和自动审核基础设施即代码（IaC）和 K8s（YAML）清单，而不是手动检查它们，将减少配置错误。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-集群组件配置错误&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;集群组件配置错误&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-9_hu04d6383e149badebff5956d6ba302694_21611_da7285b6cd5d2ab8d14a144a32f50e3d.webp 400w,
               /blog/top-owasp-kubernetes/image-9_hu04d6383e149badebff5956d6ba302694_21611_0d7d30470a95a12f84f98873fa0f0fc5.webp 760w,
               /blog/top-owasp-kubernetes/image-9_hu04d6383e149badebff5956d6ba302694_21611_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-9_hu04d6383e149badebff5956d6ba302694_21611_da7285b6cd5d2ab8d14a144a32f50e3d.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      集群组件配置错误
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最危险的配置错误之一是 Kubelet 中的匿名认证设置，它允许非经过身份验证的请求发送到 Kubelet。强烈建议检查您的 Kubelet 配置，并确保以下标志设置为 false。&lt;/p&gt;
&lt;p&gt;在审核工作负载时，重要的是要记住有多种部署应用程序的方式。使用各种集群组件的配置文件，可以为这些组件授权特定的读取/写入权限。对于 Kubelet，通常情况下，对于 kubelet 的 HTTPS 端点的所有请求，如果没有被其他配置的身份验证方法拒绝，则被视为匿名请求，并被赋予用户名 system:anonymous 和组 system:unauthenticated。&lt;/p&gt;
&lt;p&gt;要禁用这些未经身份验证的请求的匿名访问，只需在启动 kubelet 时使用特性标志 &amp;ndash;anonymous-auth=false。在审核诸如 kubelet 之类的集群组件时，我们可以看到 kubelet 使用与 API 服务器相同的请求属性方法授权 API 请求。因此，我们可以定义权限，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;POST&lt;/li&gt;
&lt;li&gt;GET&lt;/li&gt;
&lt;li&gt;PUT&lt;/li&gt;
&lt;li&gt;PATCH&lt;/li&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是，还有许多其他集群组件需要关注，不仅仅是 kubelet。例如，kubectl 插件以与 kubectl 命令本身相同的权限运行，因此如果插件受到威胁，可能会用于升级权限并访问集群中的敏感资源。&lt;/p&gt;
&lt;p&gt;根据 Kubernetes 的 CIS 基准报告，我们建议为所有集群组件启用以下设置。&lt;/p&gt;
&lt;h3 id=&#34;etcd&#34;&gt;etcd&lt;/h3&gt;
&lt;p&gt;etcd 数据库提供了一个高可用的键值存储，Kubernetes 使用它来集中存储所有集群数据。保持 etcd 安全很重要，因为它存储配置数据以及 K8s Secrets。我们强烈建议定期备份 etcd 数据，以避免数据丢失。&lt;/p&gt;
&lt;p&gt;幸运的是，etcd 支持一个内置的快照功能。可以使用 etcdctl snapshot save 命令从活动集群成员中获取快照。获取快照不会对性能产生影响。以下是将 keyspace 从 $ENDPOINT 服务到文件 snapshotdb 中获取快照的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ETCDCTL_API&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;etcdctl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endpoints&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ENDPOINT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;snapshot&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;snapshotdb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;kube-apiserver&#34;&gt;kube-apiserver&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://sysdig.com/learn-cloud-native/kubernetes-101/kubernetes-api-overview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes API 服务器&lt;/a&gt; 用于验证和配置 API 对象的数据，包括 pods、services、ReplicationControllers 等。API 服务器提供 REST 操作服务，并提供了集群共享状态的前端，通过它，所有其他组件进行交互。它对集群的运行至关重要，具有极高的价值，因为攻击目标的重要性不可低估。从安全的角度来看，所有连接到 API 服务器的连接、控制平面内的通信以及控制平面与 kubelet 组件之间的通信都应只能通过 TLS 连接进行访问。&lt;/p&gt;
&lt;p&gt;默认情况下，kube-apiserver 的 TLS 是未配置的。如果在 Kube-bench 的结果中标记了这一点，只需在 kube-apiserver 中使用特性标志 &lt;code&gt;--tls-cert-file=[file]&lt;/code&gt; 和 &lt;code&gt;--tls-private-key-file=[file]&lt;/code&gt; 启用 TLS。由于 Kubernetes 集群往往会定期扩展和缩减，我们建议使用 Kubernetes 的 &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/kubelet-tls-bootstrapping/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TLS 引导功能&lt;/a&gt;。这允许在 Kubernetes 集群内自动进行证书签名和 TLS 配置，而不是遵循上述手动工作流程。&lt;/p&gt;
&lt;p&gt;定期旋转这些证书也非常重要，特别是对于寿命较长的 Kubernetes 集群。&lt;/p&gt;
&lt;p&gt;幸运的是，在 Kubernetes v.1.8 或更高版本中，有&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/kubelet-tls-bootstrapping/#certificate-rotation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;自动化工具可以帮助旋转这些证书&lt;/a&gt;。API 服务器请求也应该进行身份验证，我们将在“破碎的身份验证机制”部分中介绍。&lt;/p&gt;
&lt;h3 id=&#34;coredns&#34;&gt;CoreDNS&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://coredns.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoreDNS&lt;/a&gt; 是一种 DNS 服务器技术，可以作为 Kubernetes 集群的 DNS，由&lt;a href=&#34;https://www.cncf.io/projects/coredns/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CNCF&lt;/a&gt; 托管。自 Kubernetes 版本 v.1.11 开始，CoreDNS 取代了 kube-dns。在集群内部进行名称解析对于定位 K8s 中的编排和临时工作负载以及固有的服务至关重要。&lt;/p&gt;
&lt;p&gt;CoreDNS 解决了在 kube-dns 中发现的许多安全漏洞，特别是在 dnsmasq（DNS 解析器）中。这个 DNS 解析器负责缓存来自 SkyDNS 的响应，后者负责执行最终的 DNS 解析服务。&lt;/p&gt;
&lt;p&gt;除了解决 kube-dns 中 dnsmasq 功能的安全漏洞之外，CoreDNS 还解决了 SkyDNS 中的性能问题。使用 kube-dns 还涉及到一个旁路代理，用于监控健康状况并处理 DNS 服务的指标报告。&lt;/p&gt;
&lt;p&gt;CoreDNS 通过在一个容器内提供 kube-dns 的所有功能来解决许多与安全和性能相关的问题。然而，它仍然可能会受到威胁。因此，我们建议再次使用 kube-bench 来进行对 CoreDNS 的合规性检查。&lt;/p&gt;
&lt;h2 id=&#34;过于宽松的-rbac-配置&#34;&gt;过于宽松的 RBAC 配置&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://sysdig.com/learn-cloud-native/kubernetes-security/kubernetes-rbac/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基于角色的访问控制&lt;/a&gt;（RBAC）是一种根据组织内个别用户的角色来调节对计算机或网络资源的访问的方法。RBAC 配置错误可能会允许攻击者提升权限并完全控制整个集群。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-过于宽松的-rbac-配置&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;过于宽松的 RBAC 配置&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-10_hua74e593a53a34aedfe36a4cd5e1b4af8_56396_72106ec6bf5f9f45ffb2940db4457034.webp 400w,
               /blog/top-owasp-kubernetes/image-10_hua74e593a53a34aedfe36a4cd5e1b4af8_56396_61c2ac738ee7478dd7deae7863fef60b.webp 760w,
               /blog/top-owasp-kubernetes/image-10_hua74e593a53a34aedfe36a4cd5e1b4af8_56396_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-10_hua74e593a53a34aedfe36a4cd5e1b4af8_56396_72106ec6bf5f9f45ffb2940db4457034.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      过于宽松的 RBAC 配置
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;创建 RBAC 规则相当简单。例如，要创建一个宽松策略以允许对 Kubernetes 集群的“default”网络命名空间中的 pods 进行只读的 CRUD 操作（即获取、监视、列举），但阻止对这些 pods 进行创建、更新或删除操作，策略会类似于以下示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Role&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pod-reader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiGroups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# &amp;#34;&amp;#34; 表示核心 API 组&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pods&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;watch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在长期管理这些 RBAC 规则时会出现问题。管理员可能需要管理 &lt;strong&gt;ClusterRole&lt;/strong&gt; 资源，以避免在每个网络命名空间上构建单独的角色，如上所示。ClusterRoles 允许我们为这些工作负载构建集群范围的规则以授予访问权限。&lt;/p&gt;
&lt;p&gt;然后可以使用 RoleBindings 将上述角色绑定到用户。&lt;/p&gt;
&lt;p&gt;与其他身份验证和访问管理（IAM）实践类似，我们需要确保每个用户在 Kubernetes 中对资源具有正确的访问权限，而不会对单个资源授予过多权限。下面的示例清单应该显示了我们建议在 Kubernetes 中将角色绑定到服务帐户或用户。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;RoleBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;read-pods&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Subjects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;nigeldouglas&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;roleRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Role&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pod-reader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过扫描 RBAC 配置错误，我们可以积极加强集群的安全姿态，同时简化授权流程。云原生团队授予权限过多的主要原因之一是由于在生产环境中管理单个 RBAC 策略的复杂性。换句话说，集群内可能有太多用户和角色需要通过手动审查清单代码来进行管理。这就是为什么有专门的工具来处理 RBAC 的管理、审计和合规性检查的原因。&lt;/p&gt;
&lt;h3 id=&#34;审计-rbac&#34;&gt;审计 RBAC&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cyberark/kubernetes-rbac-audit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RBAC 审计&lt;/a&gt; 是由 CyberArk 团队创建的工具。该工具旨在扫描 Kubernetes 集群中存在的 RBAC 中的风险角色，需要 python3。可以通过以下单个命令运行这个 Python 工具：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ExtensiveRoleCheck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clusterRole&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clusterroles&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;role&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Roles&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rolebindings&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rolebindings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cluseterolebindings&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clusterrolebindings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出应该类似于：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-11_hue062bd65edd5e4d6bc23fa262a5b6aa2_26347_bcd0b48d00fb756c87b3261d966d399c.webp 400w,
               /blog/top-owasp-kubernetes/image-11_hue062bd65edd5e4d6bc23fa262a5b6aa2_26347_4708c9fe98aa244d2636c1217dba8c64.webp 760w,
               /blog/top-owasp-kubernetes/image-11_hue062bd65edd5e4d6bc23fa262a5b6aa2_26347_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-11_hue062bd65edd5e4d6bc23fa262a5b6aa2_26347_bcd0b48d00fb756c87b3261d966d399c.webp&#34;
               width=&#34;760&#34;
               height=&#34;369&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;kubiscan&#34;&gt;Kubiscan&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cyberark/KubiScan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubiscan&lt;/a&gt; 是由 CyberArk 团队构建的另一个工具。与 RBAC 审计不同，此工具旨在扫描 Kubernetes 集群中的风险权限，而不是 RBAC 角色。同样，此工具需要 Python v.3.6 或更高版本才能运行。&lt;/p&gt;
&lt;p&gt;要查看所有示例，请运行 &lt;code&gt;python3 KubiScan.py -e&lt;/code&gt; 或在容器内运行 &lt;code&gt;kubiscan -e&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-12_hu70f387f3ea38f3c8ecaa61b2c14245cd_763343_0d77a3abf6e2aba78f95cfd627ad2ab0.webp 400w,
               /blog/top-owasp-kubernetes/image-12_hu70f387f3ea38f3c8ecaa61b2c14245cd_763343_5a24128f5ce08e77a2ed95300cdbd17f.webp 760w,
               /blog/top-owasp-kubernetes/image-12_hu70f387f3ea38f3c8ecaa61b2c14245cd_763343_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-12_hu70f387f3ea38f3c8ecaa61b2c14245cd_763343_0d77a3abf6e2aba78f95cfd627ad2ab0.webp&#34;
               width=&#34;760&#34;
               height=&#34;442&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;krane&#34;&gt;Krane&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/appvia/krane&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Krane&lt;/a&gt; 是用于 Kubernetes RBAC 的静态分析工具。与 Kubiscan 类似，它识别 K8s RBAC 设计中可能存在的安全风险，并提出了如何缓解这些风险的建议。&lt;/p&gt;
&lt;p&gt;这些工具之间的主要区别在于 Krane 提供了集群当前 RBAC 安全姿态的仪表板，并允许您浏览其定义。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-13_hub4312c3c34e3b8f2d11b2885c6e5b7f2_304068_c9246ed0e052e809c1a79d94b9de1c74.webp 400w,
               /blog/top-owasp-kubernetes/image-13_hub4312c3c34e3b8f2d11b2885c6e5b7f2_304068_354fe7eb737727a85a046f9b4904e318.webp 760w,
               /blog/top-owasp-kubernetes/image-13_hub4312c3c34e3b8f2d11b2885c6e5b7f2_304068_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-13_hub4312c3c34e3b8f2d11b2885c6e5b7f2_304068_c9246ed0e052e809c1a79d94b9de1c74.webp&#34;
               width=&#34;760&#34;
               height=&#34;687&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;如果您想对正在运行的集群运行 RBAC 报告，您必须提供一个 kubectl 上下文，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;krane&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;report&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;kubectl-context&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果您希望在上述树状设计中查看您的 RBAC 设计，并带有网络拓扑图以及最新的报告发现，您需要通过以下命令启动仪表板服务器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;krane&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dashboard&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nigel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eks&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cluster&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;-c&lt;/code&gt; 特性标志指向您环境中的一个集群名称。如果您想要所有集群的仪表板，请从上述命令中删除 &lt;code&gt;-c&lt;/code&gt; 的引用。&lt;/p&gt;
&lt;h2 id=&#34;缺失的网络分割控制&#34;&gt;缺失的网络分割控制&lt;/h2&gt;
&lt;p&gt;Kubernetes 默认定义了所谓的“&lt;a href=&#34;https://en.wikipedia.org/wiki/Flat_network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;扁平网络&lt;/a&gt;”设计。&lt;/p&gt;
&lt;p&gt;这允许工作负载在没有任何先前配置的情况下自由相互通信。然而，他们可以在没有任何限制的情况下执行此操作。如果攻击者能够利用正在运行的工作负载，他们实质上将可以访问对集群中所有其他 pod 进行数据外泄。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-14_huba0d0faf7a816a503cc829e40095e259_67546_5c3e1a5be0f6278e708ebae64c0fd094.webp 400w,
               /blog/top-owasp-kubernetes/image-14_huba0d0faf7a816a503cc829e40095e259_67546_0a6da49e81864cb42ea8fe0a5c67cda3.webp 760w,
               /blog/top-owasp-kubernetes/image-14_huba0d0faf7a816a503cc829e40095e259_67546_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-14_huba0d0faf7a816a503cc829e40095e259_67546_5c3e1a5be0f6278e708ebae64c0fd094.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在其组织中专注于零信任架构的集群运营商将希望更仔细地查看 Kubernetes 网络策略，以确保服务得到适当限制。&lt;/p&gt;
&lt;p&gt;Kubernetes 提供了解决正确配置网络分割控制的解决方案。在这里，我们向您展示了其中的两个。&lt;/p&gt;
&lt;h3 id=&#34;使用-istio-的服务网格&#34;&gt;使用 Istio 的服务网格&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/istio/istio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio&lt;/a&gt; 提供了一种服务网格解决方案。这使得安全和网络团队能够管理跨微服务的流量流向，执行策略，并聚合遥测数据，以便对进出微服务的网络流量进行微分割。&lt;/p&gt;
&lt;p&gt;在撰写本文时，该服务依赖于在集群中的每个微服务实现一组旁路代理。然而，Istio 项目计划在今年某个时候&lt;a href=&#34;https://istio.io/latest/blog/2022/introducing-ambient-mesh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;转向无旁路代理方法&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;旁路技术称为“Envoy”。我们依赖 Envoy 来处理集群内服务之间的入口/出口流量，以及从服务到服务网格架构中的外部服务的流量。使用代理的明显优势在于它们提供了一个安全的微服务网格，提供流量镜像、发现、丰富的第7层流量路由、熔断器、策略执行、遥测记录/报告功能，以及最重要的是，所有通信都自动使用自动证书轮换的 mTLS！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;security.istio.io/v1beta1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;AuthorizationPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;DENY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespaces&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prod&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;To&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述的 &lt;strong&gt;Istio AuthorizationPolicy&lt;/strong&gt; 将所有来自“prod”生产命名空间的请求的动作设置为“DENY”，并将其应用于“default”命名空间中所有工作负载上的“POST”方法。&lt;/p&gt;
&lt;p&gt;这个策略非常有用。与只能在 L3/L4（网络层）基于 IP 地址和端口丢弃流量的 Calico 网络策略不同，授权策略会根据 HTTP/S 动词（如 POST/GET）在 L7（应用层）拒绝流量。这在实施 Web 应用程序防火墙（WAF）时非常重要。&lt;/p&gt;
&lt;p&gt;了解更多关于 &lt;a href=&#34;https://sysdig.com/blog/monitor-istio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 监控如何帮助您&lt;/a&gt; 保证您的 Istio 服务处于良好状态的信息。&lt;/p&gt;
&lt;h3 id=&#34;cni&#34;&gt;CNI&lt;/h3&gt;
&lt;p&gt;值得注意的是，虽然服务网格有许多优点，比如通过相互 TLS（mTLS）对工作负载之间的流量进行加密以及 HTTP/s 流量控制，但也存在一些管理服务网格的复杂性。在集群中每个工作负载旁边使用旁路代理会给您的集群增加额外的负担，以及在生产环境中遇到问题时解决这些旁路代理会带来不必要的问题。&lt;/p&gt;
&lt;p&gt;许多组织选择默认仅实施容器网络接口（CNI）。正如其名字所示，CNI 是集群的网络接口。像 &lt;a href=&#34;https://github.com/projectcalico&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Project Calico&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/cilium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium&lt;/a&gt; 这样的 CNI 都带有自己的策略实施。而 Istio 则在 L7 流量上执行流量控制，CNI 更倾向于关注网络层流量（L3/L4）。&lt;/p&gt;
&lt;p&gt;下面的 &lt;strong&gt;CiliumNetworkPolicy&lt;/strong&gt; 示例将所有带有标签 app=frontend 的端点限制为仅能够在端口 80 上使用 TCP 发送数据包，发送到任何第三层目的地：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;l4-rule&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;frontend&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;80&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们提到了使用 Istio AuthorizationPolicy 在 L7/应用层提供类似 WAF 的功能。然而，如果对手向 pod/端点发送大量的 TCP/UDP 流量，网络层仍然可能发生&lt;a href=&#34;https://sysdig.com/learn-cloud-native/cloud-security/what-is-a-dos-attack/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;分布式拒绝服务&lt;/a&gt;（DDoS）攻击。类似地，它可以用于防止受损的工作负载与已知/恶意的 C2 服务器通信，这些服务器基于固定的 IP 和端口。&lt;/p&gt;
&lt;p&gt;您想深入了解吗？了解有关 &lt;a href=&#34;https://sysdig.com/blog/denial-of-service-kubernetes-calico-falco/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;如何在 Kubernetes 中使用 Calico 和 Falco 防止 DDoS 攻击&lt;/a&gt; 的更多信息。&lt;/p&gt;
&lt;h2 id=&#34;缺乏可见性-1&#34;&gt;缺乏可见性&lt;/h2&gt;
&lt;h2 id=&#34;日志和监控不足&#34;&gt;日志和监控不足&lt;/h2&gt;
&lt;p&gt;Kubernetes 默认提供了审计日志记录功能。&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug/debug-cluster/audit/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;审计日志记录&lt;/a&gt;以时间顺序显示各种与安全相关的事件。这些活动可能是由用户、使用 Kubernetes API 的应用程序或控制平面本身生成的。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-15_huacb9bdcfee4a4577155d0e1682f9fe70_68500_a30859263eb06b51ae4e81115e1ddcee.webp 400w,
               /blog/top-owasp-kubernetes/image-15_huacb9bdcfee4a4577155d0e1682f9fe70_68500_a499c75668ab92243b4582bac9369d33.webp 760w,
               /blog/top-owasp-kubernetes/image-15_huacb9bdcfee4a4577155d0e1682f9fe70_68500_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-15_huacb9bdcfee4a4577155d0e1682f9fe70_68500_a30859263eb06b51ae4e81115e1ddcee.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;然而，还有其他日志来源需要关注——不仅限于 Kubernetes 审计日志。它们可以包括特定于主机的操作系统日志、网络活动日志（如 DNS，您可以&lt;a href=&#34;https://sysdig.com/blog/how-to-monitor-coredns/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;监视 Kubernetes 附加组件 CoreDNS&lt;/a&gt;），以及还充当 Kubernetes 云基础的云提供商。&lt;/p&gt;
&lt;p&gt;如果没有一个集中的工具来存储所有这些零星的日志来源，我们在发生违规案例时会很难使用它们。这就是像 Prometheus、Grafana 和 Falco 这样的工具有用的地方。&lt;/p&gt;
&lt;h3 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/prometheus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prometheus&lt;/a&gt; 是一个开源、社区驱动的项目，用于监控现代云原生应用程序和 Kubernetes。它是 CNCF 的一员，并拥有活跃的开发者和用户社区。&lt;/p&gt;
&lt;h3 id=&#34;grafana&#34;&gt;Grafana&lt;/h3&gt;
&lt;p&gt;与 Prometheus 类似，&lt;a href=&#34;https://github.com/grafana/grafana&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grafana&lt;/a&gt; 是一个拥有庞大社区支持的开源工具。Grafana 允许您查询、可视化、警报和理解您的指标，无论它们存储在何处。用户可以创建、探索并与团队共享仪表板。&lt;/p&gt;
&lt;h3 id=&#34;falco运行时检测&#34;&gt;Falco（运行时检测）&lt;/h3&gt;
&lt;p&gt;Falco 是一个云原生的运行时安全项目，是 Kubernetes 威胁检测的事实标准。Falco 通过观察您的应用程序和容器的行为在运行时检测威胁。Falco 通过 Falco 插件将威胁检测扩展到云环境中。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-16_hu3dca0d72583cb574b3a8d41698024177_23642_cf3fbf1c772b20d276d162a542f8a7b6.webp 400w,
               /blog/top-owasp-kubernetes/image-16_hu3dca0d72583cb574b3a8d41698024177_23642_7fd86006594536937c37e279087e51f8.webp 760w,
               /blog/top-owasp-kubernetes/image-16_hu3dca0d72583cb574b3a8d41698024177_23642_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-16_hu3dca0d72583cb574b3a8d41698024177_23642_cf3fbf1c772b20d276d162a542f8a7b6.webp&#34;
               width=&#34;760&#34;
               height=&#34;278&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Falco 是第一个作为 CNCF 孵化级项目加入的运行时安全项目。Falco 充当安全摄像头，实时检测所有 Kubernetes 环境中的意外行为、入侵和数据盗窃。Falco v.0.13 添加了对 &lt;a href=&#34;https://falco.org/docs/event-sources/kubernetes-audit/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 审计事件&lt;/a&gt; 的支持，这是对对系统调用事件的现有支持的补充。Kubernetes v1.11 引入了审计事件的改进实现，并提供了对 kube-apiserver 请求和响应的日志记录。&lt;/p&gt;
&lt;p&gt;由于几乎所有的集群管理任务都是通过 API 服务器执行的，审计日志可以有效地跟踪对集群所做的更改。&lt;/p&gt;
&lt;p&gt;示例包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建和销毁 pod、服务、部署、守护进程等。&lt;/li&gt;
&lt;li&gt;创建、更新和删除 ConfigMap 或 secrets。&lt;/li&gt;
&lt;li&gt;订阅对任何端点所做的更改。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;缺乏集中策略执行&#34;&gt;缺乏集中策略执行&lt;/h2&gt;
&lt;p&gt;在需要跨多个集群和多云环境执行规则时，强制执行安全策略变得困难。默认情况下，安全团队需要分别在每个异构环境中管理风险。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-17_hub23e97faef9b9fb774d353c9b19c9ee8_54438_d01d1fcf9deba93bc4af03ae31b32c42.webp 400w,
               /blog/top-owasp-kubernetes/image-17_hub23e97faef9b9fb774d353c9b19c9ee8_54438_57f390b622896103126294fb11dc281e.webp 760w,
               /blog/top-owasp-kubernetes/image-17_hub23e97faef9b9fb774d353c9b19c9ee8_54438_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-17_hub23e97faef9b9fb774d353c9b19c9ee8_54438_d01d1fcf9deba93bc4af03ae31b32c42.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;没有默认的方法可以从集中位置检测、纠正和防止配置错误，这意味着集群可能会潜在地面临威胁。&lt;/p&gt;
&lt;h3 id=&#34;准入控制器&#34;&gt;准入控制器&lt;/h3&gt;
&lt;p&gt;一个&lt;a href=&#34;https://sysdig.com/blog/kubernetes-admission-controllers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;准入控制器&lt;/a&gt;会在请求持久化到 Kubernetes API 服务器之前拦截它。请求必须先经过身份验证和授权，然后才能决定是否允许执行该请求。例如，您可以创建以下准入控制器配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apiserver.config.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;AdmissionConfiguration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ImagePolicyWebhook&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;configuration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;imagePolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kubeConfigFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;path-to-kubeconfig-file&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;allowTTL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;denyTTL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retryBackoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;defaultAllow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ImagePolicyWebhook 配置引用了一个 kubeconfig 格式的文件，该文件设置了与后端的连接。此准入控制器的目的是确保后端通过 TLS 进行通信。&lt;/p&gt;
&lt;p&gt;allowTTL: 50 设置了以秒为单位缓存批准的时间，同样，denyTTL: 50 设置了以秒为单位缓存拒绝的时间。准入控制器可以用于限制创建、删除、修改对象或连接到代理的请求。&lt;/p&gt;
&lt;p&gt;不幸的是，AdmissionConfiguration 资源仍然需要在每个集群中单独管理。如果我们忘记在其中一个集群上应用此文件，它将失去此策略条件。幸运的是，像 Open Policy Agent（OPA）的 &lt;a href=&#34;https://github.com/open-policy-agent/kube-mgmt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kube-Mgmt&lt;/a&gt; 工具可以帮助在 Kubernetes 中管理 OPA 实例的策略和数据，而不是单独管理准入控制器。&lt;/p&gt;
&lt;p&gt;kube-mgmt 工具会自动发现存储在 Kubernetes 中 ConfigMaps 中的策略和 JSON 数据，并将它们加载到 OPA 中。可以使用特性标志 &lt;code&gt;--enable-policy=false&lt;/code&gt; 禁用策略，或者同样可以通过单个标志禁用数据：&lt;code&gt;--enable-data=false&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;准入控制是执行需要 Kubernetes 上下文的策略的容器安全策略的重要组成部分，它为您的集群创建了最后一道防线。我们稍后会提及图像扫描，但请知道 &lt;a href=&#34;https://sysdig.com/blog/image-scanning-admission-controller/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;也可以通过 Kubernetes 准入控制器来强制执行图像扫描。&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;运行时检测&#34;&gt;运行时检测&lt;/h3&gt;
&lt;p&gt;如果它们镜像相同的配置，我们需要将安全策略配置的部署标准化到所有集群中。在根本不同的集群配置的情况下，它们可能需要设计独特的安全策略。无论哪种情况，我们如何知道在每个集群环境中部署了哪些安全策略？这就是 Falco 发挥作用的地方。&lt;/p&gt;
&lt;p&gt;假设集群没有使用 kube-mgmt，并且没有集中的方式来管理这些准入控制器。用户意外地创建了一个在 ConfigMap 清单中公开了私密凭据的 ConfigMap。不幸的是，新创建的集群中未配置任何准入控制器来阻止此行为。在单个规则中，当发生此行为时，Falco 可以向管理员发出警报：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- &lt;span class=&#34;nt&#34;&gt;rule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Create/Modify Configmap With Private Credentials&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    Detect creating/modifying a configmap containing a private credential&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;condition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kevt and configmap and kmodify and contains_private_credentials&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;-&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    K8s configmap with private credential (user=%ka.user.name verb=%ka.verb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    configmap=%ka.req.configmap.name namespace=%ka.target.namespace)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;priority&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;k8s_audit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;configmaps&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fields&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;ka.target.namespace&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;ka.req.configmap.name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述 Falco 规则中，我们使用 Kubernetes 审计日志来显示在任何 Namespace 中可能在 ConfigMaps 中暴露的私密凭据的示例。将私密凭据定义为以下任何条件：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;condition: (ka.req.configmap.obj contains &amp;#34;aws_access_key_id&amp;#34; or
ka.req.configmap.obj contains &amp;#34;aws-access-key-id&amp;#34; or
ka.req.configmap.obj contains &amp;#34;aws_s3_access_key_id&amp;#34; or
ka.req.configmap.obj contains &amp;#34;aws-s3-access-key-id&amp;#34; or
ka.req.configmap.obj contains &amp;#34;password&amp;#34; or
ka.req.configmap.obj contains &amp;#34;passphrase&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;机密管理失败&#34;&gt;机密管理失败&lt;/h2&gt;
&lt;p&gt;在 Kubernetes 中，&lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/secret/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Secret&lt;/a&gt; 是一个旨在保存敏感数据（如密码或令牌）的对象。为了避免将这类敏感数据放在您的应用程序代码中，我们可以在 Pod 规范中简单地引用 K8s 密钥。这使得工程师们可以避免直接在 Pod 清单或容器镜像中硬编码凭据和敏感数据。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-18_hu85f7c15111fd5e24f483d2b1cdf0d1cb_67311_31ff8be2200516f140035de71bfec686.webp 400w,
               /blog/top-owasp-kubernetes/image-18_hu85f7c15111fd5e24f483d2b1cdf0d1cb_67311_654e4cfc547b694e63e84a5e737f7ea4.webp 760w,
               /blog/top-owasp-kubernetes/image-18_hu85f7c15111fd5e24f483d2b1cdf0d1cb_67311_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-18_hu85f7c15111fd5e24f483d2b1cdf0d1cb_67311_31ff8be2200516f140035de71bfec686.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;尽管存在这种设计，K8s Secrets 仍然可能会受到威胁。本地 K8s 密钥机制实质上是一个抽象层 - 数据仍然存储在前述的 etcd 数据库中，从而构建了一种完整的安全性。因此，对于企业来说，评&lt;/p&gt;
&lt;h3 id=&#34;在静态环境中加密秘密&#34;&gt;在静态环境中加密秘密&lt;/h3&gt;
&lt;p&gt;Kubernetes 使用的 etcd 数据库存在一个主要弱点，即它包含通过 Kubernetes API 可访问的所有数据，因此可能允许攻击者更长时间地查看秘密信息。这就是为什么在静态环境中加密秘密信息非常重要的原因。&lt;/p&gt;
&lt;p&gt;从版本 v.1.7 开始，&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 支持在静态环境中加密&lt;/a&gt;。此选项将在 etcd 中加密 Secret 资源，防止获取 etcd 备份访问权限的方当查看这些秘密内容。虽然此功能目前处于测试阶段并且默认情况下未启用，但在备份未加密或攻击者获得对 etcd 的读取权限时，它提供了额外的防御层。&lt;/p&gt;
&lt;p&gt;以下是创建 EncryptionConfiguration 自定义资源的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apiserver.config.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;EncryptionConfiguration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;secrets&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;aescbc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;key1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;BASE 64 ENCODED SECRET&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;identity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;解决安全配置错误&#34;&gt;解决安全配置错误&lt;/h3&gt;
&lt;p&gt;除了确保秘密在静态环境中加密之外，我们还需要防止秘密落入错误的手中。我们讨论了漏洞管理、镜像扫描和网络策略强制执行如何保护应用程序免受威胁。然而，为了防止秘密（敏感凭据）泄漏，我们应该尽可能地锁定 RBAC。&lt;/p&gt;
&lt;p&gt;将所有服务账户和用户访问权限保持在&lt;a href=&#34;https://sysdig.com/blog/cspm-least-privilege-principle/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最小特权&lt;/a&gt;水平。不应该出现用户“共享凭据”的情况 - 本质上使用诸如“admin”或“default”之类的服务账户。每个用户都应该有明确定义的服务账户名称，例如‘Nigel’，‘William’或‘Douglas’。在这种情况下，如果服务账户执行了不应该执行的操作，我们可以轻松审计账户活动和/或审计集群中安装的第三方插件和软件的 RBAC 配置，以确保对像‘Nigel’这样的用户不必要地授予对 Kubernetes 秘密的完全提升的管理员权限。&lt;/p&gt;
&lt;p&gt;在下面的场景中，我们将创建一个用于授予对“test”命名空间中的秘密进行读取访问权限的 ClusterRole。在这种情况下，分配给此集群角色的用户将无法访问此奇异特定命名空间之外的秘密。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;secret-reader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiGroups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;secrets&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;watch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;确保已部署日志记录和审计&#34;&gt;确保已部署日志记录和审计&lt;/h3&gt;
&lt;p&gt;应用程序日志帮助开发人员和安全团队更好地了解应用程序内部发生了什么。对于开发人员来说，主要用例是帮助调试影响其应用程序性能的问题。在许多情况下，日志会被发送到监控解决方案（如 Grafana 或 Prometheus）中，以改进响应群集事件（例如可用性或性能问题）的时间。大多数现代应用程序，包括容器引擎，在默认情况下都支持某种日志记录机制。&lt;/p&gt;
&lt;p&gt;容器化应用程序最容易且最常采用的日志记录方法是写入标准输出（&lt;em&gt;stdout&lt;/em&gt;）和标准错误流。在以下针对&lt;a href=&#34;https://falco.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Falco&lt;/a&gt;的示例中，每个警报都会打印一行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;stdout_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了识别由事件引发的潜在安全问题，Kubernetes 管理员可以简单地将事件数据（如云审计日志或一般主机系统调用）流式传输到 Falco 威胁检测引擎中。&lt;/p&gt;
&lt;p&gt;通过将来自 Falco 安全引擎的标准输出（&lt;em&gt;stdout&lt;/em&gt;）流式传输到&lt;a href=&#34;https://www.fluentd.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fluentd&lt;/a&gt;或&lt;a href=&#34;https://www.elastic.co/logstash/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Logstash&lt;/a&gt;，平台工程或安全运维等其他团队可以轻松从云和容器环境中捕获事件数据。组织可以将更有用的安全信号存储在&lt;a href=&#34;https://www.elastic.co/elasticsearch/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Elasticsearch&lt;/a&gt;或其他 SIEM 解决方案中，而不仅仅是在原始事件数据中。&lt;/p&gt;
&lt;p&gt;还可以创建仪表板以可视化安全事件并向警报应急响应团队发出警报：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;10:20:22.408091526: File created below /dev by untrusted program &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nigel.douglas &lt;span class=&#34;nv&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;%proc.cmdline &lt;span class=&#34;nv&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;%fd.name&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;漏洞管理-1&#34;&gt;漏洞管理&lt;/h2&gt;
&lt;h2 id=&#34;供应链漏洞&#34;&gt;供应链漏洞&lt;/h2&gt;
&lt;p&gt;在详述由配置错误引起的四个风险之后，我们现在将详细说明与漏洞相关的风险。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-19_hu33929bd03a9f0a6660e91332be39a958_65738_72b610091756b76652098015a659b134.webp 400w,
               /blog/top-owasp-kubernetes/image-19_hu33929bd03a9f0a6660e91332be39a958_65738_2da07912c326c80c3ee998c0fe488ac9.webp 760w,
               /blog/top-owasp-kubernetes/image-19_hu33929bd03a9f0a6660e91332be39a958_65738_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-19_hu33929bd03a9f0a6660e91332be39a958_65738_72b610091756b76652098015a659b134.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sysdig.com/blog/software-supply-chain-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;供应链攻击&lt;/a&gt;正在上升，就像&lt;a href=&#34;https://www.sans.org/blog/what-you-need-to-know-about-the-solarwinds-supply-chain-attack/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;太阳风暴&lt;/a&gt;事件所示。太阳风暴软件解决方案 &amp;lsquo;Orion&amp;rsquo; 受到了俄罗斯威胁组织&lt;a href=&#34;https://attack.mitre.org/groups/G0016/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;APT29&lt;/a&gt;（通常称为 Cozy Bear）的威胁。这是一次持续很长时间的&lt;a href=&#34;https://en.wikipedia.org/wiki/Zero-day_%28computing%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;零日&lt;/a&gt;攻击，这意味着在其环境中运行 Orion 的太阳风暴客户不知道受到了威胁。APT29 的对手可能通过这种太阳风暴漏洞访问非隔离的 Orion 实例。&lt;/p&gt;
&lt;p&gt;太阳风暴只是企业安全堆栈中受到威胁解决方案的一个例子。在 Kubernetes 的情况下，单个容器化工作负载可能依赖于数百个第三方组件和依赖项，使得在每个阶段信任来源变得极其困难。这些挑战包括但不限于图像完整性、图像组成和已知的软件漏洞。&lt;/p&gt;
&lt;p&gt;让我们更深入地了解每个方面。&lt;/p&gt;
&lt;h3 id=&#34;镜像&#34;&gt;镜像&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wr4gpKBO3ug&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;容器镜像&lt;/a&gt;代表了封装了应用程序及其所有软件依赖项的二进制数据。容器镜像是可执行的软件包，可以独立运行（一旦实例化为运行中的容器）并对其运行时环境做出非常明确的假设。&lt;/p&gt;
&lt;p&gt;Sysdig 威胁研究团队对超过 250,000 个 Linux 镜像进行了&lt;a href=&#34;https://sysdig.com/blog/analysis-of-supply-chain-attacks-through-public-docker-images/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;分析&lt;/a&gt;，以了解在 Docker Hub 上的容器镜像中隐藏着哪些恶意载荷。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-20_hu13606428c051241abcad03024e228f59_73020_9486fb4a5bd46fa2666d2ee643460e19.webp 400w,
               /blog/top-owasp-kubernetes/image-20_hu13606428c051241abcad03024e228f59_73020_707c0de3fd60d0d7021184e1d88db448.webp 760w,
               /blog/top-owasp-kubernetes/image-20_hu13606428c051241abcad03024e228f59_73020_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-20_hu13606428c051241abcad03024e228f59_73020_9486fb4a5bd46fa2666d2ee643460e19.webp&#34;
               width=&#34;682&#34;
               height=&#34;524&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Sysdig TRT 根据几个类别收集了恶意镜像，如上所示。分析重点放在两个主要类别上：恶意 IP 地址或域名以及机密信息。这两者都对下载和部署在公共注册表（如 Docker Hub）中可用的镜像的人构成威胁，使其环境面临较高风险。&lt;/p&gt;
&lt;p&gt;可以在&lt;a href=&#34;https://sysdig.com/blog/image-scanning-best-practices/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;12 个镜像扫描最佳实践&lt;/a&gt;的研究中找到有关图像扫描的其他指导。无论您是刚开始在生产环境中运行容器和 Kubernetes，还是想要在当前的 DevOps 工作流程中嵌入更多安全性，都可以使用此建议。&lt;/p&gt;
&lt;h3 id=&#34;依赖关系&#34;&gt;依赖关系&lt;/h3&gt;
&lt;p&gt;当您的集群中有大量资源时，您可能会很容易失去了解它们之间所有关系的能力。即使是“小”集群也可能由于容器化和编排而拥有比预期更多的服务。在管理分布式团队跨多集群或多云环境时，跟踪所有服务、资源和依赖关系会更具挑战性。&lt;/p&gt;
&lt;p&gt;Kubernetes 默认情况下不提供可视化显示部署、服务、持久卷索赔（PVC）等之间依赖关系的机制。&lt;a href=&#34;https://github.com/benc-uk/kubeview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KubeView&lt;/a&gt;是一个出色的开源工具，用于查看和审计集群内部的依赖关系。它绘制了 API 对象及其相互连接的方式。数据实时从 Kubernetes API 中获取。某些对象（Pods、ReplicaSets、部署）的状态以红/绿色进行编码，以表示它们的状态和健康状况。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-21.gif&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;注册表&#34;&gt;注册表&lt;/h3&gt;
&lt;p&gt;注册表是一个无状态、可扩展的服务器端应用程序，用于存储和分发容器镜像。&lt;/p&gt;
&lt;p&gt;实现镜像的 Kubernetes 资源（如 pod、部署等）将使用 imagePull 密钥来保存身份验证所需的凭据，以便对各种镜像注册表进行身份验证。与我们在本节讨论的许多问题一样，在标准的 Kubernetes 部署中，没有固有的方式来扫描镜像以检测漏洞。&lt;/p&gt;
&lt;p&gt;但即使在专用的私有镜像注册表上，您也应该扫描镜像以检测漏洞。但 Kubernetes 默认情况下不提供此功能。您应该在用于构建它们的 CI/CD 流水线中扫描镜像，作为一种“向左移动”的安全方法的一部分。有关更多详细信息，请参阅研究[“向左移动：开发者驱动的安全”](&lt;a href=&#34;https://sysdig.com/blog/strengthen-cybersecurity-with-shift-left-and-shield-right-practices/#:~:text=your&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sysdig.com/blog/strengthen-cybersecurity-with-shift-left-and-shield-right-practices/#:~:text=your&lt;/a&gt; cybersecurity strategy.-,Shift left%3A Developer-driven security,-An exploitable vulnerability)。&lt;/p&gt;
&lt;p&gt;Sysdig 提供了有关如何在常见的 CI/CD 服务中执行此操作的详细技术指导和示例，为防止流水线中的漏洞提供了另一层安全：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/image-scanning-github-actions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/gitlab-ci-cd-image-scanning/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gitlab pipelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/container-image-scanning-for-azure-pipelines-with-sysdig/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure pipelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/docker-scanning-jenkins/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们可以添加的另一层安全措施是对发送到我们的注册表或仓库中的镜像进行&lt;a href=&#34;https://sysdig.com/blog/secure-kubernetes-deployment-signature-verification/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;签名和验证&lt;/a&gt;的过程。这通过确保真实性和完整性来减少供应链攻击。它保护了我们的 Kubernetes 开发和部署，并提供了更好的控制，以便随时运行我们正在运行的容器的清单。&lt;/p&gt;
&lt;h2 id=&#34;破损的认证机制&#34;&gt;破损的认证机制&lt;/h2&gt;
&lt;p&gt;安全地访问您的 Kubernetes 集群应该是一项优先任务，而在 Kubernetes 中进行适当的身份验证对于避免在初始攻击阶段面临大多数威胁至关重要。K8s 管理员可以直接通过 K8s API 或通过 K8s 仪表板与集群交互。从技术上讲，K8s 仪表板反过来会与这些 API 进行通信，例如 API 服务器或 Kubelet API。普遍强制执行身份验证是一项关键的安全最佳实践。&lt;/p&gt;
&lt;p&gt;正如&lt;a href=&#34;https://sysdig.com/blog/detecting-cryptomining-attacks-in-the-wild/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019 年特斯拉加密挖矿事件&lt;/a&gt;所示，攻击者渗透了未受密码保护的 Kubernetes 仪表板。由于 Kubernetes 是高度可配置的，许多组件最终未被启用，或者使用基本身份验证以便在许多不同的环境中工作。这在集群和云安全姿态方面存在挑战。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-22_hua8a8250235ae337fd595f12a4f8bcee7_80679_7b3cf36aa177778b489f30055a8b046b.webp 400w,
               /blog/top-owasp-kubernetes/image-22_hua8a8250235ae337fd595f12a4f8bcee7_80679_9b3faebe0049a4aba077738b53e7724e.webp 760w,
               /blog/top-owasp-kubernetes/image-22_hua8a8250235ae337fd595f12a4f8bcee7_80679_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-22_hua8a8250235ae337fd595f12a4f8bcee7_80679_7b3cf36aa177778b489f30055a8b046b.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;如果一个人想要对我们的集群进行身份验证，主要关注的区域将是凭证管理。最可能的情况是它们会因偶然错误而暴露，例如在 &lt;em&gt;.kubeconfig&lt;/em&gt; 等配置文件中泄露。&lt;/p&gt;
&lt;p&gt;在您的 Kubernetes 集群内部，服务和机器之间的&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/authentication&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;身份验证&lt;/a&gt;基于服务账户。避免使用证书进行最终用户身份验证或集群外部的服务账户令牌是很重要的，因为这会增加风险。因此，建议定期扫描可能因错误而暴露的密钥或证书。&lt;/p&gt;
&lt;p&gt;OWASP 建议，无论选择哪种身份验证机制，&lt;strong&gt;我们都应该强制人们提供第二种身份验证方法&lt;/strong&gt;。例如，如果您使用云 IAM 功能而未启用 2FA，我们应该能够在运行时在您的云或 Kubernetes 环境中检测它，以加快检测和响应速度。为此，我们可以使用&lt;a href=&#34;https://falco.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Falco&lt;/a&gt;，这是一个开源的威胁检测引擎，它根据一组 YAML 格式的规则在运行时触发警报。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- &lt;span class=&#34;nt&#34;&gt;rule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Console Login Without Multi Factor Authentication&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Detects a console login without using MFA.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;condition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;-&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    aws.eventName=&amp;#34;ConsoleLogin&amp;#34; and not aws.errorCode exists and
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    jevt.value[/userIdentity/type]!=&amp;#34;AssumedRole&amp;#34; and
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    jevt.value[/responseElements/ConsoleLogin]=&amp;#34;Success&amp;#34; and
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    jevt.value[/additionalEventData/MFAUsed]=&amp;#34;No&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;-&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    Detected a console login without MFA (requesting user=%aws.user, requesting
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    IP=%aws.sourceIP, AWS region=%aws.region)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;priority&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;critical&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;aws_cloudtrail&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;过时和易受攻击的-kubernetes-组件&#34;&gt;过时和易受攻击的 Kubernetes 组件&lt;/h2&gt;
&lt;p&gt;在 Kubernetes 中进行有效的漏洞管理是困难的。然而，有一组&lt;a href=&#34;https://sysdig.com/blog/vulnerability-assessment/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最佳实践要遵循&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/top-owasp-kubernetes/image-23_hu353f67ac11ddff92ec7c7e8ba609f711_62866_989ea208fde2bf0841953ca504aad600.webp 400w,
               /blog/top-owasp-kubernetes/image-23_hu353f67ac11ddff92ec7c7e8ba609f711_62866_3f0c97ba5df65e7c113ed6be5988fc42.webp 760w,
               /blog/top-owasp-kubernetes/image-23_hu353f67ac11ddff92ec7c7e8ba609f711_62866_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://cloudnative.to/blog/top-owasp-kubernetes/image-23_hu353f67ac11ddff92ec7c7e8ba609f711_62866_989ea208fde2bf0841953ca504aad600.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Kubernetes 管理员必须遵循最新的 CVE 数据库，监视漏洞披露，并在适用的情况下应用相关的补丁。否则，Kubernetes 集群可能会受到这些已知漏洞的影响，使得攻击者更容易执行技术以完全控制您的基础设施，并有可能向您部署集群的云租户进行攻击。&lt;/p&gt;
&lt;p&gt;Kubernetes 中开源组件的大量存在，以及项目发布的节奏，使得 CVE 管理特别困难。在版本&lt;a href=&#34;https://sysdig.com/blog/kubernetes-1-25-whats-new/#3203&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1.25 的 Kubernetes&lt;/a&gt;中，推出了一个新的安全 Feed 到 Alpha 阶段，其中对影响 Kubernetes 组件的 CVE 列表进行了分组和更新，详见&lt;a href=&#34;https://kubernetes.io/docs/reference/issues-security/official-cve-feed/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;（官方 CVE Feed）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;以下是一些著名的漏洞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVE-2021-25735&lt;/a&gt; – Kubernetes 验证入场网络钩子绕过&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/detect-cve-2020-8554-using-falco/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVE-2020-8554&lt;/a&gt; – Kubernetes 中未修补的中间人攻击（MITM）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/how-to-detect-kubernetes-vulnerability-cve-2019-11246-using-falco/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVE-2019-11246&lt;/a&gt; – 影响 kubectl 工具的高严重性漏洞。如果利用，可能导致目录遍历。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sysdig.com/blog/privilege-escalation-kubernetes-dashboard/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVE-2018-18264&lt;/a&gt; – 通过 Kubernetes 仪表板进行特权升级&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要检测这些易受攻击的组件，您应该使用检查或扫描 Kubernetes 集群的工具，例如 &lt;a href=&#34;https://github.com/kubescape/kubescape&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubescape&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/openclarity/kubeclarity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubeclarity&lt;/a&gt; – 或者考虑使用商业平台，例如 &lt;a href=&#34;https://sysdig.com/products/secure/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sysdig Secure&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;今天，发布的漏洞直接针对 Linux Kernel，影响运行在我们集群上的容器，而不是 Kubernetes 组件本身。即便如此，我们必须密切关注每一个新发现的漏洞，并制定尽快减轻风险的计划。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;OWASP Kubernetes 前 10 名旨在帮助安全从业者、系统管理员和软件开发人员在 Kubernetes 生态系统周围优先考虑风险。前 10 名是一个根据从不同成熟度和复杂性的组织收集的数据支持的常见风险的优先级排序列表。&lt;/p&gt;
&lt;p&gt;我们涵盖了许多可以帮助解决 OWASP Kubernetes 前 10 名中概述的差距的开源项目。然而，部署和操作这些零散的工具需要大量的人力和广泛的技能集来进行有效的管理。虽然没有单一的解决方案可以解决上述所有功能，但 Sysdig Secure 提供了一种统一的平台方法，用于检测和防止在构建、交付和运行时出现的威胁。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检测镜像、容器注册表或 Kubernetes 依赖项中已知的漏洞。&lt;/li&gt;
&lt;li&gt;在 Sysdig Secure 平台中集成了 Kubernetes 入场控制器，用户可以接受或阻止容器工作负载中的易受攻击的部分进入运行时。&lt;/li&gt;
&lt;li&gt;通过自动生成网络策略来自动修复与网络相关的威胁。&lt;/li&gt;
&lt;li&gt;最后，通过一个托管的 Prometheus 实例提供了对所有集群活动的深度可见性。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>什么是 CNAPP（容器化应用保护平台）?</title>
      <link>https://cloudnative.to/blog/what-is-cnapp/</link>
      <pubDate>Thu, 06 Jul 2023 11:00:00 +0800</pubDate>
      <guid>https://cloudnative.to/blog/what-is-cnapp/</guid>
      <description>&lt;p&gt;译者注：本文译自 Sysdig 公司的网站，Sysdig 是一家提供容器安全、监控和故障排除解决方案的公司，其产品帮助用户在容器化环境中实现可观测性和安全性。这篇文章介绍了 CNAPP，CNAPP 是一个端到端的云安全解决方案，可提供实时威胁检测、简化符合性、改善 DevOps 协作、操作效率等多种好处。它通过整合安全控件、提供集中式管理和运行时洞察力等方式，增强组织的整体安全姿态。&lt;/p&gt;
&lt;h2 id=&#34;总览&#34;&gt;总览&lt;/h2&gt;
&lt;p&gt;CNAPP（容器化应用程序保护平台）是一种综合性的、全方位的安全策略，贯穿整个应用程序的生命周期（SDLC）。随着云计算的快速普及和现代应用程序的日益复杂，传统的安全措施往往无法有效地保护免受复杂的网络威胁。&lt;/p&gt;
&lt;p&gt;CNAPP 结合了“向左倾斜”和“向右防御”安全概念，提供了全面和强大的安全策略，确保了应用程序在整个生命周期中的保护。&lt;/p&gt;
&lt;p&gt;通过将安全向左移动，组织可以利用从应用程序开发过程的最开始阶段就开始的安全控制、漏洞扫描和合规性检查。&lt;/p&gt;
&lt;p&gt;“向右防御”概念侧重于在应用程序运行时阶段实时检测和响应安全事件。尽管在开发过程中尽最大努力保护应用程序，但漏洞可能仍然存在，或者新的威胁可能出现，因此 CNAPP 必须采用并简化这两个概念。&lt;/p&gt;
&lt;h2 id=&#34;cnapp-解决方案的关键特征是什么&#34;&gt;CNAPP 解决方案的关键特征是什么？&lt;/h2&gt;
&lt;p&gt;CNAPP 提供的安全功能涵盖软件供应链的许多阶段，确保了在开发和运营生命周期中的全面保护。Gartner 将这些功能分为四个主要类别。&lt;/p&gt;
&lt;h3 id=&#34;构件扫描&#34;&gt;构件扫描&lt;/h3&gt;
&lt;p&gt;构件扫描是支持向左安全方法的关键 CNAPP 组件之一。向左移动风险可见性和扫描需要与开发组织使用的开发管道工具集成。&lt;/p&gt;
&lt;p&gt;构件扫描有两个主要领域，无论构件是源代码还是已编译的二进制文件。它们是软件组成分析（SCA）和应用程序安全测试。&lt;/p&gt;
&lt;p&gt;SCA 评估构件以查找它所包含的任何开放源代码库。然后，它标记所使用的库的版本和许可证。有了这些信息，它可以列出任何常见漏洞和曝光（CVE）及其评级，并将其作为报告或元数据附加到存储库中该构件的附加信息。&lt;/p&gt;
&lt;p&gt;应用程序安全测试分为三个主要分组：静态（SAST）、动态（DAST）和交互式（IAST）。SAST 查看源代码或已构建的构件，寻找代码中可以发现的最佳实践和常见错误，例如未经检查的缓冲区。DAST 将构件视为黑盒子，运行时对其进行探测。它像攻击者一样戳它，寻找诸如输入验证或未安全页面之类的内容。IAST 在应用程序运行时内部工作，但仅分析应用程序代码的执行方式。它最常在 QA 团队运行功能测试的环境中看到。&lt;/p&gt;
&lt;h3 id=&#34;云配置&#34;&gt;云配置&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;云安全姿态管理（CSPM）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CSPM 是持续监控、检测和纠正云安全配置不正确以确保云基础架构正确配置和锁定的过程。它验证正在运行的内容，并对任何与其预期的不匹配的内容发出警报。例如，开放的端口或拥有比所需权限更多访问权限的安全角色。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;云基础架构权限管理（CIEM）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CIEM 是管理单个或多云环境中的身份标识的访问权、权限或特权的安全过程。此过程有助于识别和避免由权限高于或广泛于应有权限而产生的风险。&lt;/p&gt;
&lt;p&gt;CIEM 安全涵盖的问题示例包括未吊销长期未使用的凭据或向 EC2 实例授予不需要的通配符权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基础架构即代码（IaC）扫描&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云原生生态系统的一个重要吸引力是自动化应用程序运行所需的一切。IaC 可以是 CloudFormation 模板、Kubernetes 清单、Docker 文件或 Terraform 计划等。IaC 扫描的想法是在它们进入生产环境之前发现明显的安全漏洞并防止它们发生问题。&lt;/p&gt;
&lt;p&gt;IaC 扫描解决方案应包括以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;防止漂移：在部署之前扫描 IaC 文件。将生产中的误配置映射回源。&lt;/li&gt;
&lt;li&gt;优先风险：根据应用程序上下文、要求和依赖关系优先处理安全修复。&lt;/li&gt;
&lt;li&gt;在源处修正：接收源处的修复建议，自动生成拉取请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;运行时保护&#34;&gt;运行时保护&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;云工作负载保护（CWPP）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是 CNAPP 安全套件的运行时执行部分。它支持实现零信任模型，其中没有任何内容自动信任。&lt;/p&gt;
&lt;p&gt;它将执行以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行时检测：在容器运行时检测和防止可疑行为。自动化容器威胁响应。&lt;/li&gt;
&lt;li&gt;系统硬化：通过使用限制性配置减少其漏洞表面，保护在主机上运行的 Linux 主机或基于 VM 的工作负载。&lt;/li&gt;
&lt;li&gt;漏洞管理：在容器映像中（CI/CD 流水线）和注册表中检测容器映像中的漏洞。&lt;/li&gt;
&lt;li&gt;网络安全：强制执行 Kubernetes 原生网络策略，包括分段，并向下提供网络流量可视化到容器级别。&lt;/li&gt;
&lt;li&gt;合规性：验证容器合规性并确保在容器内进行文件完整性监视。&lt;/li&gt;
&lt;li&gt;事件响应：为 Kubernetes 和其管理的容器提供取证分析和事件响应，即使容器已消失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;近期 Gartner 强调了运行时安全的重要性，并指出“支持提供多种运行时可见性技术的 CNAPP 供应商，包括传统代理、&lt;a href=&#34;https://sysdig.com/blog/sysdig-and-falco-now-powered-by-ebpf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;扩展的伯克利数据包过滤器（eBPF）支持&lt;/a&gt;、快照、特权容器和 Kubernetes（K8s）集成，以提供最大的部署灵活性。”&lt;/p&gt;
&lt;h3 id=&#34;云检测和响应cdr&#34;&gt;云检测和响应（CDR）&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://sysdig.com/learn-cloud-native/detection-and-response/cdr-an-overview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云检测和响应（CDR）&lt;/a&gt;在 CNAPP 中发挥关键作用，为云环境专门设计高级威胁检测、事件响应和持续监控能力。CNAPP 中的 CDR 利用云本地安全控制（如云工作负载保护平台（CWPP）和云安全姿态管理（CSPM）工具）实时获取云资产、配置和活动的可见性。通过持续监控和分析云日志、网络流量和用户行为，CDR 有助于检测威胁指标（IOCs）、异常和可疑活动，这些活动可能表明安全事件或漏洞。&lt;/p&gt;
&lt;p&gt;一旦检测到潜在的威胁或漏洞，CDR 通过提供自动化或指导响应操作来实现快速的事件响应。它促进了安全事件的隔离、调查和纠正，帮助组织最小化潜在影响并减轻进一步的风险。&lt;/p&gt;
&lt;p&gt;将 CDR 集成到 CNAPP 中创建了一个综合性的安全解决方案，结合了主动的云安全控制、漏洞管理、安全编码实践和持续监控和响应能力。它确保云原生应用在其整个生命周期中都受到保护，从开发到部署等，预防新兴威胁，并使组织能够在其云环境中保持强大的安全姿态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;图 1：Gartner 的 CNAPP 详细视图&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;为什么-cnapp-必须具有运行时洞见&#34;&gt;为什么 CNAPP 必须具有运行时洞见？&lt;/h2&gt;
&lt;p&gt;CNAPP 正在成为一个接受和分析多个数据源的平台。随着采用基于容器/Kubernetes 的微服务，数据量正在爆炸式增长。这可能很快导致大量高保真和低保真信号，最终引发一个问题：你如何集中注意力处理云本地基础架构中最关键的风险？&lt;/p&gt;
&lt;p&gt;这就是拥有关于当前运行情况的深入了解如何帮助您缩小需要紧急关注的事项列表的地方。简单地说，了解当前正在运行的情况（即运行时见解）是安全和 DevOps 团队采取行动处理最关键的风险所需的必要上下文。最终，这个上下文可以在开发生命周期的早期反馈回来，使 CNAPP 的“向左位移”使用案例更好地具有可操作的优先级。&lt;/p&gt;
&lt;h2 id=&#34;运行时见解在日常工作中的实际应用示例&#34;&gt;运行时见解在日常工作中的实际应用示例&lt;/h2&gt;
&lt;p&gt;以下是 CNAPP 将有助于实现有价值和一致的策略执行的一些示例：&lt;/p&gt;
&lt;h3 id=&#34;示例-1正在使用的软件包&#34;&gt;示例 1：正在使用的软件包&lt;/h3&gt;
&lt;p&gt;构建团队已经在构建和测试管道中实施了安全扫描，这非常棒。假设一个 SCA 工具正在针对存储艺术品的注册表运行，并使用 CVE 数据库中的已知漏洞标记它们。如果已经在生产中使用的某个东西被标记为新的关键警报会发生什么？如果它足够严重，比如 Log4Shell 漏洞，那么受影响的应用程序需要立即关闭或以其他方式减轻潜在攻击。强大的 CNAPP 利用运行时见解来确定是否已经在使用易受攻击的库，然后根据情况优先考虑风险和减轻措施。此外，您应该能够自动响应这种类型的事件。&lt;/p&gt;
&lt;h3 id=&#34;示例-2正在使用的权限&#34;&gt;示例 2：正在使用的权限&lt;/h3&gt;
&lt;p&gt;一个组织利用 Amazon Web Services（AWS）作为云基础架构。为特定项目创建了一个名为“CreateS3BucketAdmin”的自定义权限，但不再使用。此权限授予完全管理访问权限，以创建和管理 AWS 帐户中的 S3 存储桶。&lt;/p&gt;
&lt;p&gt;这种情况带来了重大的安全风险。如果被攻击，攻击者可以利用这个未使用的权限创建和操作 S3 存储桶，可能导致数据暴露、数据丢失或未经授权访问敏感信息。&lt;/p&gt;
&lt;p&gt;CNAPP 可以在识别和减轻此类安全风险方面发挥关键作用。它可以根据您的用户行为和其通常使用的权限进行自动定义策略。这些信息可以用于生成理想的基线，最好是编码化的，并且可以强制执行。这个“正在使用”的权限策略作为过滤器工作，并自动生成建议，可以使这个过程更加高效。&lt;/p&gt;
&lt;h2 id=&#34;cnapp-如何工作&#34;&gt;CNAPP 如何工作？&lt;/h2&gt;
&lt;p&gt;CNAPP 通过将运行时风险可见性、云风险可见性和开发工件风险可见性的需求结合在一个坚实的平台中，实现了云安全的整合。&lt;/p&gt;
&lt;p&gt;为了具有这种集成的能力，CNAPP 通常遵循两种不同的工具仪表板：&lt;a href=&#34;https://sysdig.com/blog/cloud-kill-security-agents/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基于代理和无代理&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基于代理&lt;/strong&gt; 保持接近工作负载。它需要在受检测机器上与工作负载一起执行的代理（通常称为传感器或探针）。在同一主机上可以实时查看运行时情况，并且可以访问系统级上下文信息，这是其他情况下不可用的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无代理&lt;/strong&gt; 是由云提供商提供的 API 启用的，可以在不需要代理运行的工作负载中收集相关上下文。它通常利用快照的能力，在时间点上的副本上推迟安全扫描，使原始工作负载保持不变。虽然这种方法缺乏代理提供的深入运行时见解，但它为处理不需要依赖实时数据的问题提供了无摩擦的解决方案，例如构建资产清单或在审计日志中识别已知的漏洞和异常行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;强大的 CNAPP 解决方案需要采用这两种工具仪表板方法，以达到最大的有效性。使用代理获得运行时实时可见性和更好的系统级上下文信息，使用无代理在审计日志中识别已知的漏洞和异常行为。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;cnapp-解决方案能否与我的现有安全工具和系统集成&#34;&gt;CNAPP 解决方案能否与我的现有安全工具和系统集成？&lt;/h2&gt;
&lt;p&gt;CNAPP 需要集成到开发组织使用的运行时云环境和开发流程工具中。&lt;/p&gt;
&lt;h3 id=&#34;集成到cicd管道中&#34;&gt;集成到CI/CD管道中&lt;/h3&gt;
&lt;p&gt;CNAPP必须集成到您的CI/CD开发工具集中，以限制构建时的漏洞和配置错误暴露的风险。此集成对于工件扫描（无论是源代码还是编译二进制文件）都是至关重要的，并且它扩展到涵盖工件审计/日志记录遥测。&lt;/p&gt;
&lt;h3 id=&#34;与云提供商集成&#34;&gt;与云提供商集成&lt;/h3&gt;
&lt;p&gt;随着无代理工具的发展，CNAPP 供应商增加了与云提供商的集成水平，以利用提供的 API 来收集相关上下文，而不需要代理运行在工作负载的旁边。&lt;/p&gt;
&lt;p&gt;大多数现有的 CNAPP 都支持三个主要的云提供商：Amazon Web Services（AWS）、Microsoft Azure 和 Google Cloud Platform（GCP）。此外，一些供应商将其集成扩展到其他提供商，如 Oracle Cloud、IBM Cloud、Alibaba Cloud、VMware Tanzu 等。因此，请确保选择支持您基础架构的解决方案。&lt;/p&gt;
&lt;h3 id=&#34;与基础架构即代码iac工具集成&#34;&gt;与基础架构即代码（IaC）工具集成&lt;/h3&gt;
&lt;p&gt;通过这种集成，CNAPP 可以在部署之前扫描 IaC 文件并检测运行时漂移。一个例子是 Git 集成，用于根据预定义策略扫描传入的 Pull Request（PR），以查找安全违规行为。扫描评估的结果在 PR 本身中呈现。如果通过，用户可以合并；如果失败，用户无法合并。在 PR 中提供的信息也针对问题区域进行了定位，以帮助用户进行纠正。&lt;/p&gt;
&lt;h3 id=&#34;与关键管理系统kms的集成&#34;&gt;与关键管理系统（KMS）的集成&lt;/h3&gt;
&lt;p&gt;这是允许对加密或签名资源进行&lt;a href=&#34;https://blog.sigstore.dev/how-to-verify-container-images-with-kyverno-using-kms-cosign-and-workload-identity-1e07d2b85061/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;扫描&lt;/a&gt;的必要条件。&lt;/p&gt;
&lt;h2 id=&#34;案例研究一家领先的机器人公司如何通过-cnapp-实现成本节约减少警报和工具整合&#34;&gt;案例研究：一家领先的机器人公司如何通过 CNAPP 实现成本节约、减少警报和工具整合&lt;/h2&gt;
&lt;p&gt;最近，一家领先的机器人公司采用了 CNAPP 来增强其云安全基础设施。通过实施 CNAPP，公司实现了显著的收益，包括安全工具的整合、警报的减少和成本节约。&lt;/p&gt;
&lt;p&gt;在采用 CNAPP 之前，该公司使用了 6 种不同的安全工具，每种工具在其云环境中具有特定的安全功能。这种分散的方法导致了操作复杂性、重叠的功能和增加的维护成本。随着 CNAPP 的引入，该公司能够将所有安全工具整合到一个平台上，简化其安全操作并减少管理开销。&lt;/p&gt;
&lt;p&gt;CNAPP 的实施也在优化警报管理流程方面发挥了关键作用。通过利用该平台的先进&lt;a href=&#34;https://sysdig.com/learn-cloud-native/detection-and-response/what-is-threat-detection-and-response-tdr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;威胁检测和响应能力&lt;/a&gt;以及运行时洞察力来关注正在使用的软件包并优先考虑风险，该公司的安全警报数量显著减少了 30%。通过智能和上下文驱动的警报优先级排序，实现了这一改进，使安全团队能够专注于最重要的威胁，同时最小化噪音和误报。因此，团队的效率和响应能力显着提高，使他们能够迅速处理真正的安全事件。&lt;/p&gt;
&lt;p&gt;此外，通过 CNAPP 合并安全工具带来了实质性的成本节约。通过消除多个安全工具的许可费用、维护成本和操作开销，该组织实现了总体安全支出的 20% 的降低。CNAPP 提供的简化管理和流程优化不仅降低了成本，还释放了宝贵的资源，使公司能够将它们用于其他战略性举措。&lt;/p&gt;
&lt;p&gt;总的来说，采用 CNAPP 导致了整合的安全基础设施、简化的警报管理和显著的成本节约。这种全面统一的云安全方法促进了操作效率的提高、改善了事件响应能力，并增强了组织的安全姿态。&lt;/p&gt;
&lt;h2 id=&#34;cnapp-工具能为我的组织提供什么好处&#34;&gt;CNAPP 工具能为我的组织提供什么好处？&lt;/h2&gt;
&lt;h3 id=&#34;1-增强云安全&#34;&gt;1. 增强云安全&lt;/h3&gt;
&lt;p&gt;CNAPP 是一个端到端的解决方案，可在任何工作负载、云或服务上提供广度，使组织能够在其云基础设施中保持一致的威胁检测和可见性。它还提供了深度，通过结合各种技术，如机器学习（ML）、规则、威胁供稿等，使其能够有效地检测和应对威胁。CNAPP 还通过提供攻击路径分析等预防性控制来减少云原生环境中的攻击面。&lt;/p&gt;
&lt;h3 id=&#34;2-实时威胁检测&#34;&gt;2. 实时威胁检测&lt;/h3&gt;
&lt;p&gt;CNAPP 提供实时的先进威胁检测能力。它利用云原生安全控件和运行时可见性技术，及时识别安全事件、异常和威胁迹象（IOCs）。CNAPP 提供端到端的检测，使组织能够迅速响应新兴威胁并最小化安全漏洞的影响。&lt;/p&gt;
&lt;h3 id=&#34;3-简化符合性&#34;&gt;3. 简化符合性&lt;/h3&gt;
&lt;p&gt;CNAPP 通过提供符合行业标准和最佳实践的安全控件和机制，帮助组织满足监管和合规要求。它有助于识别和消除安全漏洞，确保应用程序符合 PCI DSS、HIPAA、GDPR 等合规框架。&lt;/p&gt;
&lt;h3 id=&#34;4-改善-devops-协作&#34;&gt;4. 改善 DevOps 协作&lt;/h3&gt;
&lt;p&gt;CNAPP 促进了开发和安全团队之间的协作和对齐，并在安全和数字创新之间找到了平衡。它与&lt;a href=&#34;https://sysdig.com/blog/essential-workflows-for-secure-devops/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DevOps 工具和流程&lt;/a&gt;集成，使安全能够无缝地纳入持续集成和持续部署（CI/CD）流程中。&lt;/p&gt;
&lt;h3 id=&#34;5-操作效率&#34;&gt;5. 操作效率&lt;/h3&gt;
&lt;p&gt;通过整合安全控件并提供集中式管理，CNAPP 简化了安全操作。它为检测、响应和管理安全事件提供了一个单一的视图。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;使用 CNAPP，组织可以整合云原生安全工具，简化操作，优先考虑风险，增强其整体安全姿态。&lt;/p&gt;
&lt;p&gt;通过利用 CNAPP 的运行时洞察力，企业可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于组织使用的内容&lt;strong&gt;优先考虑风险&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;实现持续和&lt;strong&gt;实时检测&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;攻击路径分析&lt;/strong&gt;增强数据可视化，突出环境配置中存在的差距。&lt;/li&gt;
&lt;li&gt;在云环境中&lt;strong&gt;实现端到端的检测&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
